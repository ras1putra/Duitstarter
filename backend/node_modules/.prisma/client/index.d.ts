
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model address
 * 
 */
export type address = $Result.DefaultSelection<Prisma.$addressPayload>
/**
 * Model alamat_usaha
 * 
 */
export type alamat_usaha = $Result.DefaultSelection<Prisma.$alamat_usahaPayload>
/**
 * Model campaign
 * 
 */
export type campaign = $Result.DefaultSelection<Prisma.$campaignPayload>
/**
 * Model campaign_update
 * 
 */
export type campaign_update = $Result.DefaultSelection<Prisma.$campaign_updatePayload>
/**
 * Model community
 * 
 */
export type community = $Result.DefaultSelection<Prisma.$communityPayload>
/**
 * Model community_chat
 * 
 */
export type community_chat = $Result.DefaultSelection<Prisma.$community_chatPayload>
/**
 * Model community_membership
 * 
 */
export type community_membership = $Result.DefaultSelection<Prisma.$community_membershipPayload>
/**
 * Model community_proposal
 * 
 */
export type community_proposal = $Result.DefaultSelection<Prisma.$community_proposalPayload>
/**
 * Model contact_usaha
 * 
 */
export type contact_usaha = $Result.DefaultSelection<Prisma.$contact_usahaPayload>
/**
 * Model crowdfunding
 * 
 */
export type crowdfunding = $Result.DefaultSelection<Prisma.$crowdfundingPayload>
/**
 * Model data_rekening
 * 
 */
export type data_rekening = $Result.DefaultSelection<Prisma.$data_rekeningPayload>
/**
 * Model discussion
 * 
 */
export type discussion = $Result.DefaultSelection<Prisma.$discussionPayload>
/**
 * Model document
 * 
 */
export type document = $Result.DefaultSelection<Prisma.$documentPayload>
/**
 * Model document_legal
 * 
 */
export type document_legal = $Result.DefaultSelection<Prisma.$document_legalPayload>
/**
 * Model document_proposal
 * 
 */
export type document_proposal = $Result.DefaultSelection<Prisma.$document_proposalPayload>
/**
 * Model foto_dokumen
 * 
 */
export type foto_dokumen = $Result.DefaultSelection<Prisma.$foto_dokumenPayload>
/**
 * Model highlight_product
 * 
 */
export type highlight_product = $Result.DefaultSelection<Prisma.$highlight_productPayload>
/**
 * Model investment
 * 
 */
export type investment = $Result.DefaultSelection<Prisma.$investmentPayload>
/**
 * Model kyc_level_1
 * 
 */
export type kyc_level_1 = $Result.DefaultSelection<Prisma.$kyc_level_1Payload>
/**
 * Model kyc_level_2
 * 
 */
export type kyc_level_2 = $Result.DefaultSelection<Prisma.$kyc_level_2Payload>
/**
 * Model legalitas_usaha
 * 
 */
export type legalitas_usaha = $Result.DefaultSelection<Prisma.$legalitas_usahaPayload>
/**
 * Model pesan_campaign
 * 
 */
export type pesan_campaign = $Result.DefaultSelection<Prisma.$pesan_campaignPayload>
/**
 * Model product_information
 * 
 */
export type product_information = $Result.DefaultSelection<Prisma.$product_informationPayload>
/**
 * Model refund
 * 
 */
export type refund = $Result.DefaultSelection<Prisma.$refundPayload>
/**
 * Model replies_discussion
 * 
 */
export type replies_discussion = $Result.DefaultSelection<Prisma.$replies_discussionPayload>
/**
 * Model social_media_usaha
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type social_media_usaha = $Result.DefaultSelection<Prisma.$social_media_usahaPayload>
/**
 * Model team_campaign
 * 
 */
export type team_campaign = $Result.DefaultSelection<Prisma.$team_campaignPayload>
/**
 * Model transaction
 * 
 */
export type transaction = $Result.DefaultSelection<Prisma.$transactionPayload>
/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model user_voted
 * 
 */
export type user_voted = $Result.DefaultSelection<Prisma.$user_votedPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const tipe_usaha_enum: {
  MIKRO: 'MIKRO',
  KECIL: 'KECIL',
  MENENGAH: 'MENENGAH',
  BESAR: 'BESAR'
};

export type tipe_usaha_enum = (typeof tipe_usaha_enum)[keyof typeof tipe_usaha_enum]


export const jenis_usaha_enum: {
  PERTANIAN: 'PERTANIAN',
  PERDAGANGAN: 'PERDAGANGAN',
  JASA: 'JASA',
  INDUSTRI: 'INDUSTRI',
  MAKANAN: 'MAKANAN',
  MINUMAN: 'MINUMAN',
  TEKNOLOGI: 'TEKNOLOGI',
  KREATIF: 'KREATIF',
  LAINNYA: 'LAINNYA'
};

export type jenis_usaha_enum = (typeof jenis_usaha_enum)[keyof typeof jenis_usaha_enum]


export const kyc_status_enum: {
  PENDING: 'PENDING',
  REVIEWED: 'REVIEWED'
};

export type kyc_status_enum = (typeof kyc_status_enum)[keyof typeof kyc_status_enum]


export const transaction_type_enum: {
  INVESTMENT: 'INVESTMENT',
  REFUND: 'REFUND'
};

export type transaction_type_enum = (typeof transaction_type_enum)[keyof typeof transaction_type_enum]


export const transaction_status_enum: {
  PENDING: 'PENDING',
  SUCCESS: 'SUCCESS',
  FAILED: 'FAILED'
};

export type transaction_status_enum = (typeof transaction_status_enum)[keyof typeof transaction_status_enum]


export const user_roles: {
  USER: 'USER',
  FUNDRAISER: 'FUNDRAISER',
  ADMIN: 'ADMIN'
};

export type user_roles = (typeof user_roles)[keyof typeof user_roles]

}

export type tipe_usaha_enum = $Enums.tipe_usaha_enum

export const tipe_usaha_enum: typeof $Enums.tipe_usaha_enum

export type jenis_usaha_enum = $Enums.jenis_usaha_enum

export const jenis_usaha_enum: typeof $Enums.jenis_usaha_enum

export type kyc_status_enum = $Enums.kyc_status_enum

export const kyc_status_enum: typeof $Enums.kyc_status_enum

export type transaction_type_enum = $Enums.transaction_type_enum

export const transaction_type_enum: typeof $Enums.transaction_type_enum

export type transaction_status_enum = $Enums.transaction_status_enum

export const transaction_status_enum: typeof $Enums.transaction_status_enum

export type user_roles = $Enums.user_roles

export const user_roles: typeof $Enums.user_roles

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Addresses
 * const addresses = await prisma.address.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Addresses
   * const addresses = await prisma.address.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.address`: Exposes CRUD operations for the **address** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.address.findMany()
    * ```
    */
  get address(): Prisma.addressDelegate<ExtArgs>;

  /**
   * `prisma.alamat_usaha`: Exposes CRUD operations for the **alamat_usaha** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alamat_usahas
    * const alamat_usahas = await prisma.alamat_usaha.findMany()
    * ```
    */
  get alamat_usaha(): Prisma.alamat_usahaDelegate<ExtArgs>;

  /**
   * `prisma.campaign`: Exposes CRUD operations for the **campaign** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Campaigns
    * const campaigns = await prisma.campaign.findMany()
    * ```
    */
  get campaign(): Prisma.campaignDelegate<ExtArgs>;

  /**
   * `prisma.campaign_update`: Exposes CRUD operations for the **campaign_update** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Campaign_updates
    * const campaign_updates = await prisma.campaign_update.findMany()
    * ```
    */
  get campaign_update(): Prisma.campaign_updateDelegate<ExtArgs>;

  /**
   * `prisma.community`: Exposes CRUD operations for the **community** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communities
    * const communities = await prisma.community.findMany()
    * ```
    */
  get community(): Prisma.communityDelegate<ExtArgs>;

  /**
   * `prisma.community_chat`: Exposes CRUD operations for the **community_chat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Community_chats
    * const community_chats = await prisma.community_chat.findMany()
    * ```
    */
  get community_chat(): Prisma.community_chatDelegate<ExtArgs>;

  /**
   * `prisma.community_membership`: Exposes CRUD operations for the **community_membership** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Community_memberships
    * const community_memberships = await prisma.community_membership.findMany()
    * ```
    */
  get community_membership(): Prisma.community_membershipDelegate<ExtArgs>;

  /**
   * `prisma.community_proposal`: Exposes CRUD operations for the **community_proposal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Community_proposals
    * const community_proposals = await prisma.community_proposal.findMany()
    * ```
    */
  get community_proposal(): Prisma.community_proposalDelegate<ExtArgs>;

  /**
   * `prisma.contact_usaha`: Exposes CRUD operations for the **contact_usaha** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contact_usahas
    * const contact_usahas = await prisma.contact_usaha.findMany()
    * ```
    */
  get contact_usaha(): Prisma.contact_usahaDelegate<ExtArgs>;

  /**
   * `prisma.crowdfunding`: Exposes CRUD operations for the **crowdfunding** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Crowdfundings
    * const crowdfundings = await prisma.crowdfunding.findMany()
    * ```
    */
  get crowdfunding(): Prisma.crowdfundingDelegate<ExtArgs>;

  /**
   * `prisma.data_rekening`: Exposes CRUD operations for the **data_rekening** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Data_rekenings
    * const data_rekenings = await prisma.data_rekening.findMany()
    * ```
    */
  get data_rekening(): Prisma.data_rekeningDelegate<ExtArgs>;

  /**
   * `prisma.discussion`: Exposes CRUD operations for the **discussion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Discussions
    * const discussions = await prisma.discussion.findMany()
    * ```
    */
  get discussion(): Prisma.discussionDelegate<ExtArgs>;

  /**
   * `prisma.document`: Exposes CRUD operations for the **document** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documents
    * const documents = await prisma.document.findMany()
    * ```
    */
  get document(): Prisma.documentDelegate<ExtArgs>;

  /**
   * `prisma.document_legal`: Exposes CRUD operations for the **document_legal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Document_legals
    * const document_legals = await prisma.document_legal.findMany()
    * ```
    */
  get document_legal(): Prisma.document_legalDelegate<ExtArgs>;

  /**
   * `prisma.document_proposal`: Exposes CRUD operations for the **document_proposal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Document_proposals
    * const document_proposals = await prisma.document_proposal.findMany()
    * ```
    */
  get document_proposal(): Prisma.document_proposalDelegate<ExtArgs>;

  /**
   * `prisma.foto_dokumen`: Exposes CRUD operations for the **foto_dokumen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Foto_dokumen
    * const foto_dokumen = await prisma.foto_dokumen.findMany()
    * ```
    */
  get foto_dokumen(): Prisma.foto_dokumenDelegate<ExtArgs>;

  /**
   * `prisma.highlight_product`: Exposes CRUD operations for the **highlight_product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Highlight_products
    * const highlight_products = await prisma.highlight_product.findMany()
    * ```
    */
  get highlight_product(): Prisma.highlight_productDelegate<ExtArgs>;

  /**
   * `prisma.investment`: Exposes CRUD operations for the **investment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Investments
    * const investments = await prisma.investment.findMany()
    * ```
    */
  get investment(): Prisma.investmentDelegate<ExtArgs>;

  /**
   * `prisma.kyc_level_1`: Exposes CRUD operations for the **kyc_level_1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kyc_level_1s
    * const kyc_level_1s = await prisma.kyc_level_1.findMany()
    * ```
    */
  get kyc_level_1(): Prisma.kyc_level_1Delegate<ExtArgs>;

  /**
   * `prisma.kyc_level_2`: Exposes CRUD operations for the **kyc_level_2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kyc_level_2s
    * const kyc_level_2s = await prisma.kyc_level_2.findMany()
    * ```
    */
  get kyc_level_2(): Prisma.kyc_level_2Delegate<ExtArgs>;

  /**
   * `prisma.legalitas_usaha`: Exposes CRUD operations for the **legalitas_usaha** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Legalitas_usahas
    * const legalitas_usahas = await prisma.legalitas_usaha.findMany()
    * ```
    */
  get legalitas_usaha(): Prisma.legalitas_usahaDelegate<ExtArgs>;

  /**
   * `prisma.pesan_campaign`: Exposes CRUD operations for the **pesan_campaign** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pesan_campaigns
    * const pesan_campaigns = await prisma.pesan_campaign.findMany()
    * ```
    */
  get pesan_campaign(): Prisma.pesan_campaignDelegate<ExtArgs>;

  /**
   * `prisma.product_information`: Exposes CRUD operations for the **product_information** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_informations
    * const product_informations = await prisma.product_information.findMany()
    * ```
    */
  get product_information(): Prisma.product_informationDelegate<ExtArgs>;

  /**
   * `prisma.refund`: Exposes CRUD operations for the **refund** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Refunds
    * const refunds = await prisma.refund.findMany()
    * ```
    */
  get refund(): Prisma.refundDelegate<ExtArgs>;

  /**
   * `prisma.replies_discussion`: Exposes CRUD operations for the **replies_discussion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Replies_discussions
    * const replies_discussions = await prisma.replies_discussion.findMany()
    * ```
    */
  get replies_discussion(): Prisma.replies_discussionDelegate<ExtArgs>;

  /**
   * `prisma.social_media_usaha`: Exposes CRUD operations for the **social_media_usaha** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Social_media_usahas
    * const social_media_usahas = await prisma.social_media_usaha.findMany()
    * ```
    */
  get social_media_usaha(): Prisma.social_media_usahaDelegate<ExtArgs>;

  /**
   * `prisma.team_campaign`: Exposes CRUD operations for the **team_campaign** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Team_campaigns
    * const team_campaigns = await prisma.team_campaign.findMany()
    * ```
    */
  get team_campaign(): Prisma.team_campaignDelegate<ExtArgs>;

  /**
   * `prisma.transaction`: Exposes CRUD operations for the **transaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transactions
    * const transactions = await prisma.transaction.findMany()
    * ```
    */
  get transaction(): Prisma.transactionDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs>;

  /**
   * `prisma.user_voted`: Exposes CRUD operations for the **user_voted** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_voteds
    * const user_voteds = await prisma.user_voted.findMany()
    * ```
    */
  get user_voted(): Prisma.user_votedDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.14.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    address: 'address',
    alamat_usaha: 'alamat_usaha',
    campaign: 'campaign',
    campaign_update: 'campaign_update',
    community: 'community',
    community_chat: 'community_chat',
    community_membership: 'community_membership',
    community_proposal: 'community_proposal',
    contact_usaha: 'contact_usaha',
    crowdfunding: 'crowdfunding',
    data_rekening: 'data_rekening',
    discussion: 'discussion',
    document: 'document',
    document_legal: 'document_legal',
    document_proposal: 'document_proposal',
    foto_dokumen: 'foto_dokumen',
    highlight_product: 'highlight_product',
    investment: 'investment',
    kyc_level_1: 'kyc_level_1',
    kyc_level_2: 'kyc_level_2',
    legalitas_usaha: 'legalitas_usaha',
    pesan_campaign: 'pesan_campaign',
    product_information: 'product_information',
    refund: 'refund',
    replies_discussion: 'replies_discussion',
    social_media_usaha: 'social_media_usaha',
    team_campaign: 'team_campaign',
    transaction: 'transaction',
    user: 'user',
    user_voted: 'user_voted'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'address' | 'alamat_usaha' | 'campaign' | 'campaign_update' | 'community' | 'community_chat' | 'community_membership' | 'community_proposal' | 'contact_usaha' | 'crowdfunding' | 'data_rekening' | 'discussion' | 'document' | 'document_legal' | 'document_proposal' | 'foto_dokumen' | 'highlight_product' | 'investment' | 'kyc_level_1' | 'kyc_level_2' | 'legalitas_usaha' | 'pesan_campaign' | 'product_information' | 'refund' | 'replies_discussion' | 'social_media_usaha' | 'team_campaign' | 'transaction' | 'user' | 'user_voted'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      address: {
        payload: Prisma.$addressPayload<ExtArgs>
        fields: Prisma.addressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.addressFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.addressFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload>
          }
          findFirst: {
            args: Prisma.addressFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.addressFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload>
          }
          findMany: {
            args: Prisma.addressFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload>[]
          }
          create: {
            args: Prisma.addressCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload>
          }
          createMany: {
            args: Prisma.addressCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.addressCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload>[]
          }
          delete: {
            args: Prisma.addressDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload>
          }
          update: {
            args: Prisma.addressUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload>
          }
          deleteMany: {
            args: Prisma.addressDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.addressUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.addressUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$addressPayload>
          }
          aggregate: {
            args: Prisma.AddressAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAddress>
          }
          groupBy: {
            args: Prisma.addressGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.addressCountArgs<ExtArgs>,
            result: $Utils.Optional<AddressCountAggregateOutputType> | number
          }
        }
      }
      alamat_usaha: {
        payload: Prisma.$alamat_usahaPayload<ExtArgs>
        fields: Prisma.alamat_usahaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.alamat_usahaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.alamat_usahaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload>
          }
          findFirst: {
            args: Prisma.alamat_usahaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.alamat_usahaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload>
          }
          findMany: {
            args: Prisma.alamat_usahaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload>[]
          }
          create: {
            args: Prisma.alamat_usahaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload>
          }
          createMany: {
            args: Prisma.alamat_usahaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.alamat_usahaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload>[]
          }
          delete: {
            args: Prisma.alamat_usahaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload>
          }
          update: {
            args: Prisma.alamat_usahaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload>
          }
          deleteMany: {
            args: Prisma.alamat_usahaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.alamat_usahaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.alamat_usahaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alamat_usahaPayload>
          }
          aggregate: {
            args: Prisma.Alamat_usahaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAlamat_usaha>
          }
          groupBy: {
            args: Prisma.alamat_usahaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Alamat_usahaGroupByOutputType>[]
          }
          count: {
            args: Prisma.alamat_usahaCountArgs<ExtArgs>,
            result: $Utils.Optional<Alamat_usahaCountAggregateOutputType> | number
          }
        }
      }
      campaign: {
        payload: Prisma.$campaignPayload<ExtArgs>
        fields: Prisma.campaignFieldRefs
        operations: {
          findUnique: {
            args: Prisma.campaignFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.campaignFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload>
          }
          findFirst: {
            args: Prisma.campaignFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.campaignFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload>
          }
          findMany: {
            args: Prisma.campaignFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload>[]
          }
          create: {
            args: Prisma.campaignCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload>
          }
          createMany: {
            args: Prisma.campaignCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.campaignCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload>[]
          }
          delete: {
            args: Prisma.campaignDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload>
          }
          update: {
            args: Prisma.campaignUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload>
          }
          deleteMany: {
            args: Prisma.campaignDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.campaignUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.campaignUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaignPayload>
          }
          aggregate: {
            args: Prisma.CampaignAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCampaign>
          }
          groupBy: {
            args: Prisma.campaignGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CampaignGroupByOutputType>[]
          }
          count: {
            args: Prisma.campaignCountArgs<ExtArgs>,
            result: $Utils.Optional<CampaignCountAggregateOutputType> | number
          }
        }
      }
      campaign_update: {
        payload: Prisma.$campaign_updatePayload<ExtArgs>
        fields: Prisma.campaign_updateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.campaign_updateFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.campaign_updateFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload>
          }
          findFirst: {
            args: Prisma.campaign_updateFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.campaign_updateFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload>
          }
          findMany: {
            args: Prisma.campaign_updateFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload>[]
          }
          create: {
            args: Prisma.campaign_updateCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload>
          }
          createMany: {
            args: Prisma.campaign_updateCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.campaign_updateCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload>[]
          }
          delete: {
            args: Prisma.campaign_updateDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload>
          }
          update: {
            args: Prisma.campaign_updateUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload>
          }
          deleteMany: {
            args: Prisma.campaign_updateDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.campaign_updateUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.campaign_updateUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$campaign_updatePayload>
          }
          aggregate: {
            args: Prisma.Campaign_updateAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCampaign_update>
          }
          groupBy: {
            args: Prisma.campaign_updateGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Campaign_updateGroupByOutputType>[]
          }
          count: {
            args: Prisma.campaign_updateCountArgs<ExtArgs>,
            result: $Utils.Optional<Campaign_updateCountAggregateOutputType> | number
          }
        }
      }
      community: {
        payload: Prisma.$communityPayload<ExtArgs>
        fields: Prisma.communityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.communityFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.communityFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          findFirst: {
            args: Prisma.communityFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.communityFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          findMany: {
            args: Prisma.communityFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload>[]
          }
          create: {
            args: Prisma.communityCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          createMany: {
            args: Prisma.communityCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.communityCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload>[]
          }
          delete: {
            args: Prisma.communityDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          update: {
            args: Prisma.communityUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          deleteMany: {
            args: Prisma.communityDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.communityUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.communityUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          aggregate: {
            args: Prisma.CommunityAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCommunity>
          }
          groupBy: {
            args: Prisma.communityGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CommunityGroupByOutputType>[]
          }
          count: {
            args: Prisma.communityCountArgs<ExtArgs>,
            result: $Utils.Optional<CommunityCountAggregateOutputType> | number
          }
        }
      }
      community_chat: {
        payload: Prisma.$community_chatPayload<ExtArgs>
        fields: Prisma.community_chatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.community_chatFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.community_chatFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload>
          }
          findFirst: {
            args: Prisma.community_chatFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.community_chatFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload>
          }
          findMany: {
            args: Prisma.community_chatFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload>[]
          }
          create: {
            args: Prisma.community_chatCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload>
          }
          createMany: {
            args: Prisma.community_chatCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.community_chatCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload>[]
          }
          delete: {
            args: Prisma.community_chatDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload>
          }
          update: {
            args: Prisma.community_chatUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload>
          }
          deleteMany: {
            args: Prisma.community_chatDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.community_chatUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.community_chatUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_chatPayload>
          }
          aggregate: {
            args: Prisma.Community_chatAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCommunity_chat>
          }
          groupBy: {
            args: Prisma.community_chatGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Community_chatGroupByOutputType>[]
          }
          count: {
            args: Prisma.community_chatCountArgs<ExtArgs>,
            result: $Utils.Optional<Community_chatCountAggregateOutputType> | number
          }
        }
      }
      community_membership: {
        payload: Prisma.$community_membershipPayload<ExtArgs>
        fields: Prisma.community_membershipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.community_membershipFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.community_membershipFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload>
          }
          findFirst: {
            args: Prisma.community_membershipFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.community_membershipFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload>
          }
          findMany: {
            args: Prisma.community_membershipFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload>[]
          }
          create: {
            args: Prisma.community_membershipCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload>
          }
          createMany: {
            args: Prisma.community_membershipCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.community_membershipCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload>[]
          }
          delete: {
            args: Prisma.community_membershipDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload>
          }
          update: {
            args: Prisma.community_membershipUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload>
          }
          deleteMany: {
            args: Prisma.community_membershipDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.community_membershipUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.community_membershipUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_membershipPayload>
          }
          aggregate: {
            args: Prisma.Community_membershipAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCommunity_membership>
          }
          groupBy: {
            args: Prisma.community_membershipGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Community_membershipGroupByOutputType>[]
          }
          count: {
            args: Prisma.community_membershipCountArgs<ExtArgs>,
            result: $Utils.Optional<Community_membershipCountAggregateOutputType> | number
          }
        }
      }
      community_proposal: {
        payload: Prisma.$community_proposalPayload<ExtArgs>
        fields: Prisma.community_proposalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.community_proposalFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.community_proposalFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload>
          }
          findFirst: {
            args: Prisma.community_proposalFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.community_proposalFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload>
          }
          findMany: {
            args: Prisma.community_proposalFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload>[]
          }
          create: {
            args: Prisma.community_proposalCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload>
          }
          createMany: {
            args: Prisma.community_proposalCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.community_proposalCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload>[]
          }
          delete: {
            args: Prisma.community_proposalDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload>
          }
          update: {
            args: Prisma.community_proposalUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload>
          }
          deleteMany: {
            args: Prisma.community_proposalDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.community_proposalUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.community_proposalUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$community_proposalPayload>
          }
          aggregate: {
            args: Prisma.Community_proposalAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCommunity_proposal>
          }
          groupBy: {
            args: Prisma.community_proposalGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Community_proposalGroupByOutputType>[]
          }
          count: {
            args: Prisma.community_proposalCountArgs<ExtArgs>,
            result: $Utils.Optional<Community_proposalCountAggregateOutputType> | number
          }
        }
      }
      contact_usaha: {
        payload: Prisma.$contact_usahaPayload<ExtArgs>
        fields: Prisma.contact_usahaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.contact_usahaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.contact_usahaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload>
          }
          findFirst: {
            args: Prisma.contact_usahaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.contact_usahaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload>
          }
          findMany: {
            args: Prisma.contact_usahaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload>[]
          }
          create: {
            args: Prisma.contact_usahaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload>
          }
          createMany: {
            args: Prisma.contact_usahaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.contact_usahaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload>[]
          }
          delete: {
            args: Prisma.contact_usahaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload>
          }
          update: {
            args: Prisma.contact_usahaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload>
          }
          deleteMany: {
            args: Prisma.contact_usahaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.contact_usahaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.contact_usahaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_usahaPayload>
          }
          aggregate: {
            args: Prisma.Contact_usahaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateContact_usaha>
          }
          groupBy: {
            args: Prisma.contact_usahaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Contact_usahaGroupByOutputType>[]
          }
          count: {
            args: Prisma.contact_usahaCountArgs<ExtArgs>,
            result: $Utils.Optional<Contact_usahaCountAggregateOutputType> | number
          }
        }
      }
      crowdfunding: {
        payload: Prisma.$crowdfundingPayload<ExtArgs>
        fields: Prisma.crowdfundingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.crowdfundingFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.crowdfundingFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload>
          }
          findFirst: {
            args: Prisma.crowdfundingFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.crowdfundingFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload>
          }
          findMany: {
            args: Prisma.crowdfundingFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload>[]
          }
          create: {
            args: Prisma.crowdfundingCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload>
          }
          createMany: {
            args: Prisma.crowdfundingCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.crowdfundingCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload>[]
          }
          delete: {
            args: Prisma.crowdfundingDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload>
          }
          update: {
            args: Prisma.crowdfundingUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload>
          }
          deleteMany: {
            args: Prisma.crowdfundingDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.crowdfundingUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.crowdfundingUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$crowdfundingPayload>
          }
          aggregate: {
            args: Prisma.CrowdfundingAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCrowdfunding>
          }
          groupBy: {
            args: Prisma.crowdfundingGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CrowdfundingGroupByOutputType>[]
          }
          count: {
            args: Prisma.crowdfundingCountArgs<ExtArgs>,
            result: $Utils.Optional<CrowdfundingCountAggregateOutputType> | number
          }
        }
      }
      data_rekening: {
        payload: Prisma.$data_rekeningPayload<ExtArgs>
        fields: Prisma.data_rekeningFieldRefs
        operations: {
          findUnique: {
            args: Prisma.data_rekeningFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.data_rekeningFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload>
          }
          findFirst: {
            args: Prisma.data_rekeningFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.data_rekeningFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload>
          }
          findMany: {
            args: Prisma.data_rekeningFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload>[]
          }
          create: {
            args: Prisma.data_rekeningCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload>
          }
          createMany: {
            args: Prisma.data_rekeningCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.data_rekeningCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload>[]
          }
          delete: {
            args: Prisma.data_rekeningDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload>
          }
          update: {
            args: Prisma.data_rekeningUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload>
          }
          deleteMany: {
            args: Prisma.data_rekeningDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.data_rekeningUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.data_rekeningUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$data_rekeningPayload>
          }
          aggregate: {
            args: Prisma.Data_rekeningAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateData_rekening>
          }
          groupBy: {
            args: Prisma.data_rekeningGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Data_rekeningGroupByOutputType>[]
          }
          count: {
            args: Prisma.data_rekeningCountArgs<ExtArgs>,
            result: $Utils.Optional<Data_rekeningCountAggregateOutputType> | number
          }
        }
      }
      discussion: {
        payload: Prisma.$discussionPayload<ExtArgs>
        fields: Prisma.discussionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.discussionFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.discussionFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload>
          }
          findFirst: {
            args: Prisma.discussionFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.discussionFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload>
          }
          findMany: {
            args: Prisma.discussionFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload>[]
          }
          create: {
            args: Prisma.discussionCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload>
          }
          createMany: {
            args: Prisma.discussionCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.discussionCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload>[]
          }
          delete: {
            args: Prisma.discussionDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload>
          }
          update: {
            args: Prisma.discussionUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload>
          }
          deleteMany: {
            args: Prisma.discussionDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.discussionUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.discussionUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$discussionPayload>
          }
          aggregate: {
            args: Prisma.DiscussionAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDiscussion>
          }
          groupBy: {
            args: Prisma.discussionGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DiscussionGroupByOutputType>[]
          }
          count: {
            args: Prisma.discussionCountArgs<ExtArgs>,
            result: $Utils.Optional<DiscussionCountAggregateOutputType> | number
          }
        }
      }
      document: {
        payload: Prisma.$documentPayload<ExtArgs>
        fields: Prisma.documentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.documentFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.documentFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload>
          }
          findFirst: {
            args: Prisma.documentFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.documentFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload>
          }
          findMany: {
            args: Prisma.documentFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload>[]
          }
          create: {
            args: Prisma.documentCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload>
          }
          createMany: {
            args: Prisma.documentCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.documentCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload>[]
          }
          delete: {
            args: Prisma.documentDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload>
          }
          update: {
            args: Prisma.documentUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload>
          }
          deleteMany: {
            args: Prisma.documentDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.documentUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.documentUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$documentPayload>
          }
          aggregate: {
            args: Prisma.DocumentAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDocument>
          }
          groupBy: {
            args: Prisma.documentGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.documentCountArgs<ExtArgs>,
            result: $Utils.Optional<DocumentCountAggregateOutputType> | number
          }
        }
      }
      document_legal: {
        payload: Prisma.$document_legalPayload<ExtArgs>
        fields: Prisma.document_legalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.document_legalFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.document_legalFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload>
          }
          findFirst: {
            args: Prisma.document_legalFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.document_legalFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload>
          }
          findMany: {
            args: Prisma.document_legalFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload>[]
          }
          create: {
            args: Prisma.document_legalCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload>
          }
          createMany: {
            args: Prisma.document_legalCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.document_legalCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload>[]
          }
          delete: {
            args: Prisma.document_legalDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload>
          }
          update: {
            args: Prisma.document_legalUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload>
          }
          deleteMany: {
            args: Prisma.document_legalDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.document_legalUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.document_legalUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_legalPayload>
          }
          aggregate: {
            args: Prisma.Document_legalAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDocument_legal>
          }
          groupBy: {
            args: Prisma.document_legalGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Document_legalGroupByOutputType>[]
          }
          count: {
            args: Prisma.document_legalCountArgs<ExtArgs>,
            result: $Utils.Optional<Document_legalCountAggregateOutputType> | number
          }
        }
      }
      document_proposal: {
        payload: Prisma.$document_proposalPayload<ExtArgs>
        fields: Prisma.document_proposalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.document_proposalFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.document_proposalFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload>
          }
          findFirst: {
            args: Prisma.document_proposalFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.document_proposalFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload>
          }
          findMany: {
            args: Prisma.document_proposalFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload>[]
          }
          create: {
            args: Prisma.document_proposalCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload>
          }
          createMany: {
            args: Prisma.document_proposalCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.document_proposalCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload>[]
          }
          delete: {
            args: Prisma.document_proposalDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload>
          }
          update: {
            args: Prisma.document_proposalUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload>
          }
          deleteMany: {
            args: Prisma.document_proposalDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.document_proposalUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.document_proposalUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_proposalPayload>
          }
          aggregate: {
            args: Prisma.Document_proposalAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDocument_proposal>
          }
          groupBy: {
            args: Prisma.document_proposalGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Document_proposalGroupByOutputType>[]
          }
          count: {
            args: Prisma.document_proposalCountArgs<ExtArgs>,
            result: $Utils.Optional<Document_proposalCountAggregateOutputType> | number
          }
        }
      }
      foto_dokumen: {
        payload: Prisma.$foto_dokumenPayload<ExtArgs>
        fields: Prisma.foto_dokumenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.foto_dokumenFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.foto_dokumenFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload>
          }
          findFirst: {
            args: Prisma.foto_dokumenFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.foto_dokumenFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload>
          }
          findMany: {
            args: Prisma.foto_dokumenFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload>[]
          }
          create: {
            args: Prisma.foto_dokumenCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload>
          }
          createMany: {
            args: Prisma.foto_dokumenCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.foto_dokumenCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload>[]
          }
          delete: {
            args: Prisma.foto_dokumenDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload>
          }
          update: {
            args: Prisma.foto_dokumenUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload>
          }
          deleteMany: {
            args: Prisma.foto_dokumenDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.foto_dokumenUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.foto_dokumenUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$foto_dokumenPayload>
          }
          aggregate: {
            args: Prisma.Foto_dokumenAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFoto_dokumen>
          }
          groupBy: {
            args: Prisma.foto_dokumenGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Foto_dokumenGroupByOutputType>[]
          }
          count: {
            args: Prisma.foto_dokumenCountArgs<ExtArgs>,
            result: $Utils.Optional<Foto_dokumenCountAggregateOutputType> | number
          }
        }
      }
      highlight_product: {
        payload: Prisma.$highlight_productPayload<ExtArgs>
        fields: Prisma.highlight_productFieldRefs
        operations: {
          findUnique: {
            args: Prisma.highlight_productFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.highlight_productFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload>
          }
          findFirst: {
            args: Prisma.highlight_productFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.highlight_productFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload>
          }
          findMany: {
            args: Prisma.highlight_productFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload>[]
          }
          create: {
            args: Prisma.highlight_productCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload>
          }
          createMany: {
            args: Prisma.highlight_productCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.highlight_productCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload>[]
          }
          delete: {
            args: Prisma.highlight_productDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload>
          }
          update: {
            args: Prisma.highlight_productUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload>
          }
          deleteMany: {
            args: Prisma.highlight_productDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.highlight_productUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.highlight_productUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$highlight_productPayload>
          }
          aggregate: {
            args: Prisma.Highlight_productAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHighlight_product>
          }
          groupBy: {
            args: Prisma.highlight_productGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Highlight_productGroupByOutputType>[]
          }
          count: {
            args: Prisma.highlight_productCountArgs<ExtArgs>,
            result: $Utils.Optional<Highlight_productCountAggregateOutputType> | number
          }
        }
      }
      investment: {
        payload: Prisma.$investmentPayload<ExtArgs>
        fields: Prisma.investmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.investmentFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.investmentFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload>
          }
          findFirst: {
            args: Prisma.investmentFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.investmentFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload>
          }
          findMany: {
            args: Prisma.investmentFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload>[]
          }
          create: {
            args: Prisma.investmentCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload>
          }
          createMany: {
            args: Prisma.investmentCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.investmentCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload>[]
          }
          delete: {
            args: Prisma.investmentDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload>
          }
          update: {
            args: Prisma.investmentUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload>
          }
          deleteMany: {
            args: Prisma.investmentDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.investmentUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.investmentUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$investmentPayload>
          }
          aggregate: {
            args: Prisma.InvestmentAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateInvestment>
          }
          groupBy: {
            args: Prisma.investmentGroupByArgs<ExtArgs>,
            result: $Utils.Optional<InvestmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.investmentCountArgs<ExtArgs>,
            result: $Utils.Optional<InvestmentCountAggregateOutputType> | number
          }
        }
      }
      kyc_level_1: {
        payload: Prisma.$kyc_level_1Payload<ExtArgs>
        fields: Prisma.kyc_level_1FieldRefs
        operations: {
          findUnique: {
            args: Prisma.kyc_level_1FindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.kyc_level_1FindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload>
          }
          findFirst: {
            args: Prisma.kyc_level_1FindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload> | null
          }
          findFirstOrThrow: {
            args: Prisma.kyc_level_1FindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload>
          }
          findMany: {
            args: Prisma.kyc_level_1FindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload>[]
          }
          create: {
            args: Prisma.kyc_level_1CreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload>
          }
          createMany: {
            args: Prisma.kyc_level_1CreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.kyc_level_1CreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload>[]
          }
          delete: {
            args: Prisma.kyc_level_1DeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload>
          }
          update: {
            args: Prisma.kyc_level_1UpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload>
          }
          deleteMany: {
            args: Prisma.kyc_level_1DeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.kyc_level_1UpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.kyc_level_1UpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_1Payload>
          }
          aggregate: {
            args: Prisma.Kyc_level_1AggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateKyc_level_1>
          }
          groupBy: {
            args: Prisma.kyc_level_1GroupByArgs<ExtArgs>,
            result: $Utils.Optional<Kyc_level_1GroupByOutputType>[]
          }
          count: {
            args: Prisma.kyc_level_1CountArgs<ExtArgs>,
            result: $Utils.Optional<Kyc_level_1CountAggregateOutputType> | number
          }
        }
      }
      kyc_level_2: {
        payload: Prisma.$kyc_level_2Payload<ExtArgs>
        fields: Prisma.kyc_level_2FieldRefs
        operations: {
          findUnique: {
            args: Prisma.kyc_level_2FindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.kyc_level_2FindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload>
          }
          findFirst: {
            args: Prisma.kyc_level_2FindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload> | null
          }
          findFirstOrThrow: {
            args: Prisma.kyc_level_2FindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload>
          }
          findMany: {
            args: Prisma.kyc_level_2FindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload>[]
          }
          create: {
            args: Prisma.kyc_level_2CreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload>
          }
          createMany: {
            args: Prisma.kyc_level_2CreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.kyc_level_2CreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload>[]
          }
          delete: {
            args: Prisma.kyc_level_2DeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload>
          }
          update: {
            args: Prisma.kyc_level_2UpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload>
          }
          deleteMany: {
            args: Prisma.kyc_level_2DeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.kyc_level_2UpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.kyc_level_2UpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kyc_level_2Payload>
          }
          aggregate: {
            args: Prisma.Kyc_level_2AggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateKyc_level_2>
          }
          groupBy: {
            args: Prisma.kyc_level_2GroupByArgs<ExtArgs>,
            result: $Utils.Optional<Kyc_level_2GroupByOutputType>[]
          }
          count: {
            args: Prisma.kyc_level_2CountArgs<ExtArgs>,
            result: $Utils.Optional<Kyc_level_2CountAggregateOutputType> | number
          }
        }
      }
      legalitas_usaha: {
        payload: Prisma.$legalitas_usahaPayload<ExtArgs>
        fields: Prisma.legalitas_usahaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.legalitas_usahaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.legalitas_usahaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload>
          }
          findFirst: {
            args: Prisma.legalitas_usahaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.legalitas_usahaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload>
          }
          findMany: {
            args: Prisma.legalitas_usahaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload>[]
          }
          create: {
            args: Prisma.legalitas_usahaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload>
          }
          createMany: {
            args: Prisma.legalitas_usahaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.legalitas_usahaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload>[]
          }
          delete: {
            args: Prisma.legalitas_usahaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload>
          }
          update: {
            args: Prisma.legalitas_usahaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload>
          }
          deleteMany: {
            args: Prisma.legalitas_usahaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.legalitas_usahaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.legalitas_usahaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$legalitas_usahaPayload>
          }
          aggregate: {
            args: Prisma.Legalitas_usahaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLegalitas_usaha>
          }
          groupBy: {
            args: Prisma.legalitas_usahaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Legalitas_usahaGroupByOutputType>[]
          }
          count: {
            args: Prisma.legalitas_usahaCountArgs<ExtArgs>,
            result: $Utils.Optional<Legalitas_usahaCountAggregateOutputType> | number
          }
        }
      }
      pesan_campaign: {
        payload: Prisma.$pesan_campaignPayload<ExtArgs>
        fields: Prisma.pesan_campaignFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pesan_campaignFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pesan_campaignFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload>
          }
          findFirst: {
            args: Prisma.pesan_campaignFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pesan_campaignFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload>
          }
          findMany: {
            args: Prisma.pesan_campaignFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload>[]
          }
          create: {
            args: Prisma.pesan_campaignCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload>
          }
          createMany: {
            args: Prisma.pesan_campaignCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pesan_campaignCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload>[]
          }
          delete: {
            args: Prisma.pesan_campaignDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload>
          }
          update: {
            args: Prisma.pesan_campaignUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload>
          }
          deleteMany: {
            args: Prisma.pesan_campaignDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.pesan_campaignUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.pesan_campaignUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pesan_campaignPayload>
          }
          aggregate: {
            args: Prisma.Pesan_campaignAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePesan_campaign>
          }
          groupBy: {
            args: Prisma.pesan_campaignGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Pesan_campaignGroupByOutputType>[]
          }
          count: {
            args: Prisma.pesan_campaignCountArgs<ExtArgs>,
            result: $Utils.Optional<Pesan_campaignCountAggregateOutputType> | number
          }
        }
      }
      product_information: {
        payload: Prisma.$product_informationPayload<ExtArgs>
        fields: Prisma.product_informationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_informationFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_informationFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload>
          }
          findFirst: {
            args: Prisma.product_informationFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_informationFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload>
          }
          findMany: {
            args: Prisma.product_informationFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload>[]
          }
          create: {
            args: Prisma.product_informationCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload>
          }
          createMany: {
            args: Prisma.product_informationCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.product_informationCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload>[]
          }
          delete: {
            args: Prisma.product_informationDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload>
          }
          update: {
            args: Prisma.product_informationUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload>
          }
          deleteMany: {
            args: Prisma.product_informationDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.product_informationUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.product_informationUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$product_informationPayload>
          }
          aggregate: {
            args: Prisma.Product_informationAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateProduct_information>
          }
          groupBy: {
            args: Prisma.product_informationGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Product_informationGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_informationCountArgs<ExtArgs>,
            result: $Utils.Optional<Product_informationCountAggregateOutputType> | number
          }
        }
      }
      refund: {
        payload: Prisma.$refundPayload<ExtArgs>
        fields: Prisma.refundFieldRefs
        operations: {
          findUnique: {
            args: Prisma.refundFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.refundFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload>
          }
          findFirst: {
            args: Prisma.refundFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.refundFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload>
          }
          findMany: {
            args: Prisma.refundFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload>[]
          }
          create: {
            args: Prisma.refundCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload>
          }
          createMany: {
            args: Prisma.refundCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.refundCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload>[]
          }
          delete: {
            args: Prisma.refundDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload>
          }
          update: {
            args: Prisma.refundUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload>
          }
          deleteMany: {
            args: Prisma.refundDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.refundUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.refundUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refundPayload>
          }
          aggregate: {
            args: Prisma.RefundAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRefund>
          }
          groupBy: {
            args: Prisma.refundGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RefundGroupByOutputType>[]
          }
          count: {
            args: Prisma.refundCountArgs<ExtArgs>,
            result: $Utils.Optional<RefundCountAggregateOutputType> | number
          }
        }
      }
      replies_discussion: {
        payload: Prisma.$replies_discussionPayload<ExtArgs>
        fields: Prisma.replies_discussionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.replies_discussionFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.replies_discussionFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload>
          }
          findFirst: {
            args: Prisma.replies_discussionFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.replies_discussionFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload>
          }
          findMany: {
            args: Prisma.replies_discussionFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload>[]
          }
          create: {
            args: Prisma.replies_discussionCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload>
          }
          createMany: {
            args: Prisma.replies_discussionCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.replies_discussionCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload>[]
          }
          delete: {
            args: Prisma.replies_discussionDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload>
          }
          update: {
            args: Prisma.replies_discussionUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload>
          }
          deleteMany: {
            args: Prisma.replies_discussionDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.replies_discussionUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.replies_discussionUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$replies_discussionPayload>
          }
          aggregate: {
            args: Prisma.Replies_discussionAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateReplies_discussion>
          }
          groupBy: {
            args: Prisma.replies_discussionGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Replies_discussionGroupByOutputType>[]
          }
          count: {
            args: Prisma.replies_discussionCountArgs<ExtArgs>,
            result: $Utils.Optional<Replies_discussionCountAggregateOutputType> | number
          }
        }
      }
      social_media_usaha: {
        payload: Prisma.$social_media_usahaPayload<ExtArgs>
        fields: Prisma.social_media_usahaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.social_media_usahaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.social_media_usahaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload>
          }
          findFirst: {
            args: Prisma.social_media_usahaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.social_media_usahaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload>
          }
          findMany: {
            args: Prisma.social_media_usahaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload>[]
          }
          create: {
            args: Prisma.social_media_usahaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload>
          }
          createMany: {
            args: Prisma.social_media_usahaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.social_media_usahaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload>[]
          }
          delete: {
            args: Prisma.social_media_usahaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload>
          }
          update: {
            args: Prisma.social_media_usahaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload>
          }
          deleteMany: {
            args: Prisma.social_media_usahaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.social_media_usahaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.social_media_usahaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$social_media_usahaPayload>
          }
          aggregate: {
            args: Prisma.Social_media_usahaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSocial_media_usaha>
          }
          groupBy: {
            args: Prisma.social_media_usahaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Social_media_usahaGroupByOutputType>[]
          }
          count: {
            args: Prisma.social_media_usahaCountArgs<ExtArgs>,
            result: $Utils.Optional<Social_media_usahaCountAggregateOutputType> | number
          }
        }
      }
      team_campaign: {
        payload: Prisma.$team_campaignPayload<ExtArgs>
        fields: Prisma.team_campaignFieldRefs
        operations: {
          findUnique: {
            args: Prisma.team_campaignFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.team_campaignFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload>
          }
          findFirst: {
            args: Prisma.team_campaignFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.team_campaignFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload>
          }
          findMany: {
            args: Prisma.team_campaignFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload>[]
          }
          create: {
            args: Prisma.team_campaignCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload>
          }
          createMany: {
            args: Prisma.team_campaignCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.team_campaignCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload>[]
          }
          delete: {
            args: Prisma.team_campaignDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload>
          }
          update: {
            args: Prisma.team_campaignUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload>
          }
          deleteMany: {
            args: Prisma.team_campaignDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.team_campaignUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.team_campaignUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$team_campaignPayload>
          }
          aggregate: {
            args: Prisma.Team_campaignAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTeam_campaign>
          }
          groupBy: {
            args: Prisma.team_campaignGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Team_campaignGroupByOutputType>[]
          }
          count: {
            args: Prisma.team_campaignCountArgs<ExtArgs>,
            result: $Utils.Optional<Team_campaignCountAggregateOutputType> | number
          }
        }
      }
      transaction: {
        payload: Prisma.$transactionPayload<ExtArgs>
        fields: Prisma.transactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transactionFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transactionFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload>
          }
          findFirst: {
            args: Prisma.transactionFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transactionFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload>
          }
          findMany: {
            args: Prisma.transactionFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload>[]
          }
          create: {
            args: Prisma.transactionCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload>
          }
          createMany: {
            args: Prisma.transactionCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.transactionCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload>[]
          }
          delete: {
            args: Prisma.transactionDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload>
          }
          update: {
            args: Prisma.transactionUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload>
          }
          deleteMany: {
            args: Prisma.transactionDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.transactionUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.transactionUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$transactionPayload>
          }
          aggregate: {
            args: Prisma.TransactionAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTransaction>
          }
          groupBy: {
            args: Prisma.transactionGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.transactionCountArgs<ExtArgs>,
            result: $Utils.Optional<TransactionCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.userCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>,
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      user_voted: {
        payload: Prisma.$user_votedPayload<ExtArgs>
        fields: Prisma.user_votedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_votedFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_votedFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload>
          }
          findFirst: {
            args: Prisma.user_votedFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_votedFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload>
          }
          findMany: {
            args: Prisma.user_votedFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload>[]
          }
          create: {
            args: Prisma.user_votedCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload>
          }
          createMany: {
            args: Prisma.user_votedCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_votedCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload>[]
          }
          delete: {
            args: Prisma.user_votedDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload>
          }
          update: {
            args: Prisma.user_votedUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload>
          }
          deleteMany: {
            args: Prisma.user_votedDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.user_votedUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.user_votedUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_votedPayload>
          }
          aggregate: {
            args: Prisma.User_votedAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser_voted>
          }
          groupBy: {
            args: Prisma.user_votedGroupByArgs<ExtArgs>,
            result: $Utils.Optional<User_votedGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_votedCountArgs<ExtArgs>,
            result: $Utils.Optional<User_votedCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CampaignCountOutputType
   */

  export type CampaignCountOutputType = {
    campaign_update: number
    discussion: number
    investment: number
    pesan_campaign: number
    team_campaign: number
    transaction: number
  }

  export type CampaignCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign_update?: boolean | CampaignCountOutputTypeCountCampaign_updateArgs
    discussion?: boolean | CampaignCountOutputTypeCountDiscussionArgs
    investment?: boolean | CampaignCountOutputTypeCountInvestmentArgs
    pesan_campaign?: boolean | CampaignCountOutputTypeCountPesan_campaignArgs
    team_campaign?: boolean | CampaignCountOutputTypeCountTeam_campaignArgs
    transaction?: boolean | CampaignCountOutputTypeCountTransactionArgs
  }

  // Custom InputTypes
  /**
   * CampaignCountOutputType without action
   */
  export type CampaignCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampaignCountOutputType
     */
    select?: CampaignCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CampaignCountOutputType without action
   */
  export type CampaignCountOutputTypeCountCampaign_updateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: campaign_updateWhereInput
  }

  /**
   * CampaignCountOutputType without action
   */
  export type CampaignCountOutputTypeCountDiscussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: discussionWhereInput
  }

  /**
   * CampaignCountOutputType without action
   */
  export type CampaignCountOutputTypeCountInvestmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: investmentWhereInput
  }

  /**
   * CampaignCountOutputType without action
   */
  export type CampaignCountOutputTypeCountPesan_campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pesan_campaignWhereInput
  }

  /**
   * CampaignCountOutputType without action
   */
  export type CampaignCountOutputTypeCountTeam_campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_campaignWhereInput
  }

  /**
   * CampaignCountOutputType without action
   */
  export type CampaignCountOutputTypeCountTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionWhereInput
  }


  /**
   * Count Type CommunityCountOutputType
   */

  export type CommunityCountOutputType = {
    community_proposal: number
  }

  export type CommunityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_proposal?: boolean | CommunityCountOutputTypeCountCommunity_proposalArgs
  }

  // Custom InputTypes
  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityCountOutputType
     */
    select?: CommunityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountCommunity_proposalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_proposalWhereInput
  }


  /**
   * Count Type Community_proposalCountOutputType
   */

  export type Community_proposalCountOutputType = {
    community_chat: number
    user_voted: number
  }

  export type Community_proposalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_chat?: boolean | Community_proposalCountOutputTypeCountCommunity_chatArgs
    user_voted?: boolean | Community_proposalCountOutputTypeCountUser_votedArgs
  }

  // Custom InputTypes
  /**
   * Community_proposalCountOutputType without action
   */
  export type Community_proposalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community_proposalCountOutputType
     */
    select?: Community_proposalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Community_proposalCountOutputType without action
   */
  export type Community_proposalCountOutputTypeCountCommunity_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_chatWhereInput
  }

  /**
   * Community_proposalCountOutputType without action
   */
  export type Community_proposalCountOutputTypeCountUser_votedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_votedWhereInput
  }


  /**
   * Count Type DiscussionCountOutputType
   */

  export type DiscussionCountOutputType = {
    replies_discussion: number
  }

  export type DiscussionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    replies_discussion?: boolean | DiscussionCountOutputTypeCountReplies_discussionArgs
  }

  // Custom InputTypes
  /**
   * DiscussionCountOutputType without action
   */
  export type DiscussionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscussionCountOutputType
     */
    select?: DiscussionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiscussionCountOutputType without action
   */
  export type DiscussionCountOutputTypeCountReplies_discussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: replies_discussionWhereInput
  }


  /**
   * Count Type DocumentCountOutputType
   */

  export type DocumentCountOutputType = {
    document_legal: number
    document_proposal: number
  }

  export type DocumentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    document_legal?: boolean | DocumentCountOutputTypeCountDocument_legalArgs
    document_proposal?: boolean | DocumentCountOutputTypeCountDocument_proposalArgs
  }

  // Custom InputTypes
  /**
   * DocumentCountOutputType without action
   */
  export type DocumentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentCountOutputType
     */
    select?: DocumentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DocumentCountOutputType without action
   */
  export type DocumentCountOutputTypeCountDocument_legalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_legalWhereInput
  }

  /**
   * DocumentCountOutputType without action
   */
  export type DocumentCountOutputTypeCountDocument_proposalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_proposalWhereInput
  }


  /**
   * Count Type Team_campaignCountOutputType
   */

  export type Team_campaignCountOutputType = {
    social_media_usaha: number
  }

  export type Team_campaignCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    social_media_usaha?: boolean | Team_campaignCountOutputTypeCountSocial_media_usahaArgs
  }

  // Custom InputTypes
  /**
   * Team_campaignCountOutputType without action
   */
  export type Team_campaignCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_campaignCountOutputType
     */
    select?: Team_campaignCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Team_campaignCountOutputType without action
   */
  export type Team_campaignCountOutputTypeCountSocial_media_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: social_media_usahaWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    campaign: number
    community_chat: number
    community_membership: number
    discussion: number
    investment: number
    refund: number
    transaction: number
    user_voted: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | UserCountOutputTypeCountCampaignArgs
    community_chat?: boolean | UserCountOutputTypeCountCommunity_chatArgs
    community_membership?: boolean | UserCountOutputTypeCountCommunity_membershipArgs
    discussion?: boolean | UserCountOutputTypeCountDiscussionArgs
    investment?: boolean | UserCountOutputTypeCountInvestmentArgs
    refund?: boolean | UserCountOutputTypeCountRefundArgs
    transaction?: boolean | UserCountOutputTypeCountTransactionArgs
    user_voted?: boolean | UserCountOutputTypeCountUser_votedArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCampaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: campaignWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommunity_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_chatWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommunity_membershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_membershipWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDiscussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: discussionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvestmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: investmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refundWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_votedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_votedWhereInput
  }


  /**
   * Models
   */

  /**
   * Model address
   */

  export type AggregateAddress = {
    _count: AddressCountAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  export type AddressMinAggregateOutputType = {
    address_id: string | null
    address: string | null
    kecamatan: string | null
    kota: string | null
    provinsi: string | null
    kode_pos: string | null
    kyc_level_1_id: string | null
  }

  export type AddressMaxAggregateOutputType = {
    address_id: string | null
    address: string | null
    kecamatan: string | null
    kota: string | null
    provinsi: string | null
    kode_pos: string | null
    kyc_level_1_id: string | null
  }

  export type AddressCountAggregateOutputType = {
    address_id: number
    address: number
    kecamatan: number
    kota: number
    provinsi: number
    kode_pos: number
    kyc_level_1_id: number
    _all: number
  }


  export type AddressMinAggregateInputType = {
    address_id?: true
    address?: true
    kecamatan?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    kyc_level_1_id?: true
  }

  export type AddressMaxAggregateInputType = {
    address_id?: true
    address?: true
    kecamatan?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    kyc_level_1_id?: true
  }

  export type AddressCountAggregateInputType = {
    address_id?: true
    address?: true
    kecamatan?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    kyc_level_1_id?: true
    _all?: true
  }

  export type AddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which address to aggregate.
     */
    where?: addressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressOrderByWithRelationInput | addressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: addressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned addresses
    **/
    _count?: true | AddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressMaxAggregateInputType
  }

  export type GetAddressAggregateType<T extends AddressAggregateArgs> = {
        [P in keyof T & keyof AggregateAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddress[P]>
      : GetScalarType<T[P], AggregateAddress[P]>
  }




  export type addressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: addressWhereInput
    orderBy?: addressOrderByWithAggregationInput | addressOrderByWithAggregationInput[]
    by: AddressScalarFieldEnum[] | AddressScalarFieldEnum
    having?: addressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressCountAggregateInputType | true
    _min?: AddressMinAggregateInputType
    _max?: AddressMaxAggregateInputType
  }

  export type AddressGroupByOutputType = {
    address_id: string
    address: string
    kecamatan: string
    kota: string
    provinsi: string
    kode_pos: string
    kyc_level_1_id: string
    _count: AddressCountAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  type GetAddressGroupByPayload<T extends addressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressGroupByOutputType[P]>
            : GetScalarType<T[P], AddressGroupByOutputType[P]>
        }
      >
    >


  export type addressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    address_id?: boolean
    address?: boolean
    kecamatan?: boolean
    kota?: boolean
    provinsi?: boolean
    kode_pos?: boolean
    kyc_level_1_id?: boolean
    kyc_level_1?: boolean | kyc_level_1DefaultArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type addressSelectScalar = {
    address_id?: boolean
    address?: boolean
    kecamatan?: boolean
    kota?: boolean
    provinsi?: boolean
    kode_pos?: boolean
    kyc_level_1_id?: boolean
  }


  export type addressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kyc_level_1?: boolean | kyc_level_1DefaultArgs<ExtArgs>
  }


  export type $addressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "address"
    objects: {
      kyc_level_1: Prisma.$kyc_level_1Payload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      address_id: string
      address: string
      kecamatan: string
      kota: string
      provinsi: string
      kode_pos: string
      kyc_level_1_id: string
    }, ExtArgs["result"]["address"]>
    composites: {}
  }


  type addressGetPayload<S extends boolean | null | undefined | addressDefaultArgs> = $Result.GetResult<Prisma.$addressPayload, S>

  type addressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<addressFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AddressCountAggregateInputType | true
    }

  export interface addressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['address'], meta: { name: 'address' } }
    /**
     * Find zero or one Address that matches the filter.
     * @param {addressFindUniqueArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends addressFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, addressFindUniqueArgs<ExtArgs>>
    ): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Address that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {addressFindUniqueOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends addressFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, addressFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Address that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressFindFirstArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends addressFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, addressFindFirstArgs<ExtArgs>>
    ): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Address that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressFindFirstOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends addressFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, addressFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.address.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.address.findMany({ take: 10 })
     * 
     * // Only select the `address_id`
     * const addressWithAddress_idOnly = await prisma.address.findMany({ select: { address_id: true } })
     * 
    **/
    findMany<T extends addressFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, addressFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Address.
     * @param {addressCreateArgs} args - Arguments to create a Address.
     * @example
     * // Create one Address
     * const Address = await prisma.address.create({
     *   data: {
     *     // ... data to create a Address
     *   }
     * })
     * 
    **/
    create<T extends addressCreateArgs<ExtArgs>>(
      args: SelectSubset<T, addressCreateArgs<ExtArgs>>
    ): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Addresses.
     * @param {addressCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends addressCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, addressCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Addresses and returns the data saved in the database.
     * @param {addressCreateManyAndReturnArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Addresses and only return the `address_id`
     * const addressWithAddress_idOnly = await prisma.address.createManyAndReturn({ 
     *   select: { address_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends addressCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, addressCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Address.
     * @param {addressDeleteArgs} args - Arguments to delete one Address.
     * @example
     * // Delete one Address
     * const Address = await prisma.address.delete({
     *   where: {
     *     // ... filter to delete one Address
     *   }
     * })
     * 
    **/
    delete<T extends addressDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, addressDeleteArgs<ExtArgs>>
    ): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Address.
     * @param {addressUpdateArgs} args - Arguments to update one Address.
     * @example
     * // Update one Address
     * const address = await prisma.address.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends addressUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, addressUpdateArgs<ExtArgs>>
    ): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Addresses.
     * @param {addressDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.address.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends addressDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, addressDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends addressUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, addressUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Address.
     * @param {addressUpsertArgs} args - Arguments to update or create a Address.
     * @example
     * // Update or create a Address
     * const address = await prisma.address.upsert({
     *   create: {
     *     // ... data to create a Address
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Address we want to update
     *   }
     * })
    **/
    upsert<T extends addressUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, addressUpsertArgs<ExtArgs>>
    ): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.address.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends addressCountArgs>(
      args?: Subset<T, addressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressAggregateArgs>(args: Subset<T, AddressAggregateArgs>): Prisma.PrismaPromise<GetAddressAggregateType<T>>

    /**
     * Group by Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends addressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: addressGroupByArgs['orderBy'] }
        : { orderBy?: addressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, addressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the address model
   */
  readonly fields: addressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for address.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__addressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    kyc_level_1<T extends kyc_level_1DefaultArgs<ExtArgs> = {}>(args?: Subset<T, kyc_level_1DefaultArgs<ExtArgs>>): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the address model
   */ 
  interface addressFieldRefs {
    readonly address_id: FieldRef<"address", 'String'>
    readonly address: FieldRef<"address", 'String'>
    readonly kecamatan: FieldRef<"address", 'String'>
    readonly kota: FieldRef<"address", 'String'>
    readonly provinsi: FieldRef<"address", 'String'>
    readonly kode_pos: FieldRef<"address", 'String'>
    readonly kyc_level_1_id: FieldRef<"address", 'String'>
  }
    

  // Custom InputTypes
  /**
   * address findUnique
   */
  export type addressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * Filter, which address to fetch.
     */
    where: addressWhereUniqueInput
  }

  /**
   * address findUniqueOrThrow
   */
  export type addressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * Filter, which address to fetch.
     */
    where: addressWhereUniqueInput
  }

  /**
   * address findFirst
   */
  export type addressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * Filter, which address to fetch.
     */
    where?: addressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressOrderByWithRelationInput | addressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for addresses.
     */
    cursor?: addressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * address findFirstOrThrow
   */
  export type addressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * Filter, which address to fetch.
     */
    where?: addressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressOrderByWithRelationInput | addressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for addresses.
     */
    cursor?: addressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * address findMany
   */
  export type addressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressOrderByWithRelationInput | addressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing addresses.
     */
    cursor?: addressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * address create
   */
  export type addressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * The data needed to create a address.
     */
    data: XOR<addressCreateInput, addressUncheckedCreateInput>
  }

  /**
   * address createMany
   */
  export type addressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many addresses.
     */
    data: addressCreateManyInput | addressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * address createManyAndReturn
   */
  export type addressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * The data used to create many addresses.
     */
    data: addressCreateManyInput | addressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * address update
   */
  export type addressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * The data needed to update a address.
     */
    data: XOR<addressUpdateInput, addressUncheckedUpdateInput>
    /**
     * Choose, which address to update.
     */
    where: addressWhereUniqueInput
  }

  /**
   * address updateMany
   */
  export type addressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update addresses.
     */
    data: XOR<addressUpdateManyMutationInput, addressUncheckedUpdateManyInput>
    /**
     * Filter which addresses to update
     */
    where?: addressWhereInput
  }

  /**
   * address upsert
   */
  export type addressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * The filter to search for the address to update in case it exists.
     */
    where: addressWhereUniqueInput
    /**
     * In case the address found by the `where` argument doesn't exist, create a new address with this data.
     */
    create: XOR<addressCreateInput, addressUncheckedCreateInput>
    /**
     * In case the address was found with the provided `where` argument, update it with this data.
     */
    update: XOR<addressUpdateInput, addressUncheckedUpdateInput>
  }

  /**
   * address delete
   */
  export type addressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    /**
     * Filter which address to delete.
     */
    where: addressWhereUniqueInput
  }

  /**
   * address deleteMany
   */
  export type addressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which addresses to delete
     */
    where?: addressWhereInput
  }

  /**
   * address without action
   */
  export type addressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
  }


  /**
   * Model alamat_usaha
   */

  export type AggregateAlamat_usaha = {
    _count: Alamat_usahaCountAggregateOutputType | null
    _avg: Alamat_usahaAvgAggregateOutputType | null
    _sum: Alamat_usahaSumAggregateOutputType | null
    _min: Alamat_usahaMinAggregateOutputType | null
    _max: Alamat_usahaMaxAggregateOutputType | null
  }

  export type Alamat_usahaAvgAggregateOutputType = {
    lat: Decimal | null
    lgn: Decimal | null
  }

  export type Alamat_usahaSumAggregateOutputType = {
    lat: Decimal | null
    lgn: Decimal | null
  }

  export type Alamat_usahaMinAggregateOutputType = {
    alamat_usaha_id: string | null
    campaign_id: string | null
    address: string | null
    kecamatan: string | null
    kota: string | null
    provinsi: string | null
    kode_pos: string | null
    lat: Decimal | null
    lgn: Decimal | null
  }

  export type Alamat_usahaMaxAggregateOutputType = {
    alamat_usaha_id: string | null
    campaign_id: string | null
    address: string | null
    kecamatan: string | null
    kota: string | null
    provinsi: string | null
    kode_pos: string | null
    lat: Decimal | null
    lgn: Decimal | null
  }

  export type Alamat_usahaCountAggregateOutputType = {
    alamat_usaha_id: number
    campaign_id: number
    address: number
    kecamatan: number
    kota: number
    provinsi: number
    kode_pos: number
    lat: number
    lgn: number
    _all: number
  }


  export type Alamat_usahaAvgAggregateInputType = {
    lat?: true
    lgn?: true
  }

  export type Alamat_usahaSumAggregateInputType = {
    lat?: true
    lgn?: true
  }

  export type Alamat_usahaMinAggregateInputType = {
    alamat_usaha_id?: true
    campaign_id?: true
    address?: true
    kecamatan?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    lat?: true
    lgn?: true
  }

  export type Alamat_usahaMaxAggregateInputType = {
    alamat_usaha_id?: true
    campaign_id?: true
    address?: true
    kecamatan?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    lat?: true
    lgn?: true
  }

  export type Alamat_usahaCountAggregateInputType = {
    alamat_usaha_id?: true
    campaign_id?: true
    address?: true
    kecamatan?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    lat?: true
    lgn?: true
    _all?: true
  }

  export type Alamat_usahaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alamat_usaha to aggregate.
     */
    where?: alamat_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alamat_usahas to fetch.
     */
    orderBy?: alamat_usahaOrderByWithRelationInput | alamat_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: alamat_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alamat_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alamat_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned alamat_usahas
    **/
    _count?: true | Alamat_usahaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Alamat_usahaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Alamat_usahaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Alamat_usahaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Alamat_usahaMaxAggregateInputType
  }

  export type GetAlamat_usahaAggregateType<T extends Alamat_usahaAggregateArgs> = {
        [P in keyof T & keyof AggregateAlamat_usaha]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlamat_usaha[P]>
      : GetScalarType<T[P], AggregateAlamat_usaha[P]>
  }




  export type alamat_usahaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alamat_usahaWhereInput
    orderBy?: alamat_usahaOrderByWithAggregationInput | alamat_usahaOrderByWithAggregationInput[]
    by: Alamat_usahaScalarFieldEnum[] | Alamat_usahaScalarFieldEnum
    having?: alamat_usahaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Alamat_usahaCountAggregateInputType | true
    _avg?: Alamat_usahaAvgAggregateInputType
    _sum?: Alamat_usahaSumAggregateInputType
    _min?: Alamat_usahaMinAggregateInputType
    _max?: Alamat_usahaMaxAggregateInputType
  }

  export type Alamat_usahaGroupByOutputType = {
    alamat_usaha_id: string
    campaign_id: string
    address: string | null
    kecamatan: string | null
    kota: string | null
    provinsi: string | null
    kode_pos: string | null
    lat: Decimal | null
    lgn: Decimal | null
    _count: Alamat_usahaCountAggregateOutputType | null
    _avg: Alamat_usahaAvgAggregateOutputType | null
    _sum: Alamat_usahaSumAggregateOutputType | null
    _min: Alamat_usahaMinAggregateOutputType | null
    _max: Alamat_usahaMaxAggregateOutputType | null
  }

  type GetAlamat_usahaGroupByPayload<T extends alamat_usahaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Alamat_usahaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Alamat_usahaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Alamat_usahaGroupByOutputType[P]>
            : GetScalarType<T[P], Alamat_usahaGroupByOutputType[P]>
        }
      >
    >


  export type alamat_usahaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    alamat_usaha_id?: boolean
    campaign_id?: boolean
    address?: boolean
    kecamatan?: boolean
    kota?: boolean
    provinsi?: boolean
    kode_pos?: boolean
    lat?: boolean
    lgn?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alamat_usaha"]>

  export type alamat_usahaSelectScalar = {
    alamat_usaha_id?: boolean
    campaign_id?: boolean
    address?: boolean
    kecamatan?: boolean
    kota?: boolean
    provinsi?: boolean
    kode_pos?: boolean
    lat?: boolean
    lgn?: boolean
  }


  export type alamat_usahaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }


  export type $alamat_usahaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "alamat_usaha"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      alamat_usaha_id: string
      campaign_id: string
      address: string | null
      kecamatan: string | null
      kota: string | null
      provinsi: string | null
      kode_pos: string | null
      lat: Prisma.Decimal | null
      lgn: Prisma.Decimal | null
    }, ExtArgs["result"]["alamat_usaha"]>
    composites: {}
  }


  type alamat_usahaGetPayload<S extends boolean | null | undefined | alamat_usahaDefaultArgs> = $Result.GetResult<Prisma.$alamat_usahaPayload, S>

  type alamat_usahaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<alamat_usahaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Alamat_usahaCountAggregateInputType | true
    }

  export interface alamat_usahaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['alamat_usaha'], meta: { name: 'alamat_usaha' } }
    /**
     * Find zero or one Alamat_usaha that matches the filter.
     * @param {alamat_usahaFindUniqueArgs} args - Arguments to find a Alamat_usaha
     * @example
     * // Get one Alamat_usaha
     * const alamat_usaha = await prisma.alamat_usaha.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends alamat_usahaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, alamat_usahaFindUniqueArgs<ExtArgs>>
    ): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Alamat_usaha that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {alamat_usahaFindUniqueOrThrowArgs} args - Arguments to find a Alamat_usaha
     * @example
     * // Get one Alamat_usaha
     * const alamat_usaha = await prisma.alamat_usaha.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends alamat_usahaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, alamat_usahaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Alamat_usaha that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alamat_usahaFindFirstArgs} args - Arguments to find a Alamat_usaha
     * @example
     * // Get one Alamat_usaha
     * const alamat_usaha = await prisma.alamat_usaha.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends alamat_usahaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, alamat_usahaFindFirstArgs<ExtArgs>>
    ): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Alamat_usaha that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alamat_usahaFindFirstOrThrowArgs} args - Arguments to find a Alamat_usaha
     * @example
     * // Get one Alamat_usaha
     * const alamat_usaha = await prisma.alamat_usaha.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends alamat_usahaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, alamat_usahaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Alamat_usahas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alamat_usahaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alamat_usahas
     * const alamat_usahas = await prisma.alamat_usaha.findMany()
     * 
     * // Get first 10 Alamat_usahas
     * const alamat_usahas = await prisma.alamat_usaha.findMany({ take: 10 })
     * 
     * // Only select the `alamat_usaha_id`
     * const alamat_usahaWithAlamat_usaha_idOnly = await prisma.alamat_usaha.findMany({ select: { alamat_usaha_id: true } })
     * 
    **/
    findMany<T extends alamat_usahaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alamat_usahaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Alamat_usaha.
     * @param {alamat_usahaCreateArgs} args - Arguments to create a Alamat_usaha.
     * @example
     * // Create one Alamat_usaha
     * const Alamat_usaha = await prisma.alamat_usaha.create({
     *   data: {
     *     // ... data to create a Alamat_usaha
     *   }
     * })
     * 
    **/
    create<T extends alamat_usahaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, alamat_usahaCreateArgs<ExtArgs>>
    ): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Alamat_usahas.
     * @param {alamat_usahaCreateManyArgs} args - Arguments to create many Alamat_usahas.
     * @example
     * // Create many Alamat_usahas
     * const alamat_usaha = await prisma.alamat_usaha.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends alamat_usahaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alamat_usahaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alamat_usahas and returns the data saved in the database.
     * @param {alamat_usahaCreateManyAndReturnArgs} args - Arguments to create many Alamat_usahas.
     * @example
     * // Create many Alamat_usahas
     * const alamat_usaha = await prisma.alamat_usaha.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alamat_usahas and only return the `alamat_usaha_id`
     * const alamat_usahaWithAlamat_usaha_idOnly = await prisma.alamat_usaha.createManyAndReturn({ 
     *   select: { alamat_usaha_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends alamat_usahaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, alamat_usahaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Alamat_usaha.
     * @param {alamat_usahaDeleteArgs} args - Arguments to delete one Alamat_usaha.
     * @example
     * // Delete one Alamat_usaha
     * const Alamat_usaha = await prisma.alamat_usaha.delete({
     *   where: {
     *     // ... filter to delete one Alamat_usaha
     *   }
     * })
     * 
    **/
    delete<T extends alamat_usahaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, alamat_usahaDeleteArgs<ExtArgs>>
    ): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Alamat_usaha.
     * @param {alamat_usahaUpdateArgs} args - Arguments to update one Alamat_usaha.
     * @example
     * // Update one Alamat_usaha
     * const alamat_usaha = await prisma.alamat_usaha.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends alamat_usahaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, alamat_usahaUpdateArgs<ExtArgs>>
    ): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Alamat_usahas.
     * @param {alamat_usahaDeleteManyArgs} args - Arguments to filter Alamat_usahas to delete.
     * @example
     * // Delete a few Alamat_usahas
     * const { count } = await prisma.alamat_usaha.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends alamat_usahaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alamat_usahaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alamat_usahas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alamat_usahaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alamat_usahas
     * const alamat_usaha = await prisma.alamat_usaha.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends alamat_usahaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, alamat_usahaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Alamat_usaha.
     * @param {alamat_usahaUpsertArgs} args - Arguments to update or create a Alamat_usaha.
     * @example
     * // Update or create a Alamat_usaha
     * const alamat_usaha = await prisma.alamat_usaha.upsert({
     *   create: {
     *     // ... data to create a Alamat_usaha
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alamat_usaha we want to update
     *   }
     * })
    **/
    upsert<T extends alamat_usahaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, alamat_usahaUpsertArgs<ExtArgs>>
    ): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Alamat_usahas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alamat_usahaCountArgs} args - Arguments to filter Alamat_usahas to count.
     * @example
     * // Count the number of Alamat_usahas
     * const count = await prisma.alamat_usaha.count({
     *   where: {
     *     // ... the filter for the Alamat_usahas we want to count
     *   }
     * })
    **/
    count<T extends alamat_usahaCountArgs>(
      args?: Subset<T, alamat_usahaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Alamat_usahaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alamat_usaha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Alamat_usahaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Alamat_usahaAggregateArgs>(args: Subset<T, Alamat_usahaAggregateArgs>): Prisma.PrismaPromise<GetAlamat_usahaAggregateType<T>>

    /**
     * Group by Alamat_usaha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alamat_usahaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends alamat_usahaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: alamat_usahaGroupByArgs['orderBy'] }
        : { orderBy?: alamat_usahaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, alamat_usahaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlamat_usahaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the alamat_usaha model
   */
  readonly fields: alamat_usahaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for alamat_usaha.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__alamat_usahaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the alamat_usaha model
   */ 
  interface alamat_usahaFieldRefs {
    readonly alamat_usaha_id: FieldRef<"alamat_usaha", 'String'>
    readonly campaign_id: FieldRef<"alamat_usaha", 'String'>
    readonly address: FieldRef<"alamat_usaha", 'String'>
    readonly kecamatan: FieldRef<"alamat_usaha", 'String'>
    readonly kota: FieldRef<"alamat_usaha", 'String'>
    readonly provinsi: FieldRef<"alamat_usaha", 'String'>
    readonly kode_pos: FieldRef<"alamat_usaha", 'String'>
    readonly lat: FieldRef<"alamat_usaha", 'Decimal'>
    readonly lgn: FieldRef<"alamat_usaha", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * alamat_usaha findUnique
   */
  export type alamat_usahaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * Filter, which alamat_usaha to fetch.
     */
    where: alamat_usahaWhereUniqueInput
  }

  /**
   * alamat_usaha findUniqueOrThrow
   */
  export type alamat_usahaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * Filter, which alamat_usaha to fetch.
     */
    where: alamat_usahaWhereUniqueInput
  }

  /**
   * alamat_usaha findFirst
   */
  export type alamat_usahaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * Filter, which alamat_usaha to fetch.
     */
    where?: alamat_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alamat_usahas to fetch.
     */
    orderBy?: alamat_usahaOrderByWithRelationInput | alamat_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alamat_usahas.
     */
    cursor?: alamat_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alamat_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alamat_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alamat_usahas.
     */
    distinct?: Alamat_usahaScalarFieldEnum | Alamat_usahaScalarFieldEnum[]
  }

  /**
   * alamat_usaha findFirstOrThrow
   */
  export type alamat_usahaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * Filter, which alamat_usaha to fetch.
     */
    where?: alamat_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alamat_usahas to fetch.
     */
    orderBy?: alamat_usahaOrderByWithRelationInput | alamat_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alamat_usahas.
     */
    cursor?: alamat_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alamat_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alamat_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alamat_usahas.
     */
    distinct?: Alamat_usahaScalarFieldEnum | Alamat_usahaScalarFieldEnum[]
  }

  /**
   * alamat_usaha findMany
   */
  export type alamat_usahaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * Filter, which alamat_usahas to fetch.
     */
    where?: alamat_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alamat_usahas to fetch.
     */
    orderBy?: alamat_usahaOrderByWithRelationInput | alamat_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing alamat_usahas.
     */
    cursor?: alamat_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alamat_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alamat_usahas.
     */
    skip?: number
    distinct?: Alamat_usahaScalarFieldEnum | Alamat_usahaScalarFieldEnum[]
  }

  /**
   * alamat_usaha create
   */
  export type alamat_usahaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * The data needed to create a alamat_usaha.
     */
    data: XOR<alamat_usahaCreateInput, alamat_usahaUncheckedCreateInput>
  }

  /**
   * alamat_usaha createMany
   */
  export type alamat_usahaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many alamat_usahas.
     */
    data: alamat_usahaCreateManyInput | alamat_usahaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * alamat_usaha createManyAndReturn
   */
  export type alamat_usahaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * The data used to create many alamat_usahas.
     */
    data: alamat_usahaCreateManyInput | alamat_usahaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * alamat_usaha update
   */
  export type alamat_usahaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * The data needed to update a alamat_usaha.
     */
    data: XOR<alamat_usahaUpdateInput, alamat_usahaUncheckedUpdateInput>
    /**
     * Choose, which alamat_usaha to update.
     */
    where: alamat_usahaWhereUniqueInput
  }

  /**
   * alamat_usaha updateMany
   */
  export type alamat_usahaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update alamat_usahas.
     */
    data: XOR<alamat_usahaUpdateManyMutationInput, alamat_usahaUncheckedUpdateManyInput>
    /**
     * Filter which alamat_usahas to update
     */
    where?: alamat_usahaWhereInput
  }

  /**
   * alamat_usaha upsert
   */
  export type alamat_usahaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * The filter to search for the alamat_usaha to update in case it exists.
     */
    where: alamat_usahaWhereUniqueInput
    /**
     * In case the alamat_usaha found by the `where` argument doesn't exist, create a new alamat_usaha with this data.
     */
    create: XOR<alamat_usahaCreateInput, alamat_usahaUncheckedCreateInput>
    /**
     * In case the alamat_usaha was found with the provided `where` argument, update it with this data.
     */
    update: XOR<alamat_usahaUpdateInput, alamat_usahaUncheckedUpdateInput>
  }

  /**
   * alamat_usaha delete
   */
  export type alamat_usahaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    /**
     * Filter which alamat_usaha to delete.
     */
    where: alamat_usahaWhereUniqueInput
  }

  /**
   * alamat_usaha deleteMany
   */
  export type alamat_usahaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alamat_usahas to delete
     */
    where?: alamat_usahaWhereInput
  }

  /**
   * alamat_usaha without action
   */
  export type alamat_usahaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
  }


  /**
   * Model campaign
   */

  export type AggregateCampaign = {
    _count: CampaignCountAggregateOutputType | null
    _min: CampaignMinAggregateOutputType | null
    _max: CampaignMaxAggregateOutputType | null
  }

  export type CampaignMinAggregateOutputType = {
    campaign_id: string | null
    user_id: string | null
    nama_usaha: string | null
    deskripsi_usaha: string | null
    logo: Buffer | null
    isApproved: boolean | null
    isPublished: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    tipe_usaha: $Enums.tipe_usaha_enum | null
    jenis_usaha: $Enums.jenis_usaha_enum | null
  }

  export type CampaignMaxAggregateOutputType = {
    campaign_id: string | null
    user_id: string | null
    nama_usaha: string | null
    deskripsi_usaha: string | null
    logo: Buffer | null
    isApproved: boolean | null
    isPublished: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    tipe_usaha: $Enums.tipe_usaha_enum | null
    jenis_usaha: $Enums.jenis_usaha_enum | null
  }

  export type CampaignCountAggregateOutputType = {
    campaign_id: number
    user_id: number
    nama_usaha: number
    deskripsi_usaha: number
    logo: number
    isApproved: number
    isPublished: number
    createdAt: number
    updatedAt: number
    tipe_usaha: number
    jenis_usaha: number
    _all: number
  }


  export type CampaignMinAggregateInputType = {
    campaign_id?: true
    user_id?: true
    nama_usaha?: true
    deskripsi_usaha?: true
    logo?: true
    isApproved?: true
    isPublished?: true
    createdAt?: true
    updatedAt?: true
    tipe_usaha?: true
    jenis_usaha?: true
  }

  export type CampaignMaxAggregateInputType = {
    campaign_id?: true
    user_id?: true
    nama_usaha?: true
    deskripsi_usaha?: true
    logo?: true
    isApproved?: true
    isPublished?: true
    createdAt?: true
    updatedAt?: true
    tipe_usaha?: true
    jenis_usaha?: true
  }

  export type CampaignCountAggregateInputType = {
    campaign_id?: true
    user_id?: true
    nama_usaha?: true
    deskripsi_usaha?: true
    logo?: true
    isApproved?: true
    isPublished?: true
    createdAt?: true
    updatedAt?: true
    tipe_usaha?: true
    jenis_usaha?: true
    _all?: true
  }

  export type CampaignAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which campaign to aggregate.
     */
    where?: campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaigns to fetch.
     */
    orderBy?: campaignOrderByWithRelationInput | campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned campaigns
    **/
    _count?: true | CampaignCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CampaignMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CampaignMaxAggregateInputType
  }

  export type GetCampaignAggregateType<T extends CampaignAggregateArgs> = {
        [P in keyof T & keyof AggregateCampaign]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampaign[P]>
      : GetScalarType<T[P], AggregateCampaign[P]>
  }




  export type campaignGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: campaignWhereInput
    orderBy?: campaignOrderByWithAggregationInput | campaignOrderByWithAggregationInput[]
    by: CampaignScalarFieldEnum[] | CampaignScalarFieldEnum
    having?: campaignScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CampaignCountAggregateInputType | true
    _min?: CampaignMinAggregateInputType
    _max?: CampaignMaxAggregateInputType
  }

  export type CampaignGroupByOutputType = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo: Buffer | null
    isApproved: boolean
    isPublished: boolean
    createdAt: Date
    updatedAt: Date | null
    tipe_usaha: $Enums.tipe_usaha_enum | null
    jenis_usaha: $Enums.jenis_usaha_enum | null
    _count: CampaignCountAggregateOutputType | null
    _min: CampaignMinAggregateOutputType | null
    _max: CampaignMaxAggregateOutputType | null
  }

  type GetCampaignGroupByPayload<T extends campaignGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CampaignGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CampaignGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CampaignGroupByOutputType[P]>
            : GetScalarType<T[P], CampaignGroupByOutputType[P]>
        }
      >
    >


  export type campaignSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    campaign_id?: boolean
    user_id?: boolean
    nama_usaha?: boolean
    deskripsi_usaha?: boolean
    logo?: boolean
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tipe_usaha?: boolean
    jenis_usaha?: boolean
    alamat_usaha?: boolean | campaign$alamat_usahaArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    campaign_update?: boolean | campaign$campaign_updateArgs<ExtArgs>
    contact_usaha?: boolean | campaign$contact_usahaArgs<ExtArgs>
    crowdfunding?: boolean | campaign$crowdfundingArgs<ExtArgs>
    discussion?: boolean | campaign$discussionArgs<ExtArgs>
    document?: boolean | campaign$documentArgs<ExtArgs>
    investment?: boolean | campaign$investmentArgs<ExtArgs>
    legalitas_usaha?: boolean | campaign$legalitas_usahaArgs<ExtArgs>
    pesan_campaign?: boolean | campaign$pesan_campaignArgs<ExtArgs>
    social_media_usaha?: boolean | campaign$social_media_usahaArgs<ExtArgs>
    team_campaign?: boolean | campaign$team_campaignArgs<ExtArgs>
    transaction?: boolean | campaign$transactionArgs<ExtArgs>
    _count?: boolean | CampaignCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campaign"]>

  export type campaignSelectScalar = {
    campaign_id?: boolean
    user_id?: boolean
    nama_usaha?: boolean
    deskripsi_usaha?: boolean
    logo?: boolean
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tipe_usaha?: boolean
    jenis_usaha?: boolean
  }


  export type campaignInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alamat_usaha?: boolean | campaign$alamat_usahaArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    campaign_update?: boolean | campaign$campaign_updateArgs<ExtArgs>
    contact_usaha?: boolean | campaign$contact_usahaArgs<ExtArgs>
    crowdfunding?: boolean | campaign$crowdfundingArgs<ExtArgs>
    discussion?: boolean | campaign$discussionArgs<ExtArgs>
    document?: boolean | campaign$documentArgs<ExtArgs>
    investment?: boolean | campaign$investmentArgs<ExtArgs>
    legalitas_usaha?: boolean | campaign$legalitas_usahaArgs<ExtArgs>
    pesan_campaign?: boolean | campaign$pesan_campaignArgs<ExtArgs>
    social_media_usaha?: boolean | campaign$social_media_usahaArgs<ExtArgs>
    team_campaign?: boolean | campaign$team_campaignArgs<ExtArgs>
    transaction?: boolean | campaign$transactionArgs<ExtArgs>
    _count?: boolean | CampaignCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $campaignPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "campaign"
    objects: {
      alamat_usaha: Prisma.$alamat_usahaPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs>
      campaign_update: Prisma.$campaign_updatePayload<ExtArgs>[]
      contact_usaha: Prisma.$contact_usahaPayload<ExtArgs> | null
      crowdfunding: Prisma.$crowdfundingPayload<ExtArgs> | null
      discussion: Prisma.$discussionPayload<ExtArgs>[]
      document: Prisma.$documentPayload<ExtArgs> | null
      investment: Prisma.$investmentPayload<ExtArgs>[]
      legalitas_usaha: Prisma.$legalitas_usahaPayload<ExtArgs> | null
      pesan_campaign: Prisma.$pesan_campaignPayload<ExtArgs>[]
      social_media_usaha: Prisma.$social_media_usahaPayload<ExtArgs> | null
      team_campaign: Prisma.$team_campaignPayload<ExtArgs>[]
      transaction: Prisma.$transactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      campaign_id: string
      user_id: string
      nama_usaha: string
      deskripsi_usaha: string
      logo: Buffer | null
      isApproved: boolean
      isPublished: boolean
      createdAt: Date
      updatedAt: Date | null
      tipe_usaha: $Enums.tipe_usaha_enum | null
      jenis_usaha: $Enums.jenis_usaha_enum | null
    }, ExtArgs["result"]["campaign"]>
    composites: {}
  }


  type campaignGetPayload<S extends boolean | null | undefined | campaignDefaultArgs> = $Result.GetResult<Prisma.$campaignPayload, S>

  type campaignCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<campaignFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CampaignCountAggregateInputType | true
    }

  export interface campaignDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['campaign'], meta: { name: 'campaign' } }
    /**
     * Find zero or one Campaign that matches the filter.
     * @param {campaignFindUniqueArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends campaignFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, campaignFindUniqueArgs<ExtArgs>>
    ): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Campaign that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {campaignFindUniqueOrThrowArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends campaignFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, campaignFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Campaign that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignFindFirstArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends campaignFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, campaignFindFirstArgs<ExtArgs>>
    ): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Campaign that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignFindFirstOrThrowArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends campaignFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, campaignFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Campaigns
     * const campaigns = await prisma.campaign.findMany()
     * 
     * // Get first 10 Campaigns
     * const campaigns = await prisma.campaign.findMany({ take: 10 })
     * 
     * // Only select the `campaign_id`
     * const campaignWithCampaign_idOnly = await prisma.campaign.findMany({ select: { campaign_id: true } })
     * 
    **/
    findMany<T extends campaignFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, campaignFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Campaign.
     * @param {campaignCreateArgs} args - Arguments to create a Campaign.
     * @example
     * // Create one Campaign
     * const Campaign = await prisma.campaign.create({
     *   data: {
     *     // ... data to create a Campaign
     *   }
     * })
     * 
    **/
    create<T extends campaignCreateArgs<ExtArgs>>(
      args: SelectSubset<T, campaignCreateArgs<ExtArgs>>
    ): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Campaigns.
     * @param {campaignCreateManyArgs} args - Arguments to create many Campaigns.
     * @example
     * // Create many Campaigns
     * const campaign = await prisma.campaign.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends campaignCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, campaignCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Campaigns and returns the data saved in the database.
     * @param {campaignCreateManyAndReturnArgs} args - Arguments to create many Campaigns.
     * @example
     * // Create many Campaigns
     * const campaign = await prisma.campaign.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Campaigns and only return the `campaign_id`
     * const campaignWithCampaign_idOnly = await prisma.campaign.createManyAndReturn({ 
     *   select: { campaign_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends campaignCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, campaignCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Campaign.
     * @param {campaignDeleteArgs} args - Arguments to delete one Campaign.
     * @example
     * // Delete one Campaign
     * const Campaign = await prisma.campaign.delete({
     *   where: {
     *     // ... filter to delete one Campaign
     *   }
     * })
     * 
    **/
    delete<T extends campaignDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, campaignDeleteArgs<ExtArgs>>
    ): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Campaign.
     * @param {campaignUpdateArgs} args - Arguments to update one Campaign.
     * @example
     * // Update one Campaign
     * const campaign = await prisma.campaign.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends campaignUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, campaignUpdateArgs<ExtArgs>>
    ): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Campaigns.
     * @param {campaignDeleteManyArgs} args - Arguments to filter Campaigns to delete.
     * @example
     * // Delete a few Campaigns
     * const { count } = await prisma.campaign.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends campaignDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, campaignDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Campaigns
     * const campaign = await prisma.campaign.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends campaignUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, campaignUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Campaign.
     * @param {campaignUpsertArgs} args - Arguments to update or create a Campaign.
     * @example
     * // Update or create a Campaign
     * const campaign = await prisma.campaign.upsert({
     *   create: {
     *     // ... data to create a Campaign
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Campaign we want to update
     *   }
     * })
    **/
    upsert<T extends campaignUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, campaignUpsertArgs<ExtArgs>>
    ): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignCountArgs} args - Arguments to filter Campaigns to count.
     * @example
     * // Count the number of Campaigns
     * const count = await prisma.campaign.count({
     *   where: {
     *     // ... the filter for the Campaigns we want to count
     *   }
     * })
    **/
    count<T extends campaignCountArgs>(
      args?: Subset<T, campaignCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CampaignCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CampaignAggregateArgs>(args: Subset<T, CampaignAggregateArgs>): Prisma.PrismaPromise<GetCampaignAggregateType<T>>

    /**
     * Group by Campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends campaignGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: campaignGroupByArgs['orderBy'] }
        : { orderBy?: campaignGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, campaignGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampaignGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the campaign model
   */
  readonly fields: campaignFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for campaign.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__campaignClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    alamat_usaha<T extends campaign$alamat_usahaArgs<ExtArgs> = {}>(args?: Subset<T, campaign$alamat_usahaArgs<ExtArgs>>): Prisma__alamat_usahaClient<$Result.GetResult<Prisma.$alamat_usahaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    campaign_update<T extends campaign$campaign_updateArgs<ExtArgs> = {}>(args?: Subset<T, campaign$campaign_updateArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'findMany'> | Null>;

    contact_usaha<T extends campaign$contact_usahaArgs<ExtArgs> = {}>(args?: Subset<T, campaign$contact_usahaArgs<ExtArgs>>): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    crowdfunding<T extends campaign$crowdfundingArgs<ExtArgs> = {}>(args?: Subset<T, campaign$crowdfundingArgs<ExtArgs>>): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    discussion<T extends campaign$discussionArgs<ExtArgs> = {}>(args?: Subset<T, campaign$discussionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'findMany'> | Null>;

    document<T extends campaign$documentArgs<ExtArgs> = {}>(args?: Subset<T, campaign$documentArgs<ExtArgs>>): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    investment<T extends campaign$investmentArgs<ExtArgs> = {}>(args?: Subset<T, campaign$investmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'findMany'> | Null>;

    legalitas_usaha<T extends campaign$legalitas_usahaArgs<ExtArgs> = {}>(args?: Subset<T, campaign$legalitas_usahaArgs<ExtArgs>>): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    pesan_campaign<T extends campaign$pesan_campaignArgs<ExtArgs> = {}>(args?: Subset<T, campaign$pesan_campaignArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'findMany'> | Null>;

    social_media_usaha<T extends campaign$social_media_usahaArgs<ExtArgs> = {}>(args?: Subset<T, campaign$social_media_usahaArgs<ExtArgs>>): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    team_campaign<T extends campaign$team_campaignArgs<ExtArgs> = {}>(args?: Subset<T, campaign$team_campaignArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'findMany'> | Null>;

    transaction<T extends campaign$transactionArgs<ExtArgs> = {}>(args?: Subset<T, campaign$transactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the campaign model
   */ 
  interface campaignFieldRefs {
    readonly campaign_id: FieldRef<"campaign", 'String'>
    readonly user_id: FieldRef<"campaign", 'String'>
    readonly nama_usaha: FieldRef<"campaign", 'String'>
    readonly deskripsi_usaha: FieldRef<"campaign", 'String'>
    readonly logo: FieldRef<"campaign", 'Bytes'>
    readonly isApproved: FieldRef<"campaign", 'Boolean'>
    readonly isPublished: FieldRef<"campaign", 'Boolean'>
    readonly createdAt: FieldRef<"campaign", 'DateTime'>
    readonly updatedAt: FieldRef<"campaign", 'DateTime'>
    readonly tipe_usaha: FieldRef<"campaign", 'tipe_usaha_enum'>
    readonly jenis_usaha: FieldRef<"campaign", 'jenis_usaha_enum'>
  }
    

  // Custom InputTypes
  /**
   * campaign findUnique
   */
  export type campaignFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * Filter, which campaign to fetch.
     */
    where: campaignWhereUniqueInput
  }

  /**
   * campaign findUniqueOrThrow
   */
  export type campaignFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * Filter, which campaign to fetch.
     */
    where: campaignWhereUniqueInput
  }

  /**
   * campaign findFirst
   */
  export type campaignFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * Filter, which campaign to fetch.
     */
    where?: campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaigns to fetch.
     */
    orderBy?: campaignOrderByWithRelationInput | campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for campaigns.
     */
    cursor?: campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of campaigns.
     */
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }

  /**
   * campaign findFirstOrThrow
   */
  export type campaignFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * Filter, which campaign to fetch.
     */
    where?: campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaigns to fetch.
     */
    orderBy?: campaignOrderByWithRelationInput | campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for campaigns.
     */
    cursor?: campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of campaigns.
     */
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }

  /**
   * campaign findMany
   */
  export type campaignFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * Filter, which campaigns to fetch.
     */
    where?: campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaigns to fetch.
     */
    orderBy?: campaignOrderByWithRelationInput | campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing campaigns.
     */
    cursor?: campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaigns.
     */
    skip?: number
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }

  /**
   * campaign create
   */
  export type campaignCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * The data needed to create a campaign.
     */
    data: XOR<campaignCreateInput, campaignUncheckedCreateInput>
  }

  /**
   * campaign createMany
   */
  export type campaignCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many campaigns.
     */
    data: campaignCreateManyInput | campaignCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * campaign createManyAndReturn
   */
  export type campaignCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * The data used to create many campaigns.
     */
    data: campaignCreateManyInput | campaignCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * campaign update
   */
  export type campaignUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * The data needed to update a campaign.
     */
    data: XOR<campaignUpdateInput, campaignUncheckedUpdateInput>
    /**
     * Choose, which campaign to update.
     */
    where: campaignWhereUniqueInput
  }

  /**
   * campaign updateMany
   */
  export type campaignUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update campaigns.
     */
    data: XOR<campaignUpdateManyMutationInput, campaignUncheckedUpdateManyInput>
    /**
     * Filter which campaigns to update
     */
    where?: campaignWhereInput
  }

  /**
   * campaign upsert
   */
  export type campaignUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * The filter to search for the campaign to update in case it exists.
     */
    where: campaignWhereUniqueInput
    /**
     * In case the campaign found by the `where` argument doesn't exist, create a new campaign with this data.
     */
    create: XOR<campaignCreateInput, campaignUncheckedCreateInput>
    /**
     * In case the campaign was found with the provided `where` argument, update it with this data.
     */
    update: XOR<campaignUpdateInput, campaignUncheckedUpdateInput>
  }

  /**
   * campaign delete
   */
  export type campaignDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    /**
     * Filter which campaign to delete.
     */
    where: campaignWhereUniqueInput
  }

  /**
   * campaign deleteMany
   */
  export type campaignDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which campaigns to delete
     */
    where?: campaignWhereInput
  }

  /**
   * campaign.alamat_usaha
   */
  export type campaign$alamat_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alamat_usaha
     */
    select?: alamat_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alamat_usahaInclude<ExtArgs> | null
    where?: alamat_usahaWhereInput
  }

  /**
   * campaign.campaign_update
   */
  export type campaign$campaign_updateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    where?: campaign_updateWhereInput
    orderBy?: campaign_updateOrderByWithRelationInput | campaign_updateOrderByWithRelationInput[]
    cursor?: campaign_updateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Campaign_updateScalarFieldEnum | Campaign_updateScalarFieldEnum[]
  }

  /**
   * campaign.contact_usaha
   */
  export type campaign$contact_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    where?: contact_usahaWhereInput
  }

  /**
   * campaign.crowdfunding
   */
  export type campaign$crowdfundingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    where?: crowdfundingWhereInput
  }

  /**
   * campaign.discussion
   */
  export type campaign$discussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    where?: discussionWhereInput
    orderBy?: discussionOrderByWithRelationInput | discussionOrderByWithRelationInput[]
    cursor?: discussionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * campaign.document
   */
  export type campaign$documentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    where?: documentWhereInput
  }

  /**
   * campaign.investment
   */
  export type campaign$investmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    where?: investmentWhereInput
    orderBy?: investmentOrderByWithRelationInput | investmentOrderByWithRelationInput[]
    cursor?: investmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvestmentScalarFieldEnum | InvestmentScalarFieldEnum[]
  }

  /**
   * campaign.legalitas_usaha
   */
  export type campaign$legalitas_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    where?: legalitas_usahaWhereInput
  }

  /**
   * campaign.pesan_campaign
   */
  export type campaign$pesan_campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    where?: pesan_campaignWhereInput
    orderBy?: pesan_campaignOrderByWithRelationInput | pesan_campaignOrderByWithRelationInput[]
    cursor?: pesan_campaignWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pesan_campaignScalarFieldEnum | Pesan_campaignScalarFieldEnum[]
  }

  /**
   * campaign.social_media_usaha
   */
  export type campaign$social_media_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    where?: social_media_usahaWhereInput
  }

  /**
   * campaign.team_campaign
   */
  export type campaign$team_campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    where?: team_campaignWhereInput
    orderBy?: team_campaignOrderByWithRelationInput | team_campaignOrderByWithRelationInput[]
    cursor?: team_campaignWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_campaignScalarFieldEnum | Team_campaignScalarFieldEnum[]
  }

  /**
   * campaign.transaction
   */
  export type campaign$transactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    where?: transactionWhereInput
    orderBy?: transactionOrderByWithRelationInput | transactionOrderByWithRelationInput[]
    cursor?: transactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * campaign without action
   */
  export type campaignDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
  }


  /**
   * Model campaign_update
   */

  export type AggregateCampaign_update = {
    _count: Campaign_updateCountAggregateOutputType | null
    _min: Campaign_updateMinAggregateOutputType | null
    _max: Campaign_updateMaxAggregateOutputType | null
  }

  export type Campaign_updateMinAggregateOutputType = {
    update_id: string | null
    campaign_id: string | null
    update_title: string | null
    update_detail: string | null
    published_at: Date | null
  }

  export type Campaign_updateMaxAggregateOutputType = {
    update_id: string | null
    campaign_id: string | null
    update_title: string | null
    update_detail: string | null
    published_at: Date | null
  }

  export type Campaign_updateCountAggregateOutputType = {
    update_id: number
    campaign_id: number
    update_title: number
    update_detail: number
    published_at: number
    _all: number
  }


  export type Campaign_updateMinAggregateInputType = {
    update_id?: true
    campaign_id?: true
    update_title?: true
    update_detail?: true
    published_at?: true
  }

  export type Campaign_updateMaxAggregateInputType = {
    update_id?: true
    campaign_id?: true
    update_title?: true
    update_detail?: true
    published_at?: true
  }

  export type Campaign_updateCountAggregateInputType = {
    update_id?: true
    campaign_id?: true
    update_title?: true
    update_detail?: true
    published_at?: true
    _all?: true
  }

  export type Campaign_updateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which campaign_update to aggregate.
     */
    where?: campaign_updateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaign_updates to fetch.
     */
    orderBy?: campaign_updateOrderByWithRelationInput | campaign_updateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: campaign_updateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaign_updates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaign_updates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned campaign_updates
    **/
    _count?: true | Campaign_updateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Campaign_updateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Campaign_updateMaxAggregateInputType
  }

  export type GetCampaign_updateAggregateType<T extends Campaign_updateAggregateArgs> = {
        [P in keyof T & keyof AggregateCampaign_update]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampaign_update[P]>
      : GetScalarType<T[P], AggregateCampaign_update[P]>
  }




  export type campaign_updateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: campaign_updateWhereInput
    orderBy?: campaign_updateOrderByWithAggregationInput | campaign_updateOrderByWithAggregationInput[]
    by: Campaign_updateScalarFieldEnum[] | Campaign_updateScalarFieldEnum
    having?: campaign_updateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Campaign_updateCountAggregateInputType | true
    _min?: Campaign_updateMinAggregateInputType
    _max?: Campaign_updateMaxAggregateInputType
  }

  export type Campaign_updateGroupByOutputType = {
    update_id: string
    campaign_id: string
    update_title: string | null
    update_detail: string | null
    published_at: Date
    _count: Campaign_updateCountAggregateOutputType | null
    _min: Campaign_updateMinAggregateOutputType | null
    _max: Campaign_updateMaxAggregateOutputType | null
  }

  type GetCampaign_updateGroupByPayload<T extends campaign_updateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Campaign_updateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Campaign_updateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Campaign_updateGroupByOutputType[P]>
            : GetScalarType<T[P], Campaign_updateGroupByOutputType[P]>
        }
      >
    >


  export type campaign_updateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    update_id?: boolean
    campaign_id?: boolean
    update_title?: boolean
    update_detail?: boolean
    published_at?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campaign_update"]>

  export type campaign_updateSelectScalar = {
    update_id?: boolean
    campaign_id?: boolean
    update_title?: boolean
    update_detail?: boolean
    published_at?: boolean
  }


  export type campaign_updateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }


  export type $campaign_updatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "campaign_update"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      update_id: string
      campaign_id: string
      update_title: string | null
      update_detail: string | null
      published_at: Date
    }, ExtArgs["result"]["campaign_update"]>
    composites: {}
  }


  type campaign_updateGetPayload<S extends boolean | null | undefined | campaign_updateDefaultArgs> = $Result.GetResult<Prisma.$campaign_updatePayload, S>

  type campaign_updateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<campaign_updateFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Campaign_updateCountAggregateInputType | true
    }

  export interface campaign_updateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['campaign_update'], meta: { name: 'campaign_update' } }
    /**
     * Find zero or one Campaign_update that matches the filter.
     * @param {campaign_updateFindUniqueArgs} args - Arguments to find a Campaign_update
     * @example
     * // Get one Campaign_update
     * const campaign_update = await prisma.campaign_update.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends campaign_updateFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, campaign_updateFindUniqueArgs<ExtArgs>>
    ): Prisma__campaign_updateClient<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Campaign_update that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {campaign_updateFindUniqueOrThrowArgs} args - Arguments to find a Campaign_update
     * @example
     * // Get one Campaign_update
     * const campaign_update = await prisma.campaign_update.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends campaign_updateFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, campaign_updateFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__campaign_updateClient<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Campaign_update that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaign_updateFindFirstArgs} args - Arguments to find a Campaign_update
     * @example
     * // Get one Campaign_update
     * const campaign_update = await prisma.campaign_update.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends campaign_updateFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, campaign_updateFindFirstArgs<ExtArgs>>
    ): Prisma__campaign_updateClient<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Campaign_update that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaign_updateFindFirstOrThrowArgs} args - Arguments to find a Campaign_update
     * @example
     * // Get one Campaign_update
     * const campaign_update = await prisma.campaign_update.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends campaign_updateFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, campaign_updateFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__campaign_updateClient<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Campaign_updates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaign_updateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Campaign_updates
     * const campaign_updates = await prisma.campaign_update.findMany()
     * 
     * // Get first 10 Campaign_updates
     * const campaign_updates = await prisma.campaign_update.findMany({ take: 10 })
     * 
     * // Only select the `update_id`
     * const campaign_updateWithUpdate_idOnly = await prisma.campaign_update.findMany({ select: { update_id: true } })
     * 
    **/
    findMany<T extends campaign_updateFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, campaign_updateFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Campaign_update.
     * @param {campaign_updateCreateArgs} args - Arguments to create a Campaign_update.
     * @example
     * // Create one Campaign_update
     * const Campaign_update = await prisma.campaign_update.create({
     *   data: {
     *     // ... data to create a Campaign_update
     *   }
     * })
     * 
    **/
    create<T extends campaign_updateCreateArgs<ExtArgs>>(
      args: SelectSubset<T, campaign_updateCreateArgs<ExtArgs>>
    ): Prisma__campaign_updateClient<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Campaign_updates.
     * @param {campaign_updateCreateManyArgs} args - Arguments to create many Campaign_updates.
     * @example
     * // Create many Campaign_updates
     * const campaign_update = await prisma.campaign_update.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends campaign_updateCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, campaign_updateCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Campaign_updates and returns the data saved in the database.
     * @param {campaign_updateCreateManyAndReturnArgs} args - Arguments to create many Campaign_updates.
     * @example
     * // Create many Campaign_updates
     * const campaign_update = await prisma.campaign_update.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Campaign_updates and only return the `update_id`
     * const campaign_updateWithUpdate_idOnly = await prisma.campaign_update.createManyAndReturn({ 
     *   select: { update_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends campaign_updateCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, campaign_updateCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Campaign_update.
     * @param {campaign_updateDeleteArgs} args - Arguments to delete one Campaign_update.
     * @example
     * // Delete one Campaign_update
     * const Campaign_update = await prisma.campaign_update.delete({
     *   where: {
     *     // ... filter to delete one Campaign_update
     *   }
     * })
     * 
    **/
    delete<T extends campaign_updateDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, campaign_updateDeleteArgs<ExtArgs>>
    ): Prisma__campaign_updateClient<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Campaign_update.
     * @param {campaign_updateUpdateArgs} args - Arguments to update one Campaign_update.
     * @example
     * // Update one Campaign_update
     * const campaign_update = await prisma.campaign_update.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends campaign_updateUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, campaign_updateUpdateArgs<ExtArgs>>
    ): Prisma__campaign_updateClient<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Campaign_updates.
     * @param {campaign_updateDeleteManyArgs} args - Arguments to filter Campaign_updates to delete.
     * @example
     * // Delete a few Campaign_updates
     * const { count } = await prisma.campaign_update.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends campaign_updateDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, campaign_updateDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campaign_updates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaign_updateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Campaign_updates
     * const campaign_update = await prisma.campaign_update.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends campaign_updateUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, campaign_updateUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Campaign_update.
     * @param {campaign_updateUpsertArgs} args - Arguments to update or create a Campaign_update.
     * @example
     * // Update or create a Campaign_update
     * const campaign_update = await prisma.campaign_update.upsert({
     *   create: {
     *     // ... data to create a Campaign_update
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Campaign_update we want to update
     *   }
     * })
    **/
    upsert<T extends campaign_updateUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, campaign_updateUpsertArgs<ExtArgs>>
    ): Prisma__campaign_updateClient<$Result.GetResult<Prisma.$campaign_updatePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Campaign_updates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaign_updateCountArgs} args - Arguments to filter Campaign_updates to count.
     * @example
     * // Count the number of Campaign_updates
     * const count = await prisma.campaign_update.count({
     *   where: {
     *     // ... the filter for the Campaign_updates we want to count
     *   }
     * })
    **/
    count<T extends campaign_updateCountArgs>(
      args?: Subset<T, campaign_updateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Campaign_updateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Campaign_update.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Campaign_updateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Campaign_updateAggregateArgs>(args: Subset<T, Campaign_updateAggregateArgs>): Prisma.PrismaPromise<GetCampaign_updateAggregateType<T>>

    /**
     * Group by Campaign_update.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaign_updateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends campaign_updateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: campaign_updateGroupByArgs['orderBy'] }
        : { orderBy?: campaign_updateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, campaign_updateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampaign_updateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the campaign_update model
   */
  readonly fields: campaign_updateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for campaign_update.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__campaign_updateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the campaign_update model
   */ 
  interface campaign_updateFieldRefs {
    readonly update_id: FieldRef<"campaign_update", 'String'>
    readonly campaign_id: FieldRef<"campaign_update", 'String'>
    readonly update_title: FieldRef<"campaign_update", 'String'>
    readonly update_detail: FieldRef<"campaign_update", 'String'>
    readonly published_at: FieldRef<"campaign_update", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * campaign_update findUnique
   */
  export type campaign_updateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * Filter, which campaign_update to fetch.
     */
    where: campaign_updateWhereUniqueInput
  }

  /**
   * campaign_update findUniqueOrThrow
   */
  export type campaign_updateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * Filter, which campaign_update to fetch.
     */
    where: campaign_updateWhereUniqueInput
  }

  /**
   * campaign_update findFirst
   */
  export type campaign_updateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * Filter, which campaign_update to fetch.
     */
    where?: campaign_updateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaign_updates to fetch.
     */
    orderBy?: campaign_updateOrderByWithRelationInput | campaign_updateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for campaign_updates.
     */
    cursor?: campaign_updateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaign_updates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaign_updates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of campaign_updates.
     */
    distinct?: Campaign_updateScalarFieldEnum | Campaign_updateScalarFieldEnum[]
  }

  /**
   * campaign_update findFirstOrThrow
   */
  export type campaign_updateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * Filter, which campaign_update to fetch.
     */
    where?: campaign_updateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaign_updates to fetch.
     */
    orderBy?: campaign_updateOrderByWithRelationInput | campaign_updateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for campaign_updates.
     */
    cursor?: campaign_updateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaign_updates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaign_updates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of campaign_updates.
     */
    distinct?: Campaign_updateScalarFieldEnum | Campaign_updateScalarFieldEnum[]
  }

  /**
   * campaign_update findMany
   */
  export type campaign_updateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * Filter, which campaign_updates to fetch.
     */
    where?: campaign_updateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaign_updates to fetch.
     */
    orderBy?: campaign_updateOrderByWithRelationInput | campaign_updateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing campaign_updates.
     */
    cursor?: campaign_updateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaign_updates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaign_updates.
     */
    skip?: number
    distinct?: Campaign_updateScalarFieldEnum | Campaign_updateScalarFieldEnum[]
  }

  /**
   * campaign_update create
   */
  export type campaign_updateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * The data needed to create a campaign_update.
     */
    data: XOR<campaign_updateCreateInput, campaign_updateUncheckedCreateInput>
  }

  /**
   * campaign_update createMany
   */
  export type campaign_updateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many campaign_updates.
     */
    data: campaign_updateCreateManyInput | campaign_updateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * campaign_update createManyAndReturn
   */
  export type campaign_updateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * The data used to create many campaign_updates.
     */
    data: campaign_updateCreateManyInput | campaign_updateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * campaign_update update
   */
  export type campaign_updateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * The data needed to update a campaign_update.
     */
    data: XOR<campaign_updateUpdateInput, campaign_updateUncheckedUpdateInput>
    /**
     * Choose, which campaign_update to update.
     */
    where: campaign_updateWhereUniqueInput
  }

  /**
   * campaign_update updateMany
   */
  export type campaign_updateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update campaign_updates.
     */
    data: XOR<campaign_updateUpdateManyMutationInput, campaign_updateUncheckedUpdateManyInput>
    /**
     * Filter which campaign_updates to update
     */
    where?: campaign_updateWhereInput
  }

  /**
   * campaign_update upsert
   */
  export type campaign_updateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * The filter to search for the campaign_update to update in case it exists.
     */
    where: campaign_updateWhereUniqueInput
    /**
     * In case the campaign_update found by the `where` argument doesn't exist, create a new campaign_update with this data.
     */
    create: XOR<campaign_updateCreateInput, campaign_updateUncheckedCreateInput>
    /**
     * In case the campaign_update was found with the provided `where` argument, update it with this data.
     */
    update: XOR<campaign_updateUpdateInput, campaign_updateUncheckedUpdateInput>
  }

  /**
   * campaign_update delete
   */
  export type campaign_updateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
    /**
     * Filter which campaign_update to delete.
     */
    where: campaign_updateWhereUniqueInput
  }

  /**
   * campaign_update deleteMany
   */
  export type campaign_updateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which campaign_updates to delete
     */
    where?: campaign_updateWhereInput
  }

  /**
   * campaign_update without action
   */
  export type campaign_updateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign_update
     */
    select?: campaign_updateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaign_updateInclude<ExtArgs> | null
  }


  /**
   * Model community
   */

  export type AggregateCommunity = {
    _count: CommunityCountAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  export type CommunityMinAggregateOutputType = {
    community_id: string | null
    campaign_id: string | null
  }

  export type CommunityMaxAggregateOutputType = {
    community_id: string | null
    campaign_id: string | null
  }

  export type CommunityCountAggregateOutputType = {
    community_id: number
    campaign_id: number
    _all: number
  }


  export type CommunityMinAggregateInputType = {
    community_id?: true
    campaign_id?: true
  }

  export type CommunityMaxAggregateInputType = {
    community_id?: true
    campaign_id?: true
  }

  export type CommunityCountAggregateInputType = {
    community_id?: true
    campaign_id?: true
    _all?: true
  }

  export type CommunityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community to aggregate.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned communities
    **/
    _count?: true | CommunityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunityMaxAggregateInputType
  }

  export type GetCommunityAggregateType<T extends CommunityAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity[P]>
      : GetScalarType<T[P], AggregateCommunity[P]>
  }




  export type communityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communityWhereInput
    orderBy?: communityOrderByWithAggregationInput | communityOrderByWithAggregationInput[]
    by: CommunityScalarFieldEnum[] | CommunityScalarFieldEnum
    having?: communityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunityCountAggregateInputType | true
    _min?: CommunityMinAggregateInputType
    _max?: CommunityMaxAggregateInputType
  }

  export type CommunityGroupByOutputType = {
    community_id: string
    campaign_id: string
    _count: CommunityCountAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  type GetCommunityGroupByPayload<T extends communityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunityGroupByOutputType[P]>
            : GetScalarType<T[P], CommunityGroupByOutputType[P]>
        }
      >
    >


  export type communitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    community_id?: boolean
    campaign_id?: boolean
    community_membership?: boolean | community$community_membershipArgs<ExtArgs>
    community_proposal?: boolean | community$community_proposalArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community"]>

  export type communitySelectScalar = {
    community_id?: boolean
    campaign_id?: boolean
  }


  export type communityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_membership?: boolean | community$community_membershipArgs<ExtArgs>
    community_proposal?: boolean | community$community_proposalArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $communityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community"
    objects: {
      community_membership: Prisma.$community_membershipPayload<ExtArgs> | null
      community_proposal: Prisma.$community_proposalPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      community_id: string
      campaign_id: string
    }, ExtArgs["result"]["community"]>
    composites: {}
  }


  type communityGetPayload<S extends boolean | null | undefined | communityDefaultArgs> = $Result.GetResult<Prisma.$communityPayload, S>

  type communityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<communityFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CommunityCountAggregateInputType | true
    }

  export interface communityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community'], meta: { name: 'community' } }
    /**
     * Find zero or one Community that matches the filter.
     * @param {communityFindUniqueArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends communityFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, communityFindUniqueArgs<ExtArgs>>
    ): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Community that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {communityFindUniqueOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends communityFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communityFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Community that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindFirstArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends communityFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, communityFindFirstArgs<ExtArgs>>
    ): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Community that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindFirstOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends communityFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communityFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Communities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communities
     * const communities = await prisma.community.findMany()
     * 
     * // Get first 10 Communities
     * const communities = await prisma.community.findMany({ take: 10 })
     * 
     * // Only select the `community_id`
     * const communityWithCommunity_idOnly = await prisma.community.findMany({ select: { community_id: true } })
     * 
    **/
    findMany<T extends communityFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communityFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Community.
     * @param {communityCreateArgs} args - Arguments to create a Community.
     * @example
     * // Create one Community
     * const Community = await prisma.community.create({
     *   data: {
     *     // ... data to create a Community
     *   }
     * })
     * 
    **/
    create<T extends communityCreateArgs<ExtArgs>>(
      args: SelectSubset<T, communityCreateArgs<ExtArgs>>
    ): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Communities.
     * @param {communityCreateManyArgs} args - Arguments to create many Communities.
     * @example
     * // Create many Communities
     * const community = await prisma.community.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends communityCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communityCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Communities and returns the data saved in the database.
     * @param {communityCreateManyAndReturnArgs} args - Arguments to create many Communities.
     * @example
     * // Create many Communities
     * const community = await prisma.community.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Communities and only return the `community_id`
     * const communityWithCommunity_idOnly = await prisma.community.createManyAndReturn({ 
     *   select: { community_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends communityCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, communityCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Community.
     * @param {communityDeleteArgs} args - Arguments to delete one Community.
     * @example
     * // Delete one Community
     * const Community = await prisma.community.delete({
     *   where: {
     *     // ... filter to delete one Community
     *   }
     * })
     * 
    **/
    delete<T extends communityDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, communityDeleteArgs<ExtArgs>>
    ): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Community.
     * @param {communityUpdateArgs} args - Arguments to update one Community.
     * @example
     * // Update one Community
     * const community = await prisma.community.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends communityUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, communityUpdateArgs<ExtArgs>>
    ): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Communities.
     * @param {communityDeleteManyArgs} args - Arguments to filter Communities to delete.
     * @example
     * // Delete a few Communities
     * const { count } = await prisma.community.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends communityDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communityDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communities
     * const community = await prisma.community.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends communityUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, communityUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Community.
     * @param {communityUpsertArgs} args - Arguments to update or create a Community.
     * @example
     * // Update or create a Community
     * const community = await prisma.community.upsert({
     *   create: {
     *     // ... data to create a Community
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community we want to update
     *   }
     * })
    **/
    upsert<T extends communityUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, communityUpsertArgs<ExtArgs>>
    ): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityCountArgs} args - Arguments to filter Communities to count.
     * @example
     * // Count the number of Communities
     * const count = await prisma.community.count({
     *   where: {
     *     // ... the filter for the Communities we want to count
     *   }
     * })
    **/
    count<T extends communityCountArgs>(
      args?: Subset<T, communityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunityAggregateArgs>(args: Subset<T, CommunityAggregateArgs>): Prisma.PrismaPromise<GetCommunityAggregateType<T>>

    /**
     * Group by Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends communityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: communityGroupByArgs['orderBy'] }
        : { orderBy?: communityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, communityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community model
   */
  readonly fields: communityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__communityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    community_membership<T extends community$community_membershipArgs<ExtArgs> = {}>(args?: Subset<T, community$community_membershipArgs<ExtArgs>>): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    community_proposal<T extends community$community_proposalArgs<ExtArgs> = {}>(args?: Subset<T, community$community_proposalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the community model
   */ 
  interface communityFieldRefs {
    readonly community_id: FieldRef<"community", 'String'>
    readonly campaign_id: FieldRef<"community", 'String'>
  }
    

  // Custom InputTypes
  /**
   * community findUnique
   */
  export type communityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community findUniqueOrThrow
   */
  export type communityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community findFirst
   */
  export type communityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community findFirstOrThrow
   */
  export type communityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community findMany
   */
  export type communityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which communities to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community create
   */
  export type communityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data needed to create a community.
     */
    data: XOR<communityCreateInput, communityUncheckedCreateInput>
  }

  /**
   * community createMany
   */
  export type communityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many communities.
     */
    data: communityCreateManyInput | communityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community createManyAndReturn
   */
  export type communityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data used to create many communities.
     */
    data: communityCreateManyInput | communityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community update
   */
  export type communityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data needed to update a community.
     */
    data: XOR<communityUpdateInput, communityUncheckedUpdateInput>
    /**
     * Choose, which community to update.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community updateMany
   */
  export type communityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update communities.
     */
    data: XOR<communityUpdateManyMutationInput, communityUncheckedUpdateManyInput>
    /**
     * Filter which communities to update
     */
    where?: communityWhereInput
  }

  /**
   * community upsert
   */
  export type communityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The filter to search for the community to update in case it exists.
     */
    where: communityWhereUniqueInput
    /**
     * In case the community found by the `where` argument doesn't exist, create a new community with this data.
     */
    create: XOR<communityCreateInput, communityUncheckedCreateInput>
    /**
     * In case the community was found with the provided `where` argument, update it with this data.
     */
    update: XOR<communityUpdateInput, communityUncheckedUpdateInput>
  }

  /**
   * community delete
   */
  export type communityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter which community to delete.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community deleteMany
   */
  export type communityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communities to delete
     */
    where?: communityWhereInput
  }

  /**
   * community.community_membership
   */
  export type community$community_membershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    where?: community_membershipWhereInput
  }

  /**
   * community.community_proposal
   */
  export type community$community_proposalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    where?: community_proposalWhereInput
    orderBy?: community_proposalOrderByWithRelationInput | community_proposalOrderByWithRelationInput[]
    cursor?: community_proposalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_proposalScalarFieldEnum | Community_proposalScalarFieldEnum[]
  }

  /**
   * community without action
   */
  export type communityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
  }


  /**
   * Model community_chat
   */

  export type AggregateCommunity_chat = {
    _count: Community_chatCountAggregateOutputType | null
    _min: Community_chatMinAggregateOutputType | null
    _max: Community_chatMaxAggregateOutputType | null
  }

  export type Community_chatMinAggregateOutputType = {
    chat_id: string | null
    community_proposal_id: string | null
    chat: string | null
    user_id: string | null
    created_at: Date | null
  }

  export type Community_chatMaxAggregateOutputType = {
    chat_id: string | null
    community_proposal_id: string | null
    chat: string | null
    user_id: string | null
    created_at: Date | null
  }

  export type Community_chatCountAggregateOutputType = {
    chat_id: number
    community_proposal_id: number
    chat: number
    user_id: number
    created_at: number
    _all: number
  }


  export type Community_chatMinAggregateInputType = {
    chat_id?: true
    community_proposal_id?: true
    chat?: true
    user_id?: true
    created_at?: true
  }

  export type Community_chatMaxAggregateInputType = {
    chat_id?: true
    community_proposal_id?: true
    chat?: true
    user_id?: true
    created_at?: true
  }

  export type Community_chatCountAggregateInputType = {
    chat_id?: true
    community_proposal_id?: true
    chat?: true
    user_id?: true
    created_at?: true
    _all?: true
  }

  export type Community_chatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_chat to aggregate.
     */
    where?: community_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_chats to fetch.
     */
    orderBy?: community_chatOrderByWithRelationInput | community_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: community_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned community_chats
    **/
    _count?: true | Community_chatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Community_chatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Community_chatMaxAggregateInputType
  }

  export type GetCommunity_chatAggregateType<T extends Community_chatAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity_chat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity_chat[P]>
      : GetScalarType<T[P], AggregateCommunity_chat[P]>
  }




  export type community_chatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_chatWhereInput
    orderBy?: community_chatOrderByWithAggregationInput | community_chatOrderByWithAggregationInput[]
    by: Community_chatScalarFieldEnum[] | Community_chatScalarFieldEnum
    having?: community_chatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Community_chatCountAggregateInputType | true
    _min?: Community_chatMinAggregateInputType
    _max?: Community_chatMaxAggregateInputType
  }

  export type Community_chatGroupByOutputType = {
    chat_id: string
    community_proposal_id: string
    chat: string
    user_id: string
    created_at: Date
    _count: Community_chatCountAggregateOutputType | null
    _min: Community_chatMinAggregateOutputType | null
    _max: Community_chatMaxAggregateOutputType | null
  }

  type GetCommunity_chatGroupByPayload<T extends community_chatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Community_chatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Community_chatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Community_chatGroupByOutputType[P]>
            : GetScalarType<T[P], Community_chatGroupByOutputType[P]>
        }
      >
    >


  export type community_chatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    chat_id?: boolean
    community_proposal_id?: boolean
    chat?: boolean
    user_id?: boolean
    created_at?: boolean
    community_proposal?: boolean | community_proposalDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_chat"]>

  export type community_chatSelectScalar = {
    chat_id?: boolean
    community_proposal_id?: boolean
    chat?: boolean
    user_id?: boolean
    created_at?: boolean
  }


  export type community_chatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_proposal?: boolean | community_proposalDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $community_chatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community_chat"
    objects: {
      community_proposal: Prisma.$community_proposalPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      chat_id: string
      community_proposal_id: string
      chat: string
      user_id: string
      created_at: Date
    }, ExtArgs["result"]["community_chat"]>
    composites: {}
  }


  type community_chatGetPayload<S extends boolean | null | undefined | community_chatDefaultArgs> = $Result.GetResult<Prisma.$community_chatPayload, S>

  type community_chatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<community_chatFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Community_chatCountAggregateInputType | true
    }

  export interface community_chatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_chat'], meta: { name: 'community_chat' } }
    /**
     * Find zero or one Community_chat that matches the filter.
     * @param {community_chatFindUniqueArgs} args - Arguments to find a Community_chat
     * @example
     * // Get one Community_chat
     * const community_chat = await prisma.community_chat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends community_chatFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, community_chatFindUniqueArgs<ExtArgs>>
    ): Prisma__community_chatClient<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Community_chat that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {community_chatFindUniqueOrThrowArgs} args - Arguments to find a Community_chat
     * @example
     * // Get one Community_chat
     * const community_chat = await prisma.community_chat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends community_chatFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, community_chatFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__community_chatClient<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Community_chat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_chatFindFirstArgs} args - Arguments to find a Community_chat
     * @example
     * // Get one Community_chat
     * const community_chat = await prisma.community_chat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends community_chatFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, community_chatFindFirstArgs<ExtArgs>>
    ): Prisma__community_chatClient<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Community_chat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_chatFindFirstOrThrowArgs} args - Arguments to find a Community_chat
     * @example
     * // Get one Community_chat
     * const community_chat = await prisma.community_chat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends community_chatFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, community_chatFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__community_chatClient<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Community_chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_chatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Community_chats
     * const community_chats = await prisma.community_chat.findMany()
     * 
     * // Get first 10 Community_chats
     * const community_chats = await prisma.community_chat.findMany({ take: 10 })
     * 
     * // Only select the `chat_id`
     * const community_chatWithChat_idOnly = await prisma.community_chat.findMany({ select: { chat_id: true } })
     * 
    **/
    findMany<T extends community_chatFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_chatFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Community_chat.
     * @param {community_chatCreateArgs} args - Arguments to create a Community_chat.
     * @example
     * // Create one Community_chat
     * const Community_chat = await prisma.community_chat.create({
     *   data: {
     *     // ... data to create a Community_chat
     *   }
     * })
     * 
    **/
    create<T extends community_chatCreateArgs<ExtArgs>>(
      args: SelectSubset<T, community_chatCreateArgs<ExtArgs>>
    ): Prisma__community_chatClient<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Community_chats.
     * @param {community_chatCreateManyArgs} args - Arguments to create many Community_chats.
     * @example
     * // Create many Community_chats
     * const community_chat = await prisma.community_chat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends community_chatCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_chatCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Community_chats and returns the data saved in the database.
     * @param {community_chatCreateManyAndReturnArgs} args - Arguments to create many Community_chats.
     * @example
     * // Create many Community_chats
     * const community_chat = await prisma.community_chat.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Community_chats and only return the `chat_id`
     * const community_chatWithChat_idOnly = await prisma.community_chat.createManyAndReturn({ 
     *   select: { chat_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends community_chatCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, community_chatCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Community_chat.
     * @param {community_chatDeleteArgs} args - Arguments to delete one Community_chat.
     * @example
     * // Delete one Community_chat
     * const Community_chat = await prisma.community_chat.delete({
     *   where: {
     *     // ... filter to delete one Community_chat
     *   }
     * })
     * 
    **/
    delete<T extends community_chatDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, community_chatDeleteArgs<ExtArgs>>
    ): Prisma__community_chatClient<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Community_chat.
     * @param {community_chatUpdateArgs} args - Arguments to update one Community_chat.
     * @example
     * // Update one Community_chat
     * const community_chat = await prisma.community_chat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends community_chatUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, community_chatUpdateArgs<ExtArgs>>
    ): Prisma__community_chatClient<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Community_chats.
     * @param {community_chatDeleteManyArgs} args - Arguments to filter Community_chats to delete.
     * @example
     * // Delete a few Community_chats
     * const { count } = await prisma.community_chat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends community_chatDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_chatDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_chatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Community_chats
     * const community_chat = await prisma.community_chat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends community_chatUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, community_chatUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Community_chat.
     * @param {community_chatUpsertArgs} args - Arguments to update or create a Community_chat.
     * @example
     * // Update or create a Community_chat
     * const community_chat = await prisma.community_chat.upsert({
     *   create: {
     *     // ... data to create a Community_chat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community_chat we want to update
     *   }
     * })
    **/
    upsert<T extends community_chatUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, community_chatUpsertArgs<ExtArgs>>
    ): Prisma__community_chatClient<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Community_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_chatCountArgs} args - Arguments to filter Community_chats to count.
     * @example
     * // Count the number of Community_chats
     * const count = await prisma.community_chat.count({
     *   where: {
     *     // ... the filter for the Community_chats we want to count
     *   }
     * })
    **/
    count<T extends community_chatCountArgs>(
      args?: Subset<T, community_chatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Community_chatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community_chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Community_chatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Community_chatAggregateArgs>(args: Subset<T, Community_chatAggregateArgs>): Prisma.PrismaPromise<GetCommunity_chatAggregateType<T>>

    /**
     * Group by Community_chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_chatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends community_chatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: community_chatGroupByArgs['orderBy'] }
        : { orderBy?: community_chatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, community_chatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_chatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community_chat model
   */
  readonly fields: community_chatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community_chat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__community_chatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    community_proposal<T extends community_proposalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_proposalDefaultArgs<ExtArgs>>): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the community_chat model
   */ 
  interface community_chatFieldRefs {
    readonly chat_id: FieldRef<"community_chat", 'String'>
    readonly community_proposal_id: FieldRef<"community_chat", 'String'>
    readonly chat: FieldRef<"community_chat", 'String'>
    readonly user_id: FieldRef<"community_chat", 'String'>
    readonly created_at: FieldRef<"community_chat", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community_chat findUnique
   */
  export type community_chatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * Filter, which community_chat to fetch.
     */
    where: community_chatWhereUniqueInput
  }

  /**
   * community_chat findUniqueOrThrow
   */
  export type community_chatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * Filter, which community_chat to fetch.
     */
    where: community_chatWhereUniqueInput
  }

  /**
   * community_chat findFirst
   */
  export type community_chatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * Filter, which community_chat to fetch.
     */
    where?: community_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_chats to fetch.
     */
    orderBy?: community_chatOrderByWithRelationInput | community_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_chats.
     */
    cursor?: community_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_chats.
     */
    distinct?: Community_chatScalarFieldEnum | Community_chatScalarFieldEnum[]
  }

  /**
   * community_chat findFirstOrThrow
   */
  export type community_chatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * Filter, which community_chat to fetch.
     */
    where?: community_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_chats to fetch.
     */
    orderBy?: community_chatOrderByWithRelationInput | community_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_chats.
     */
    cursor?: community_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_chats.
     */
    distinct?: Community_chatScalarFieldEnum | Community_chatScalarFieldEnum[]
  }

  /**
   * community_chat findMany
   */
  export type community_chatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * Filter, which community_chats to fetch.
     */
    where?: community_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_chats to fetch.
     */
    orderBy?: community_chatOrderByWithRelationInput | community_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing community_chats.
     */
    cursor?: community_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_chats.
     */
    skip?: number
    distinct?: Community_chatScalarFieldEnum | Community_chatScalarFieldEnum[]
  }

  /**
   * community_chat create
   */
  export type community_chatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * The data needed to create a community_chat.
     */
    data: XOR<community_chatCreateInput, community_chatUncheckedCreateInput>
  }

  /**
   * community_chat createMany
   */
  export type community_chatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many community_chats.
     */
    data: community_chatCreateManyInput | community_chatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_chat createManyAndReturn
   */
  export type community_chatCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * The data used to create many community_chats.
     */
    data: community_chatCreateManyInput | community_chatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_chat update
   */
  export type community_chatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * The data needed to update a community_chat.
     */
    data: XOR<community_chatUpdateInput, community_chatUncheckedUpdateInput>
    /**
     * Choose, which community_chat to update.
     */
    where: community_chatWhereUniqueInput
  }

  /**
   * community_chat updateMany
   */
  export type community_chatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update community_chats.
     */
    data: XOR<community_chatUpdateManyMutationInput, community_chatUncheckedUpdateManyInput>
    /**
     * Filter which community_chats to update
     */
    where?: community_chatWhereInput
  }

  /**
   * community_chat upsert
   */
  export type community_chatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * The filter to search for the community_chat to update in case it exists.
     */
    where: community_chatWhereUniqueInput
    /**
     * In case the community_chat found by the `where` argument doesn't exist, create a new community_chat with this data.
     */
    create: XOR<community_chatCreateInput, community_chatUncheckedCreateInput>
    /**
     * In case the community_chat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<community_chatUpdateInput, community_chatUncheckedUpdateInput>
  }

  /**
   * community_chat delete
   */
  export type community_chatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    /**
     * Filter which community_chat to delete.
     */
    where: community_chatWhereUniqueInput
  }

  /**
   * community_chat deleteMany
   */
  export type community_chatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_chats to delete
     */
    where?: community_chatWhereInput
  }

  /**
   * community_chat without action
   */
  export type community_chatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
  }


  /**
   * Model community_membership
   */

  export type AggregateCommunity_membership = {
    _count: Community_membershipCountAggregateOutputType | null
    _min: Community_membershipMinAggregateOutputType | null
    _max: Community_membershipMaxAggregateOutputType | null
  }

  export type Community_membershipMinAggregateOutputType = {
    community_membership_id: string | null
    community_id: string | null
    user_id: string | null
    joinedDate: Date | null
    exited_date: Date | null
  }

  export type Community_membershipMaxAggregateOutputType = {
    community_membership_id: string | null
    community_id: string | null
    user_id: string | null
    joinedDate: Date | null
    exited_date: Date | null
  }

  export type Community_membershipCountAggregateOutputType = {
    community_membership_id: number
    community_id: number
    user_id: number
    joinedDate: number
    exited_date: number
    _all: number
  }


  export type Community_membershipMinAggregateInputType = {
    community_membership_id?: true
    community_id?: true
    user_id?: true
    joinedDate?: true
    exited_date?: true
  }

  export type Community_membershipMaxAggregateInputType = {
    community_membership_id?: true
    community_id?: true
    user_id?: true
    joinedDate?: true
    exited_date?: true
  }

  export type Community_membershipCountAggregateInputType = {
    community_membership_id?: true
    community_id?: true
    user_id?: true
    joinedDate?: true
    exited_date?: true
    _all?: true
  }

  export type Community_membershipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_membership to aggregate.
     */
    where?: community_membershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_memberships to fetch.
     */
    orderBy?: community_membershipOrderByWithRelationInput | community_membershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: community_membershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_memberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_memberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned community_memberships
    **/
    _count?: true | Community_membershipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Community_membershipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Community_membershipMaxAggregateInputType
  }

  export type GetCommunity_membershipAggregateType<T extends Community_membershipAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity_membership]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity_membership[P]>
      : GetScalarType<T[P], AggregateCommunity_membership[P]>
  }




  export type community_membershipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_membershipWhereInput
    orderBy?: community_membershipOrderByWithAggregationInput | community_membershipOrderByWithAggregationInput[]
    by: Community_membershipScalarFieldEnum[] | Community_membershipScalarFieldEnum
    having?: community_membershipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Community_membershipCountAggregateInputType | true
    _min?: Community_membershipMinAggregateInputType
    _max?: Community_membershipMaxAggregateInputType
  }

  export type Community_membershipGroupByOutputType = {
    community_membership_id: string
    community_id: string
    user_id: string
    joinedDate: Date
    exited_date: Date | null
    _count: Community_membershipCountAggregateOutputType | null
    _min: Community_membershipMinAggregateOutputType | null
    _max: Community_membershipMaxAggregateOutputType | null
  }

  type GetCommunity_membershipGroupByPayload<T extends community_membershipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Community_membershipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Community_membershipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Community_membershipGroupByOutputType[P]>
            : GetScalarType<T[P], Community_membershipGroupByOutputType[P]>
        }
      >
    >


  export type community_membershipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    community_membership_id?: boolean
    community_id?: boolean
    user_id?: boolean
    joinedDate?: boolean
    exited_date?: boolean
    community?: boolean | communityDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_membership"]>

  export type community_membershipSelectScalar = {
    community_membership_id?: boolean
    community_id?: boolean
    user_id?: boolean
    joinedDate?: boolean
    exited_date?: boolean
  }


  export type community_membershipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community?: boolean | communityDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $community_membershipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community_membership"
    objects: {
      community: Prisma.$communityPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      community_membership_id: string
      community_id: string
      user_id: string
      joinedDate: Date
      exited_date: Date | null
    }, ExtArgs["result"]["community_membership"]>
    composites: {}
  }


  type community_membershipGetPayload<S extends boolean | null | undefined | community_membershipDefaultArgs> = $Result.GetResult<Prisma.$community_membershipPayload, S>

  type community_membershipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<community_membershipFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Community_membershipCountAggregateInputType | true
    }

  export interface community_membershipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_membership'], meta: { name: 'community_membership' } }
    /**
     * Find zero or one Community_membership that matches the filter.
     * @param {community_membershipFindUniqueArgs} args - Arguments to find a Community_membership
     * @example
     * // Get one Community_membership
     * const community_membership = await prisma.community_membership.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends community_membershipFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, community_membershipFindUniqueArgs<ExtArgs>>
    ): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Community_membership that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {community_membershipFindUniqueOrThrowArgs} args - Arguments to find a Community_membership
     * @example
     * // Get one Community_membership
     * const community_membership = await prisma.community_membership.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends community_membershipFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, community_membershipFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Community_membership that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_membershipFindFirstArgs} args - Arguments to find a Community_membership
     * @example
     * // Get one Community_membership
     * const community_membership = await prisma.community_membership.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends community_membershipFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, community_membershipFindFirstArgs<ExtArgs>>
    ): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Community_membership that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_membershipFindFirstOrThrowArgs} args - Arguments to find a Community_membership
     * @example
     * // Get one Community_membership
     * const community_membership = await prisma.community_membership.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends community_membershipFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, community_membershipFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Community_memberships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_membershipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Community_memberships
     * const community_memberships = await prisma.community_membership.findMany()
     * 
     * // Get first 10 Community_memberships
     * const community_memberships = await prisma.community_membership.findMany({ take: 10 })
     * 
     * // Only select the `community_membership_id`
     * const community_membershipWithCommunity_membership_idOnly = await prisma.community_membership.findMany({ select: { community_membership_id: true } })
     * 
    **/
    findMany<T extends community_membershipFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_membershipFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Community_membership.
     * @param {community_membershipCreateArgs} args - Arguments to create a Community_membership.
     * @example
     * // Create one Community_membership
     * const Community_membership = await prisma.community_membership.create({
     *   data: {
     *     // ... data to create a Community_membership
     *   }
     * })
     * 
    **/
    create<T extends community_membershipCreateArgs<ExtArgs>>(
      args: SelectSubset<T, community_membershipCreateArgs<ExtArgs>>
    ): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Community_memberships.
     * @param {community_membershipCreateManyArgs} args - Arguments to create many Community_memberships.
     * @example
     * // Create many Community_memberships
     * const community_membership = await prisma.community_membership.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends community_membershipCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_membershipCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Community_memberships and returns the data saved in the database.
     * @param {community_membershipCreateManyAndReturnArgs} args - Arguments to create many Community_memberships.
     * @example
     * // Create many Community_memberships
     * const community_membership = await prisma.community_membership.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Community_memberships and only return the `community_membership_id`
     * const community_membershipWithCommunity_membership_idOnly = await prisma.community_membership.createManyAndReturn({ 
     *   select: { community_membership_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends community_membershipCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, community_membershipCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Community_membership.
     * @param {community_membershipDeleteArgs} args - Arguments to delete one Community_membership.
     * @example
     * // Delete one Community_membership
     * const Community_membership = await prisma.community_membership.delete({
     *   where: {
     *     // ... filter to delete one Community_membership
     *   }
     * })
     * 
    **/
    delete<T extends community_membershipDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, community_membershipDeleteArgs<ExtArgs>>
    ): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Community_membership.
     * @param {community_membershipUpdateArgs} args - Arguments to update one Community_membership.
     * @example
     * // Update one Community_membership
     * const community_membership = await prisma.community_membership.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends community_membershipUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, community_membershipUpdateArgs<ExtArgs>>
    ): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Community_memberships.
     * @param {community_membershipDeleteManyArgs} args - Arguments to filter Community_memberships to delete.
     * @example
     * // Delete a few Community_memberships
     * const { count } = await prisma.community_membership.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends community_membershipDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_membershipDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_memberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_membershipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Community_memberships
     * const community_membership = await prisma.community_membership.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends community_membershipUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, community_membershipUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Community_membership.
     * @param {community_membershipUpsertArgs} args - Arguments to update or create a Community_membership.
     * @example
     * // Update or create a Community_membership
     * const community_membership = await prisma.community_membership.upsert({
     *   create: {
     *     // ... data to create a Community_membership
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community_membership we want to update
     *   }
     * })
    **/
    upsert<T extends community_membershipUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, community_membershipUpsertArgs<ExtArgs>>
    ): Prisma__community_membershipClient<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Community_memberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_membershipCountArgs} args - Arguments to filter Community_memberships to count.
     * @example
     * // Count the number of Community_memberships
     * const count = await prisma.community_membership.count({
     *   where: {
     *     // ... the filter for the Community_memberships we want to count
     *   }
     * })
    **/
    count<T extends community_membershipCountArgs>(
      args?: Subset<T, community_membershipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Community_membershipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community_membership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Community_membershipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Community_membershipAggregateArgs>(args: Subset<T, Community_membershipAggregateArgs>): Prisma.PrismaPromise<GetCommunity_membershipAggregateType<T>>

    /**
     * Group by Community_membership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_membershipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends community_membershipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: community_membershipGroupByArgs['orderBy'] }
        : { orderBy?: community_membershipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, community_membershipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_membershipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community_membership model
   */
  readonly fields: community_membershipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community_membership.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__community_membershipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    community<T extends communityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, communityDefaultArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the community_membership model
   */ 
  interface community_membershipFieldRefs {
    readonly community_membership_id: FieldRef<"community_membership", 'String'>
    readonly community_id: FieldRef<"community_membership", 'String'>
    readonly user_id: FieldRef<"community_membership", 'String'>
    readonly joinedDate: FieldRef<"community_membership", 'DateTime'>
    readonly exited_date: FieldRef<"community_membership", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community_membership findUnique
   */
  export type community_membershipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * Filter, which community_membership to fetch.
     */
    where: community_membershipWhereUniqueInput
  }

  /**
   * community_membership findUniqueOrThrow
   */
  export type community_membershipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * Filter, which community_membership to fetch.
     */
    where: community_membershipWhereUniqueInput
  }

  /**
   * community_membership findFirst
   */
  export type community_membershipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * Filter, which community_membership to fetch.
     */
    where?: community_membershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_memberships to fetch.
     */
    orderBy?: community_membershipOrderByWithRelationInput | community_membershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_memberships.
     */
    cursor?: community_membershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_memberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_memberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_memberships.
     */
    distinct?: Community_membershipScalarFieldEnum | Community_membershipScalarFieldEnum[]
  }

  /**
   * community_membership findFirstOrThrow
   */
  export type community_membershipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * Filter, which community_membership to fetch.
     */
    where?: community_membershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_memberships to fetch.
     */
    orderBy?: community_membershipOrderByWithRelationInput | community_membershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_memberships.
     */
    cursor?: community_membershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_memberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_memberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_memberships.
     */
    distinct?: Community_membershipScalarFieldEnum | Community_membershipScalarFieldEnum[]
  }

  /**
   * community_membership findMany
   */
  export type community_membershipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * Filter, which community_memberships to fetch.
     */
    where?: community_membershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_memberships to fetch.
     */
    orderBy?: community_membershipOrderByWithRelationInput | community_membershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing community_memberships.
     */
    cursor?: community_membershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_memberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_memberships.
     */
    skip?: number
    distinct?: Community_membershipScalarFieldEnum | Community_membershipScalarFieldEnum[]
  }

  /**
   * community_membership create
   */
  export type community_membershipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * The data needed to create a community_membership.
     */
    data: XOR<community_membershipCreateInput, community_membershipUncheckedCreateInput>
  }

  /**
   * community_membership createMany
   */
  export type community_membershipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many community_memberships.
     */
    data: community_membershipCreateManyInput | community_membershipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_membership createManyAndReturn
   */
  export type community_membershipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * The data used to create many community_memberships.
     */
    data: community_membershipCreateManyInput | community_membershipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_membership update
   */
  export type community_membershipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * The data needed to update a community_membership.
     */
    data: XOR<community_membershipUpdateInput, community_membershipUncheckedUpdateInput>
    /**
     * Choose, which community_membership to update.
     */
    where: community_membershipWhereUniqueInput
  }

  /**
   * community_membership updateMany
   */
  export type community_membershipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update community_memberships.
     */
    data: XOR<community_membershipUpdateManyMutationInput, community_membershipUncheckedUpdateManyInput>
    /**
     * Filter which community_memberships to update
     */
    where?: community_membershipWhereInput
  }

  /**
   * community_membership upsert
   */
  export type community_membershipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * The filter to search for the community_membership to update in case it exists.
     */
    where: community_membershipWhereUniqueInput
    /**
     * In case the community_membership found by the `where` argument doesn't exist, create a new community_membership with this data.
     */
    create: XOR<community_membershipCreateInput, community_membershipUncheckedCreateInput>
    /**
     * In case the community_membership was found with the provided `where` argument, update it with this data.
     */
    update: XOR<community_membershipUpdateInput, community_membershipUncheckedUpdateInput>
  }

  /**
   * community_membership delete
   */
  export type community_membershipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    /**
     * Filter which community_membership to delete.
     */
    where: community_membershipWhereUniqueInput
  }

  /**
   * community_membership deleteMany
   */
  export type community_membershipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_memberships to delete
     */
    where?: community_membershipWhereInput
  }

  /**
   * community_membership without action
   */
  export type community_membershipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
  }


  /**
   * Model community_proposal
   */

  export type AggregateCommunity_proposal = {
    _count: Community_proposalCountAggregateOutputType | null
    _avg: Community_proposalAvgAggregateOutputType | null
    _sum: Community_proposalSumAggregateOutputType | null
    _min: Community_proposalMinAggregateOutputType | null
    _max: Community_proposalMaxAggregateOutputType | null
  }

  export type Community_proposalAvgAggregateOutputType = {
    setuju: number | null
    tidak_setuju: number | null
    abstain: number | null
    amount: number | null
  }

  export type Community_proposalSumAggregateOutputType = {
    setuju: number | null
    tidak_setuju: number | null
    abstain: number | null
    amount: bigint | null
  }

  export type Community_proposalMinAggregateOutputType = {
    proposal_com_id: string | null
    setuju: number | null
    tidak_setuju: number | null
    abstain: number | null
    title: string | null
    deskripsi: string | null
    file_tambahan: Buffer | null
    amount: bigint | null
    community_id: string | null
  }

  export type Community_proposalMaxAggregateOutputType = {
    proposal_com_id: string | null
    setuju: number | null
    tidak_setuju: number | null
    abstain: number | null
    title: string | null
    deskripsi: string | null
    file_tambahan: Buffer | null
    amount: bigint | null
    community_id: string | null
  }

  export type Community_proposalCountAggregateOutputType = {
    proposal_com_id: number
    setuju: number
    tidak_setuju: number
    abstain: number
    title: number
    deskripsi: number
    file_tambahan: number
    amount: number
    community_id: number
    _all: number
  }


  export type Community_proposalAvgAggregateInputType = {
    setuju?: true
    tidak_setuju?: true
    abstain?: true
    amount?: true
  }

  export type Community_proposalSumAggregateInputType = {
    setuju?: true
    tidak_setuju?: true
    abstain?: true
    amount?: true
  }

  export type Community_proposalMinAggregateInputType = {
    proposal_com_id?: true
    setuju?: true
    tidak_setuju?: true
    abstain?: true
    title?: true
    deskripsi?: true
    file_tambahan?: true
    amount?: true
    community_id?: true
  }

  export type Community_proposalMaxAggregateInputType = {
    proposal_com_id?: true
    setuju?: true
    tidak_setuju?: true
    abstain?: true
    title?: true
    deskripsi?: true
    file_tambahan?: true
    amount?: true
    community_id?: true
  }

  export type Community_proposalCountAggregateInputType = {
    proposal_com_id?: true
    setuju?: true
    tidak_setuju?: true
    abstain?: true
    title?: true
    deskripsi?: true
    file_tambahan?: true
    amount?: true
    community_id?: true
    _all?: true
  }

  export type Community_proposalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_proposal to aggregate.
     */
    where?: community_proposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_proposals to fetch.
     */
    orderBy?: community_proposalOrderByWithRelationInput | community_proposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: community_proposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_proposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_proposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned community_proposals
    **/
    _count?: true | Community_proposalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Community_proposalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Community_proposalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Community_proposalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Community_proposalMaxAggregateInputType
  }

  export type GetCommunity_proposalAggregateType<T extends Community_proposalAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity_proposal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity_proposal[P]>
      : GetScalarType<T[P], AggregateCommunity_proposal[P]>
  }




  export type community_proposalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_proposalWhereInput
    orderBy?: community_proposalOrderByWithAggregationInput | community_proposalOrderByWithAggregationInput[]
    by: Community_proposalScalarFieldEnum[] | Community_proposalScalarFieldEnum
    having?: community_proposalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Community_proposalCountAggregateInputType | true
    _avg?: Community_proposalAvgAggregateInputType
    _sum?: Community_proposalSumAggregateInputType
    _min?: Community_proposalMinAggregateInputType
    _max?: Community_proposalMaxAggregateInputType
  }

  export type Community_proposalGroupByOutputType = {
    proposal_com_id: string
    setuju: number
    tidak_setuju: number
    abstain: number
    title: string
    deskripsi: string | null
    file_tambahan: Buffer | null
    amount: bigint
    community_id: string
    _count: Community_proposalCountAggregateOutputType | null
    _avg: Community_proposalAvgAggregateOutputType | null
    _sum: Community_proposalSumAggregateOutputType | null
    _min: Community_proposalMinAggregateOutputType | null
    _max: Community_proposalMaxAggregateOutputType | null
  }

  type GetCommunity_proposalGroupByPayload<T extends community_proposalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Community_proposalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Community_proposalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Community_proposalGroupByOutputType[P]>
            : GetScalarType<T[P], Community_proposalGroupByOutputType[P]>
        }
      >
    >


  export type community_proposalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    proposal_com_id?: boolean
    setuju?: boolean
    tidak_setuju?: boolean
    abstain?: boolean
    title?: boolean
    deskripsi?: boolean
    file_tambahan?: boolean
    amount?: boolean
    community_id?: boolean
    community_chat?: boolean | community_proposal$community_chatArgs<ExtArgs>
    community?: boolean | communityDefaultArgs<ExtArgs>
    user_voted?: boolean | community_proposal$user_votedArgs<ExtArgs>
    _count?: boolean | Community_proposalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_proposal"]>

  export type community_proposalSelectScalar = {
    proposal_com_id?: boolean
    setuju?: boolean
    tidak_setuju?: boolean
    abstain?: boolean
    title?: boolean
    deskripsi?: boolean
    file_tambahan?: boolean
    amount?: boolean
    community_id?: boolean
  }


  export type community_proposalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_chat?: boolean | community_proposal$community_chatArgs<ExtArgs>
    community?: boolean | communityDefaultArgs<ExtArgs>
    user_voted?: boolean | community_proposal$user_votedArgs<ExtArgs>
    _count?: boolean | Community_proposalCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $community_proposalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community_proposal"
    objects: {
      community_chat: Prisma.$community_chatPayload<ExtArgs>[]
      community: Prisma.$communityPayload<ExtArgs>
      user_voted: Prisma.$user_votedPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      proposal_com_id: string
      setuju: number
      tidak_setuju: number
      abstain: number
      title: string
      deskripsi: string | null
      file_tambahan: Buffer | null
      amount: bigint
      community_id: string
    }, ExtArgs["result"]["community_proposal"]>
    composites: {}
  }


  type community_proposalGetPayload<S extends boolean | null | undefined | community_proposalDefaultArgs> = $Result.GetResult<Prisma.$community_proposalPayload, S>

  type community_proposalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<community_proposalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Community_proposalCountAggregateInputType | true
    }

  export interface community_proposalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_proposal'], meta: { name: 'community_proposal' } }
    /**
     * Find zero or one Community_proposal that matches the filter.
     * @param {community_proposalFindUniqueArgs} args - Arguments to find a Community_proposal
     * @example
     * // Get one Community_proposal
     * const community_proposal = await prisma.community_proposal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends community_proposalFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, community_proposalFindUniqueArgs<ExtArgs>>
    ): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Community_proposal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {community_proposalFindUniqueOrThrowArgs} args - Arguments to find a Community_proposal
     * @example
     * // Get one Community_proposal
     * const community_proposal = await prisma.community_proposal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends community_proposalFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, community_proposalFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Community_proposal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_proposalFindFirstArgs} args - Arguments to find a Community_proposal
     * @example
     * // Get one Community_proposal
     * const community_proposal = await prisma.community_proposal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends community_proposalFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, community_proposalFindFirstArgs<ExtArgs>>
    ): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Community_proposal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_proposalFindFirstOrThrowArgs} args - Arguments to find a Community_proposal
     * @example
     * // Get one Community_proposal
     * const community_proposal = await prisma.community_proposal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends community_proposalFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, community_proposalFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Community_proposals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_proposalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Community_proposals
     * const community_proposals = await prisma.community_proposal.findMany()
     * 
     * // Get first 10 Community_proposals
     * const community_proposals = await prisma.community_proposal.findMany({ take: 10 })
     * 
     * // Only select the `proposal_com_id`
     * const community_proposalWithProposal_com_idOnly = await prisma.community_proposal.findMany({ select: { proposal_com_id: true } })
     * 
    **/
    findMany<T extends community_proposalFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_proposalFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Community_proposal.
     * @param {community_proposalCreateArgs} args - Arguments to create a Community_proposal.
     * @example
     * // Create one Community_proposal
     * const Community_proposal = await prisma.community_proposal.create({
     *   data: {
     *     // ... data to create a Community_proposal
     *   }
     * })
     * 
    **/
    create<T extends community_proposalCreateArgs<ExtArgs>>(
      args: SelectSubset<T, community_proposalCreateArgs<ExtArgs>>
    ): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Community_proposals.
     * @param {community_proposalCreateManyArgs} args - Arguments to create many Community_proposals.
     * @example
     * // Create many Community_proposals
     * const community_proposal = await prisma.community_proposal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends community_proposalCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_proposalCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Community_proposals and returns the data saved in the database.
     * @param {community_proposalCreateManyAndReturnArgs} args - Arguments to create many Community_proposals.
     * @example
     * // Create many Community_proposals
     * const community_proposal = await prisma.community_proposal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Community_proposals and only return the `proposal_com_id`
     * const community_proposalWithProposal_com_idOnly = await prisma.community_proposal.createManyAndReturn({ 
     *   select: { proposal_com_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends community_proposalCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, community_proposalCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Community_proposal.
     * @param {community_proposalDeleteArgs} args - Arguments to delete one Community_proposal.
     * @example
     * // Delete one Community_proposal
     * const Community_proposal = await prisma.community_proposal.delete({
     *   where: {
     *     // ... filter to delete one Community_proposal
     *   }
     * })
     * 
    **/
    delete<T extends community_proposalDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, community_proposalDeleteArgs<ExtArgs>>
    ): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Community_proposal.
     * @param {community_proposalUpdateArgs} args - Arguments to update one Community_proposal.
     * @example
     * // Update one Community_proposal
     * const community_proposal = await prisma.community_proposal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends community_proposalUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, community_proposalUpdateArgs<ExtArgs>>
    ): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Community_proposals.
     * @param {community_proposalDeleteManyArgs} args - Arguments to filter Community_proposals to delete.
     * @example
     * // Delete a few Community_proposals
     * const { count } = await prisma.community_proposal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends community_proposalDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, community_proposalDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_proposals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_proposalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Community_proposals
     * const community_proposal = await prisma.community_proposal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends community_proposalUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, community_proposalUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Community_proposal.
     * @param {community_proposalUpsertArgs} args - Arguments to update or create a Community_proposal.
     * @example
     * // Update or create a Community_proposal
     * const community_proposal = await prisma.community_proposal.upsert({
     *   create: {
     *     // ... data to create a Community_proposal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community_proposal we want to update
     *   }
     * })
    **/
    upsert<T extends community_proposalUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, community_proposalUpsertArgs<ExtArgs>>
    ): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Community_proposals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_proposalCountArgs} args - Arguments to filter Community_proposals to count.
     * @example
     * // Count the number of Community_proposals
     * const count = await prisma.community_proposal.count({
     *   where: {
     *     // ... the filter for the Community_proposals we want to count
     *   }
     * })
    **/
    count<T extends community_proposalCountArgs>(
      args?: Subset<T, community_proposalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Community_proposalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community_proposal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Community_proposalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Community_proposalAggregateArgs>(args: Subset<T, Community_proposalAggregateArgs>): Prisma.PrismaPromise<GetCommunity_proposalAggregateType<T>>

    /**
     * Group by Community_proposal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_proposalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends community_proposalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: community_proposalGroupByArgs['orderBy'] }
        : { orderBy?: community_proposalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, community_proposalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_proposalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community_proposal model
   */
  readonly fields: community_proposalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community_proposal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__community_proposalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    community_chat<T extends community_proposal$community_chatArgs<ExtArgs> = {}>(args?: Subset<T, community_proposal$community_chatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'findMany'> | Null>;

    community<T extends communityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, communityDefaultArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    user_voted<T extends community_proposal$user_votedArgs<ExtArgs> = {}>(args?: Subset<T, community_proposal$user_votedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the community_proposal model
   */ 
  interface community_proposalFieldRefs {
    readonly proposal_com_id: FieldRef<"community_proposal", 'String'>
    readonly setuju: FieldRef<"community_proposal", 'Int'>
    readonly tidak_setuju: FieldRef<"community_proposal", 'Int'>
    readonly abstain: FieldRef<"community_proposal", 'Int'>
    readonly title: FieldRef<"community_proposal", 'String'>
    readonly deskripsi: FieldRef<"community_proposal", 'String'>
    readonly file_tambahan: FieldRef<"community_proposal", 'Bytes'>
    readonly amount: FieldRef<"community_proposal", 'BigInt'>
    readonly community_id: FieldRef<"community_proposal", 'String'>
  }
    

  // Custom InputTypes
  /**
   * community_proposal findUnique
   */
  export type community_proposalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * Filter, which community_proposal to fetch.
     */
    where: community_proposalWhereUniqueInput
  }

  /**
   * community_proposal findUniqueOrThrow
   */
  export type community_proposalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * Filter, which community_proposal to fetch.
     */
    where: community_proposalWhereUniqueInput
  }

  /**
   * community_proposal findFirst
   */
  export type community_proposalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * Filter, which community_proposal to fetch.
     */
    where?: community_proposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_proposals to fetch.
     */
    orderBy?: community_proposalOrderByWithRelationInput | community_proposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_proposals.
     */
    cursor?: community_proposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_proposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_proposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_proposals.
     */
    distinct?: Community_proposalScalarFieldEnum | Community_proposalScalarFieldEnum[]
  }

  /**
   * community_proposal findFirstOrThrow
   */
  export type community_proposalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * Filter, which community_proposal to fetch.
     */
    where?: community_proposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_proposals to fetch.
     */
    orderBy?: community_proposalOrderByWithRelationInput | community_proposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_proposals.
     */
    cursor?: community_proposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_proposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_proposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_proposals.
     */
    distinct?: Community_proposalScalarFieldEnum | Community_proposalScalarFieldEnum[]
  }

  /**
   * community_proposal findMany
   */
  export type community_proposalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * Filter, which community_proposals to fetch.
     */
    where?: community_proposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_proposals to fetch.
     */
    orderBy?: community_proposalOrderByWithRelationInput | community_proposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing community_proposals.
     */
    cursor?: community_proposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_proposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_proposals.
     */
    skip?: number
    distinct?: Community_proposalScalarFieldEnum | Community_proposalScalarFieldEnum[]
  }

  /**
   * community_proposal create
   */
  export type community_proposalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * The data needed to create a community_proposal.
     */
    data: XOR<community_proposalCreateInput, community_proposalUncheckedCreateInput>
  }

  /**
   * community_proposal createMany
   */
  export type community_proposalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many community_proposals.
     */
    data: community_proposalCreateManyInput | community_proposalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_proposal createManyAndReturn
   */
  export type community_proposalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * The data used to create many community_proposals.
     */
    data: community_proposalCreateManyInput | community_proposalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_proposal update
   */
  export type community_proposalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * The data needed to update a community_proposal.
     */
    data: XOR<community_proposalUpdateInput, community_proposalUncheckedUpdateInput>
    /**
     * Choose, which community_proposal to update.
     */
    where: community_proposalWhereUniqueInput
  }

  /**
   * community_proposal updateMany
   */
  export type community_proposalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update community_proposals.
     */
    data: XOR<community_proposalUpdateManyMutationInput, community_proposalUncheckedUpdateManyInput>
    /**
     * Filter which community_proposals to update
     */
    where?: community_proposalWhereInput
  }

  /**
   * community_proposal upsert
   */
  export type community_proposalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * The filter to search for the community_proposal to update in case it exists.
     */
    where: community_proposalWhereUniqueInput
    /**
     * In case the community_proposal found by the `where` argument doesn't exist, create a new community_proposal with this data.
     */
    create: XOR<community_proposalCreateInput, community_proposalUncheckedCreateInput>
    /**
     * In case the community_proposal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<community_proposalUpdateInput, community_proposalUncheckedUpdateInput>
  }

  /**
   * community_proposal delete
   */
  export type community_proposalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
    /**
     * Filter which community_proposal to delete.
     */
    where: community_proposalWhereUniqueInput
  }

  /**
   * community_proposal deleteMany
   */
  export type community_proposalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_proposals to delete
     */
    where?: community_proposalWhereInput
  }

  /**
   * community_proposal.community_chat
   */
  export type community_proposal$community_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    where?: community_chatWhereInput
    orderBy?: community_chatOrderByWithRelationInput | community_chatOrderByWithRelationInput[]
    cursor?: community_chatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_chatScalarFieldEnum | Community_chatScalarFieldEnum[]
  }

  /**
   * community_proposal.user_voted
   */
  export type community_proposal$user_votedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    where?: user_votedWhereInput
    orderBy?: user_votedOrderByWithRelationInput | user_votedOrderByWithRelationInput[]
    cursor?: user_votedWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_votedScalarFieldEnum | User_votedScalarFieldEnum[]
  }

  /**
   * community_proposal without action
   */
  export type community_proposalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_proposal
     */
    select?: community_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_proposalInclude<ExtArgs> | null
  }


  /**
   * Model contact_usaha
   */

  export type AggregateContact_usaha = {
    _count: Contact_usahaCountAggregateOutputType | null
    _min: Contact_usahaMinAggregateOutputType | null
    _max: Contact_usahaMaxAggregateOutputType | null
  }

  export type Contact_usahaMinAggregateOutputType = {
    contact_id: string | null
    campaign_id: string | null
    telepon_wa: string | null
    fax: string | null
    email: string | null
    website: string | null
  }

  export type Contact_usahaMaxAggregateOutputType = {
    contact_id: string | null
    campaign_id: string | null
    telepon_wa: string | null
    fax: string | null
    email: string | null
    website: string | null
  }

  export type Contact_usahaCountAggregateOutputType = {
    contact_id: number
    campaign_id: number
    telepon_wa: number
    fax: number
    email: number
    website: number
    _all: number
  }


  export type Contact_usahaMinAggregateInputType = {
    contact_id?: true
    campaign_id?: true
    telepon_wa?: true
    fax?: true
    email?: true
    website?: true
  }

  export type Contact_usahaMaxAggregateInputType = {
    contact_id?: true
    campaign_id?: true
    telepon_wa?: true
    fax?: true
    email?: true
    website?: true
  }

  export type Contact_usahaCountAggregateInputType = {
    contact_id?: true
    campaign_id?: true
    telepon_wa?: true
    fax?: true
    email?: true
    website?: true
    _all?: true
  }

  export type Contact_usahaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact_usaha to aggregate.
     */
    where?: contact_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_usahas to fetch.
     */
    orderBy?: contact_usahaOrderByWithRelationInput | contact_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: contact_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned contact_usahas
    **/
    _count?: true | Contact_usahaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Contact_usahaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Contact_usahaMaxAggregateInputType
  }

  export type GetContact_usahaAggregateType<T extends Contact_usahaAggregateArgs> = {
        [P in keyof T & keyof AggregateContact_usaha]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact_usaha[P]>
      : GetScalarType<T[P], AggregateContact_usaha[P]>
  }




  export type contact_usahaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contact_usahaWhereInput
    orderBy?: contact_usahaOrderByWithAggregationInput | contact_usahaOrderByWithAggregationInput[]
    by: Contact_usahaScalarFieldEnum[] | Contact_usahaScalarFieldEnum
    having?: contact_usahaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Contact_usahaCountAggregateInputType | true
    _min?: Contact_usahaMinAggregateInputType
    _max?: Contact_usahaMaxAggregateInputType
  }

  export type Contact_usahaGroupByOutputType = {
    contact_id: string
    campaign_id: string
    telepon_wa: string | null
    fax: string | null
    email: string | null
    website: string | null
    _count: Contact_usahaCountAggregateOutputType | null
    _min: Contact_usahaMinAggregateOutputType | null
    _max: Contact_usahaMaxAggregateOutputType | null
  }

  type GetContact_usahaGroupByPayload<T extends contact_usahaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Contact_usahaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Contact_usahaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Contact_usahaGroupByOutputType[P]>
            : GetScalarType<T[P], Contact_usahaGroupByOutputType[P]>
        }
      >
    >


  export type contact_usahaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    contact_id?: boolean
    campaign_id?: boolean
    telepon_wa?: boolean
    fax?: boolean
    email?: boolean
    website?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact_usaha"]>

  export type contact_usahaSelectScalar = {
    contact_id?: boolean
    campaign_id?: boolean
    telepon_wa?: boolean
    fax?: boolean
    email?: boolean
    website?: boolean
  }


  export type contact_usahaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }


  export type $contact_usahaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "contact_usaha"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      contact_id: string
      campaign_id: string
      telepon_wa: string | null
      fax: string | null
      email: string | null
      website: string | null
    }, ExtArgs["result"]["contact_usaha"]>
    composites: {}
  }


  type contact_usahaGetPayload<S extends boolean | null | undefined | contact_usahaDefaultArgs> = $Result.GetResult<Prisma.$contact_usahaPayload, S>

  type contact_usahaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<contact_usahaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Contact_usahaCountAggregateInputType | true
    }

  export interface contact_usahaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['contact_usaha'], meta: { name: 'contact_usaha' } }
    /**
     * Find zero or one Contact_usaha that matches the filter.
     * @param {contact_usahaFindUniqueArgs} args - Arguments to find a Contact_usaha
     * @example
     * // Get one Contact_usaha
     * const contact_usaha = await prisma.contact_usaha.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends contact_usahaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, contact_usahaFindUniqueArgs<ExtArgs>>
    ): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Contact_usaha that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {contact_usahaFindUniqueOrThrowArgs} args - Arguments to find a Contact_usaha
     * @example
     * // Get one Contact_usaha
     * const contact_usaha = await prisma.contact_usaha.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends contact_usahaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_usahaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Contact_usaha that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_usahaFindFirstArgs} args - Arguments to find a Contact_usaha
     * @example
     * // Get one Contact_usaha
     * const contact_usaha = await prisma.contact_usaha.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends contact_usahaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_usahaFindFirstArgs<ExtArgs>>
    ): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Contact_usaha that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_usahaFindFirstOrThrowArgs} args - Arguments to find a Contact_usaha
     * @example
     * // Get one Contact_usaha
     * const contact_usaha = await prisma.contact_usaha.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends contact_usahaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_usahaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Contact_usahas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_usahaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contact_usahas
     * const contact_usahas = await prisma.contact_usaha.findMany()
     * 
     * // Get first 10 Contact_usahas
     * const contact_usahas = await prisma.contact_usaha.findMany({ take: 10 })
     * 
     * // Only select the `contact_id`
     * const contact_usahaWithContact_idOnly = await prisma.contact_usaha.findMany({ select: { contact_id: true } })
     * 
    **/
    findMany<T extends contact_usahaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_usahaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Contact_usaha.
     * @param {contact_usahaCreateArgs} args - Arguments to create a Contact_usaha.
     * @example
     * // Create one Contact_usaha
     * const Contact_usaha = await prisma.contact_usaha.create({
     *   data: {
     *     // ... data to create a Contact_usaha
     *   }
     * })
     * 
    **/
    create<T extends contact_usahaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, contact_usahaCreateArgs<ExtArgs>>
    ): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Contact_usahas.
     * @param {contact_usahaCreateManyArgs} args - Arguments to create many Contact_usahas.
     * @example
     * // Create many Contact_usahas
     * const contact_usaha = await prisma.contact_usaha.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends contact_usahaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_usahaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contact_usahas and returns the data saved in the database.
     * @param {contact_usahaCreateManyAndReturnArgs} args - Arguments to create many Contact_usahas.
     * @example
     * // Create many Contact_usahas
     * const contact_usaha = await prisma.contact_usaha.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contact_usahas and only return the `contact_id`
     * const contact_usahaWithContact_idOnly = await prisma.contact_usaha.createManyAndReturn({ 
     *   select: { contact_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends contact_usahaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_usahaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Contact_usaha.
     * @param {contact_usahaDeleteArgs} args - Arguments to delete one Contact_usaha.
     * @example
     * // Delete one Contact_usaha
     * const Contact_usaha = await prisma.contact_usaha.delete({
     *   where: {
     *     // ... filter to delete one Contact_usaha
     *   }
     * })
     * 
    **/
    delete<T extends contact_usahaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, contact_usahaDeleteArgs<ExtArgs>>
    ): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Contact_usaha.
     * @param {contact_usahaUpdateArgs} args - Arguments to update one Contact_usaha.
     * @example
     * // Update one Contact_usaha
     * const contact_usaha = await prisma.contact_usaha.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends contact_usahaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, contact_usahaUpdateArgs<ExtArgs>>
    ): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Contact_usahas.
     * @param {contact_usahaDeleteManyArgs} args - Arguments to filter Contact_usahas to delete.
     * @example
     * // Delete a few Contact_usahas
     * const { count } = await prisma.contact_usaha.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends contact_usahaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_usahaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contact_usahas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_usahaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contact_usahas
     * const contact_usaha = await prisma.contact_usaha.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends contact_usahaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, contact_usahaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact_usaha.
     * @param {contact_usahaUpsertArgs} args - Arguments to update or create a Contact_usaha.
     * @example
     * // Update or create a Contact_usaha
     * const contact_usaha = await prisma.contact_usaha.upsert({
     *   create: {
     *     // ... data to create a Contact_usaha
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact_usaha we want to update
     *   }
     * })
    **/
    upsert<T extends contact_usahaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, contact_usahaUpsertArgs<ExtArgs>>
    ): Prisma__contact_usahaClient<$Result.GetResult<Prisma.$contact_usahaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Contact_usahas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_usahaCountArgs} args - Arguments to filter Contact_usahas to count.
     * @example
     * // Count the number of Contact_usahas
     * const count = await prisma.contact_usaha.count({
     *   where: {
     *     // ... the filter for the Contact_usahas we want to count
     *   }
     * })
    **/
    count<T extends contact_usahaCountArgs>(
      args?: Subset<T, contact_usahaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Contact_usahaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact_usaha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Contact_usahaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Contact_usahaAggregateArgs>(args: Subset<T, Contact_usahaAggregateArgs>): Prisma.PrismaPromise<GetContact_usahaAggregateType<T>>

    /**
     * Group by Contact_usaha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_usahaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends contact_usahaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: contact_usahaGroupByArgs['orderBy'] }
        : { orderBy?: contact_usahaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, contact_usahaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContact_usahaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the contact_usaha model
   */
  readonly fields: contact_usahaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for contact_usaha.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__contact_usahaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the contact_usaha model
   */ 
  interface contact_usahaFieldRefs {
    readonly contact_id: FieldRef<"contact_usaha", 'String'>
    readonly campaign_id: FieldRef<"contact_usaha", 'String'>
    readonly telepon_wa: FieldRef<"contact_usaha", 'String'>
    readonly fax: FieldRef<"contact_usaha", 'String'>
    readonly email: FieldRef<"contact_usaha", 'String'>
    readonly website: FieldRef<"contact_usaha", 'String'>
  }
    

  // Custom InputTypes
  /**
   * contact_usaha findUnique
   */
  export type contact_usahaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * Filter, which contact_usaha to fetch.
     */
    where: contact_usahaWhereUniqueInput
  }

  /**
   * contact_usaha findUniqueOrThrow
   */
  export type contact_usahaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * Filter, which contact_usaha to fetch.
     */
    where: contact_usahaWhereUniqueInput
  }

  /**
   * contact_usaha findFirst
   */
  export type contact_usahaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * Filter, which contact_usaha to fetch.
     */
    where?: contact_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_usahas to fetch.
     */
    orderBy?: contact_usahaOrderByWithRelationInput | contact_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contact_usahas.
     */
    cursor?: contact_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contact_usahas.
     */
    distinct?: Contact_usahaScalarFieldEnum | Contact_usahaScalarFieldEnum[]
  }

  /**
   * contact_usaha findFirstOrThrow
   */
  export type contact_usahaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * Filter, which contact_usaha to fetch.
     */
    where?: contact_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_usahas to fetch.
     */
    orderBy?: contact_usahaOrderByWithRelationInput | contact_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contact_usahas.
     */
    cursor?: contact_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contact_usahas.
     */
    distinct?: Contact_usahaScalarFieldEnum | Contact_usahaScalarFieldEnum[]
  }

  /**
   * contact_usaha findMany
   */
  export type contact_usahaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * Filter, which contact_usahas to fetch.
     */
    where?: contact_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_usahas to fetch.
     */
    orderBy?: contact_usahaOrderByWithRelationInput | contact_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing contact_usahas.
     */
    cursor?: contact_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_usahas.
     */
    skip?: number
    distinct?: Contact_usahaScalarFieldEnum | Contact_usahaScalarFieldEnum[]
  }

  /**
   * contact_usaha create
   */
  export type contact_usahaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * The data needed to create a contact_usaha.
     */
    data: XOR<contact_usahaCreateInput, contact_usahaUncheckedCreateInput>
  }

  /**
   * contact_usaha createMany
   */
  export type contact_usahaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many contact_usahas.
     */
    data: contact_usahaCreateManyInput | contact_usahaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * contact_usaha createManyAndReturn
   */
  export type contact_usahaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * The data used to create many contact_usahas.
     */
    data: contact_usahaCreateManyInput | contact_usahaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * contact_usaha update
   */
  export type contact_usahaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * The data needed to update a contact_usaha.
     */
    data: XOR<contact_usahaUpdateInput, contact_usahaUncheckedUpdateInput>
    /**
     * Choose, which contact_usaha to update.
     */
    where: contact_usahaWhereUniqueInput
  }

  /**
   * contact_usaha updateMany
   */
  export type contact_usahaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update contact_usahas.
     */
    data: XOR<contact_usahaUpdateManyMutationInput, contact_usahaUncheckedUpdateManyInput>
    /**
     * Filter which contact_usahas to update
     */
    where?: contact_usahaWhereInput
  }

  /**
   * contact_usaha upsert
   */
  export type contact_usahaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * The filter to search for the contact_usaha to update in case it exists.
     */
    where: contact_usahaWhereUniqueInput
    /**
     * In case the contact_usaha found by the `where` argument doesn't exist, create a new contact_usaha with this data.
     */
    create: XOR<contact_usahaCreateInput, contact_usahaUncheckedCreateInput>
    /**
     * In case the contact_usaha was found with the provided `where` argument, update it with this data.
     */
    update: XOR<contact_usahaUpdateInput, contact_usahaUncheckedUpdateInput>
  }

  /**
   * contact_usaha delete
   */
  export type contact_usahaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
    /**
     * Filter which contact_usaha to delete.
     */
    where: contact_usahaWhereUniqueInput
  }

  /**
   * contact_usaha deleteMany
   */
  export type contact_usahaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact_usahas to delete
     */
    where?: contact_usahaWhereInput
  }

  /**
   * contact_usaha without action
   */
  export type contact_usahaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_usaha
     */
    select?: contact_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contact_usahaInclude<ExtArgs> | null
  }


  /**
   * Model crowdfunding
   */

  export type AggregateCrowdfunding = {
    _count: CrowdfundingCountAggregateOutputType | null
    _avg: CrowdfundingAvgAggregateOutputType | null
    _sum: CrowdfundingSumAggregateOutputType | null
    _min: CrowdfundingMinAggregateOutputType | null
    _max: CrowdfundingMaxAggregateOutputType | null
  }

  export type CrowdfundingAvgAggregateOutputType = {
    target_raise: number | null
    equity_dijual: Decimal | null
    fund_raised: number | null
  }

  export type CrowdfundingSumAggregateOutputType = {
    target_raise: bigint | null
    equity_dijual: Decimal | null
    fund_raised: bigint | null
  }

  export type CrowdfundingMinAggregateOutputType = {
    crowdfunding_id: string | null
    campaign_id: string | null
    target_raise: bigint | null
    equity_dijual: Decimal | null
    start_date: Date | null
    end_date: Date | null
    fund_raised: bigint | null
  }

  export type CrowdfundingMaxAggregateOutputType = {
    crowdfunding_id: string | null
    campaign_id: string | null
    target_raise: bigint | null
    equity_dijual: Decimal | null
    start_date: Date | null
    end_date: Date | null
    fund_raised: bigint | null
  }

  export type CrowdfundingCountAggregateOutputType = {
    crowdfunding_id: number
    campaign_id: number
    target_raise: number
    equity_dijual: number
    start_date: number
    end_date: number
    fund_raised: number
    _all: number
  }


  export type CrowdfundingAvgAggregateInputType = {
    target_raise?: true
    equity_dijual?: true
    fund_raised?: true
  }

  export type CrowdfundingSumAggregateInputType = {
    target_raise?: true
    equity_dijual?: true
    fund_raised?: true
  }

  export type CrowdfundingMinAggregateInputType = {
    crowdfunding_id?: true
    campaign_id?: true
    target_raise?: true
    equity_dijual?: true
    start_date?: true
    end_date?: true
    fund_raised?: true
  }

  export type CrowdfundingMaxAggregateInputType = {
    crowdfunding_id?: true
    campaign_id?: true
    target_raise?: true
    equity_dijual?: true
    start_date?: true
    end_date?: true
    fund_raised?: true
  }

  export type CrowdfundingCountAggregateInputType = {
    crowdfunding_id?: true
    campaign_id?: true
    target_raise?: true
    equity_dijual?: true
    start_date?: true
    end_date?: true
    fund_raised?: true
    _all?: true
  }

  export type CrowdfundingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which crowdfunding to aggregate.
     */
    where?: crowdfundingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of crowdfundings to fetch.
     */
    orderBy?: crowdfundingOrderByWithRelationInput | crowdfundingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: crowdfundingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` crowdfundings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` crowdfundings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned crowdfundings
    **/
    _count?: true | CrowdfundingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CrowdfundingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CrowdfundingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CrowdfundingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CrowdfundingMaxAggregateInputType
  }

  export type GetCrowdfundingAggregateType<T extends CrowdfundingAggregateArgs> = {
        [P in keyof T & keyof AggregateCrowdfunding]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCrowdfunding[P]>
      : GetScalarType<T[P], AggregateCrowdfunding[P]>
  }




  export type crowdfundingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: crowdfundingWhereInput
    orderBy?: crowdfundingOrderByWithAggregationInput | crowdfundingOrderByWithAggregationInput[]
    by: CrowdfundingScalarFieldEnum[] | CrowdfundingScalarFieldEnum
    having?: crowdfundingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CrowdfundingCountAggregateInputType | true
    _avg?: CrowdfundingAvgAggregateInputType
    _sum?: CrowdfundingSumAggregateInputType
    _min?: CrowdfundingMinAggregateInputType
    _max?: CrowdfundingMaxAggregateInputType
  }

  export type CrowdfundingGroupByOutputType = {
    crowdfunding_id: string
    campaign_id: string
    target_raise: bigint | null
    equity_dijual: Decimal | null
    start_date: Date | null
    end_date: Date | null
    fund_raised: bigint
    _count: CrowdfundingCountAggregateOutputType | null
    _avg: CrowdfundingAvgAggregateOutputType | null
    _sum: CrowdfundingSumAggregateOutputType | null
    _min: CrowdfundingMinAggregateOutputType | null
    _max: CrowdfundingMaxAggregateOutputType | null
  }

  type GetCrowdfundingGroupByPayload<T extends crowdfundingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CrowdfundingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CrowdfundingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CrowdfundingGroupByOutputType[P]>
            : GetScalarType<T[P], CrowdfundingGroupByOutputType[P]>
        }
      >
    >


  export type crowdfundingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    crowdfunding_id?: boolean
    campaign_id?: boolean
    target_raise?: boolean
    equity_dijual?: boolean
    start_date?: boolean
    end_date?: boolean
    fund_raised?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    data_rekening?: boolean | crowdfunding$data_rekeningArgs<ExtArgs>
    highlight_product?: boolean | crowdfunding$highlight_productArgs<ExtArgs>
    product_information?: boolean | crowdfunding$product_informationArgs<ExtArgs>
  }, ExtArgs["result"]["crowdfunding"]>

  export type crowdfundingSelectScalar = {
    crowdfunding_id?: boolean
    campaign_id?: boolean
    target_raise?: boolean
    equity_dijual?: boolean
    start_date?: boolean
    end_date?: boolean
    fund_raised?: boolean
  }


  export type crowdfundingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    data_rekening?: boolean | crowdfunding$data_rekeningArgs<ExtArgs>
    highlight_product?: boolean | crowdfunding$highlight_productArgs<ExtArgs>
    product_information?: boolean | crowdfunding$product_informationArgs<ExtArgs>
  }


  export type $crowdfundingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "crowdfunding"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
      data_rekening: Prisma.$data_rekeningPayload<ExtArgs> | null
      highlight_product: Prisma.$highlight_productPayload<ExtArgs> | null
      product_information: Prisma.$product_informationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      crowdfunding_id: string
      campaign_id: string
      target_raise: bigint | null
      equity_dijual: Prisma.Decimal | null
      start_date: Date | null
      end_date: Date | null
      fund_raised: bigint
    }, ExtArgs["result"]["crowdfunding"]>
    composites: {}
  }


  type crowdfundingGetPayload<S extends boolean | null | undefined | crowdfundingDefaultArgs> = $Result.GetResult<Prisma.$crowdfundingPayload, S>

  type crowdfundingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<crowdfundingFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CrowdfundingCountAggregateInputType | true
    }

  export interface crowdfundingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['crowdfunding'], meta: { name: 'crowdfunding' } }
    /**
     * Find zero or one Crowdfunding that matches the filter.
     * @param {crowdfundingFindUniqueArgs} args - Arguments to find a Crowdfunding
     * @example
     * // Get one Crowdfunding
     * const crowdfunding = await prisma.crowdfunding.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends crowdfundingFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, crowdfundingFindUniqueArgs<ExtArgs>>
    ): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Crowdfunding that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {crowdfundingFindUniqueOrThrowArgs} args - Arguments to find a Crowdfunding
     * @example
     * // Get one Crowdfunding
     * const crowdfunding = await prisma.crowdfunding.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends crowdfundingFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, crowdfundingFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Crowdfunding that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {crowdfundingFindFirstArgs} args - Arguments to find a Crowdfunding
     * @example
     * // Get one Crowdfunding
     * const crowdfunding = await prisma.crowdfunding.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends crowdfundingFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, crowdfundingFindFirstArgs<ExtArgs>>
    ): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Crowdfunding that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {crowdfundingFindFirstOrThrowArgs} args - Arguments to find a Crowdfunding
     * @example
     * // Get one Crowdfunding
     * const crowdfunding = await prisma.crowdfunding.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends crowdfundingFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, crowdfundingFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Crowdfundings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {crowdfundingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Crowdfundings
     * const crowdfundings = await prisma.crowdfunding.findMany()
     * 
     * // Get first 10 Crowdfundings
     * const crowdfundings = await prisma.crowdfunding.findMany({ take: 10 })
     * 
     * // Only select the `crowdfunding_id`
     * const crowdfundingWithCrowdfunding_idOnly = await prisma.crowdfunding.findMany({ select: { crowdfunding_id: true } })
     * 
    **/
    findMany<T extends crowdfundingFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, crowdfundingFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Crowdfunding.
     * @param {crowdfundingCreateArgs} args - Arguments to create a Crowdfunding.
     * @example
     * // Create one Crowdfunding
     * const Crowdfunding = await prisma.crowdfunding.create({
     *   data: {
     *     // ... data to create a Crowdfunding
     *   }
     * })
     * 
    **/
    create<T extends crowdfundingCreateArgs<ExtArgs>>(
      args: SelectSubset<T, crowdfundingCreateArgs<ExtArgs>>
    ): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Crowdfundings.
     * @param {crowdfundingCreateManyArgs} args - Arguments to create many Crowdfundings.
     * @example
     * // Create many Crowdfundings
     * const crowdfunding = await prisma.crowdfunding.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends crowdfundingCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, crowdfundingCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Crowdfundings and returns the data saved in the database.
     * @param {crowdfundingCreateManyAndReturnArgs} args - Arguments to create many Crowdfundings.
     * @example
     * // Create many Crowdfundings
     * const crowdfunding = await prisma.crowdfunding.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Crowdfundings and only return the `crowdfunding_id`
     * const crowdfundingWithCrowdfunding_idOnly = await prisma.crowdfunding.createManyAndReturn({ 
     *   select: { crowdfunding_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends crowdfundingCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, crowdfundingCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Crowdfunding.
     * @param {crowdfundingDeleteArgs} args - Arguments to delete one Crowdfunding.
     * @example
     * // Delete one Crowdfunding
     * const Crowdfunding = await prisma.crowdfunding.delete({
     *   where: {
     *     // ... filter to delete one Crowdfunding
     *   }
     * })
     * 
    **/
    delete<T extends crowdfundingDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, crowdfundingDeleteArgs<ExtArgs>>
    ): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Crowdfunding.
     * @param {crowdfundingUpdateArgs} args - Arguments to update one Crowdfunding.
     * @example
     * // Update one Crowdfunding
     * const crowdfunding = await prisma.crowdfunding.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends crowdfundingUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, crowdfundingUpdateArgs<ExtArgs>>
    ): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Crowdfundings.
     * @param {crowdfundingDeleteManyArgs} args - Arguments to filter Crowdfundings to delete.
     * @example
     * // Delete a few Crowdfundings
     * const { count } = await prisma.crowdfunding.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends crowdfundingDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, crowdfundingDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Crowdfundings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {crowdfundingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Crowdfundings
     * const crowdfunding = await prisma.crowdfunding.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends crowdfundingUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, crowdfundingUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Crowdfunding.
     * @param {crowdfundingUpsertArgs} args - Arguments to update or create a Crowdfunding.
     * @example
     * // Update or create a Crowdfunding
     * const crowdfunding = await prisma.crowdfunding.upsert({
     *   create: {
     *     // ... data to create a Crowdfunding
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Crowdfunding we want to update
     *   }
     * })
    **/
    upsert<T extends crowdfundingUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, crowdfundingUpsertArgs<ExtArgs>>
    ): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Crowdfundings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {crowdfundingCountArgs} args - Arguments to filter Crowdfundings to count.
     * @example
     * // Count the number of Crowdfundings
     * const count = await prisma.crowdfunding.count({
     *   where: {
     *     // ... the filter for the Crowdfundings we want to count
     *   }
     * })
    **/
    count<T extends crowdfundingCountArgs>(
      args?: Subset<T, crowdfundingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CrowdfundingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Crowdfunding.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrowdfundingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CrowdfundingAggregateArgs>(args: Subset<T, CrowdfundingAggregateArgs>): Prisma.PrismaPromise<GetCrowdfundingAggregateType<T>>

    /**
     * Group by Crowdfunding.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {crowdfundingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends crowdfundingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: crowdfundingGroupByArgs['orderBy'] }
        : { orderBy?: crowdfundingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, crowdfundingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCrowdfundingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the crowdfunding model
   */
  readonly fields: crowdfundingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for crowdfunding.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__crowdfundingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    data_rekening<T extends crowdfunding$data_rekeningArgs<ExtArgs> = {}>(args?: Subset<T, crowdfunding$data_rekeningArgs<ExtArgs>>): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    highlight_product<T extends crowdfunding$highlight_productArgs<ExtArgs> = {}>(args?: Subset<T, crowdfunding$highlight_productArgs<ExtArgs>>): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    product_information<T extends crowdfunding$product_informationArgs<ExtArgs> = {}>(args?: Subset<T, crowdfunding$product_informationArgs<ExtArgs>>): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the crowdfunding model
   */ 
  interface crowdfundingFieldRefs {
    readonly crowdfunding_id: FieldRef<"crowdfunding", 'String'>
    readonly campaign_id: FieldRef<"crowdfunding", 'String'>
    readonly target_raise: FieldRef<"crowdfunding", 'BigInt'>
    readonly equity_dijual: FieldRef<"crowdfunding", 'Decimal'>
    readonly start_date: FieldRef<"crowdfunding", 'DateTime'>
    readonly end_date: FieldRef<"crowdfunding", 'DateTime'>
    readonly fund_raised: FieldRef<"crowdfunding", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * crowdfunding findUnique
   */
  export type crowdfundingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * Filter, which crowdfunding to fetch.
     */
    where: crowdfundingWhereUniqueInput
  }

  /**
   * crowdfunding findUniqueOrThrow
   */
  export type crowdfundingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * Filter, which crowdfunding to fetch.
     */
    where: crowdfundingWhereUniqueInput
  }

  /**
   * crowdfunding findFirst
   */
  export type crowdfundingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * Filter, which crowdfunding to fetch.
     */
    where?: crowdfundingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of crowdfundings to fetch.
     */
    orderBy?: crowdfundingOrderByWithRelationInput | crowdfundingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for crowdfundings.
     */
    cursor?: crowdfundingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` crowdfundings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` crowdfundings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of crowdfundings.
     */
    distinct?: CrowdfundingScalarFieldEnum | CrowdfundingScalarFieldEnum[]
  }

  /**
   * crowdfunding findFirstOrThrow
   */
  export type crowdfundingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * Filter, which crowdfunding to fetch.
     */
    where?: crowdfundingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of crowdfundings to fetch.
     */
    orderBy?: crowdfundingOrderByWithRelationInput | crowdfundingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for crowdfundings.
     */
    cursor?: crowdfundingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` crowdfundings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` crowdfundings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of crowdfundings.
     */
    distinct?: CrowdfundingScalarFieldEnum | CrowdfundingScalarFieldEnum[]
  }

  /**
   * crowdfunding findMany
   */
  export type crowdfundingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * Filter, which crowdfundings to fetch.
     */
    where?: crowdfundingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of crowdfundings to fetch.
     */
    orderBy?: crowdfundingOrderByWithRelationInput | crowdfundingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing crowdfundings.
     */
    cursor?: crowdfundingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` crowdfundings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` crowdfundings.
     */
    skip?: number
    distinct?: CrowdfundingScalarFieldEnum | CrowdfundingScalarFieldEnum[]
  }

  /**
   * crowdfunding create
   */
  export type crowdfundingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * The data needed to create a crowdfunding.
     */
    data: XOR<crowdfundingCreateInput, crowdfundingUncheckedCreateInput>
  }

  /**
   * crowdfunding createMany
   */
  export type crowdfundingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many crowdfundings.
     */
    data: crowdfundingCreateManyInput | crowdfundingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * crowdfunding createManyAndReturn
   */
  export type crowdfundingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * The data used to create many crowdfundings.
     */
    data: crowdfundingCreateManyInput | crowdfundingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * crowdfunding update
   */
  export type crowdfundingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * The data needed to update a crowdfunding.
     */
    data: XOR<crowdfundingUpdateInput, crowdfundingUncheckedUpdateInput>
    /**
     * Choose, which crowdfunding to update.
     */
    where: crowdfundingWhereUniqueInput
  }

  /**
   * crowdfunding updateMany
   */
  export type crowdfundingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update crowdfundings.
     */
    data: XOR<crowdfundingUpdateManyMutationInput, crowdfundingUncheckedUpdateManyInput>
    /**
     * Filter which crowdfundings to update
     */
    where?: crowdfundingWhereInput
  }

  /**
   * crowdfunding upsert
   */
  export type crowdfundingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * The filter to search for the crowdfunding to update in case it exists.
     */
    where: crowdfundingWhereUniqueInput
    /**
     * In case the crowdfunding found by the `where` argument doesn't exist, create a new crowdfunding with this data.
     */
    create: XOR<crowdfundingCreateInput, crowdfundingUncheckedCreateInput>
    /**
     * In case the crowdfunding was found with the provided `where` argument, update it with this data.
     */
    update: XOR<crowdfundingUpdateInput, crowdfundingUncheckedUpdateInput>
  }

  /**
   * crowdfunding delete
   */
  export type crowdfundingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
    /**
     * Filter which crowdfunding to delete.
     */
    where: crowdfundingWhereUniqueInput
  }

  /**
   * crowdfunding deleteMany
   */
  export type crowdfundingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which crowdfundings to delete
     */
    where?: crowdfundingWhereInput
  }

  /**
   * crowdfunding.data_rekening
   */
  export type crowdfunding$data_rekeningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    where?: data_rekeningWhereInput
  }

  /**
   * crowdfunding.highlight_product
   */
  export type crowdfunding$highlight_productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    where?: highlight_productWhereInput
  }

  /**
   * crowdfunding.product_information
   */
  export type crowdfunding$product_informationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    where?: product_informationWhereInput
  }

  /**
   * crowdfunding without action
   */
  export type crowdfundingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the crowdfunding
     */
    select?: crowdfundingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: crowdfundingInclude<ExtArgs> | null
  }


  /**
   * Model data_rekening
   */

  export type AggregateData_rekening = {
    _count: Data_rekeningCountAggregateOutputType | null
    _min: Data_rekeningMinAggregateOutputType | null
    _max: Data_rekeningMaxAggregateOutputType | null
  }

  export type Data_rekeningMinAggregateOutputType = {
    rekening_id: string | null
    nama_rekening: string | null
    nama_bank: string | null
    nomor_rekening: string | null
    crowdfunding_id: string | null
  }

  export type Data_rekeningMaxAggregateOutputType = {
    rekening_id: string | null
    nama_rekening: string | null
    nama_bank: string | null
    nomor_rekening: string | null
    crowdfunding_id: string | null
  }

  export type Data_rekeningCountAggregateOutputType = {
    rekening_id: number
    nama_rekening: number
    nama_bank: number
    nomor_rekening: number
    crowdfunding_id: number
    _all: number
  }


  export type Data_rekeningMinAggregateInputType = {
    rekening_id?: true
    nama_rekening?: true
    nama_bank?: true
    nomor_rekening?: true
    crowdfunding_id?: true
  }

  export type Data_rekeningMaxAggregateInputType = {
    rekening_id?: true
    nama_rekening?: true
    nama_bank?: true
    nomor_rekening?: true
    crowdfunding_id?: true
  }

  export type Data_rekeningCountAggregateInputType = {
    rekening_id?: true
    nama_rekening?: true
    nama_bank?: true
    nomor_rekening?: true
    crowdfunding_id?: true
    _all?: true
  }

  export type Data_rekeningAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which data_rekening to aggregate.
     */
    where?: data_rekeningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of data_rekenings to fetch.
     */
    orderBy?: data_rekeningOrderByWithRelationInput | data_rekeningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: data_rekeningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` data_rekenings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` data_rekenings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned data_rekenings
    **/
    _count?: true | Data_rekeningCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Data_rekeningMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Data_rekeningMaxAggregateInputType
  }

  export type GetData_rekeningAggregateType<T extends Data_rekeningAggregateArgs> = {
        [P in keyof T & keyof AggregateData_rekening]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateData_rekening[P]>
      : GetScalarType<T[P], AggregateData_rekening[P]>
  }




  export type data_rekeningGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: data_rekeningWhereInput
    orderBy?: data_rekeningOrderByWithAggregationInput | data_rekeningOrderByWithAggregationInput[]
    by: Data_rekeningScalarFieldEnum[] | Data_rekeningScalarFieldEnum
    having?: data_rekeningScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Data_rekeningCountAggregateInputType | true
    _min?: Data_rekeningMinAggregateInputType
    _max?: Data_rekeningMaxAggregateInputType
  }

  export type Data_rekeningGroupByOutputType = {
    rekening_id: string
    nama_rekening: string | null
    nama_bank: string | null
    nomor_rekening: string | null
    crowdfunding_id: string
    _count: Data_rekeningCountAggregateOutputType | null
    _min: Data_rekeningMinAggregateOutputType | null
    _max: Data_rekeningMaxAggregateOutputType | null
  }

  type GetData_rekeningGroupByPayload<T extends data_rekeningGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Data_rekeningGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Data_rekeningGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Data_rekeningGroupByOutputType[P]>
            : GetScalarType<T[P], Data_rekeningGroupByOutputType[P]>
        }
      >
    >


  export type data_rekeningSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    rekening_id?: boolean
    nama_rekening?: boolean
    nama_bank?: boolean
    nomor_rekening?: boolean
    crowdfunding_id?: boolean
    crowdfunding?: boolean | crowdfundingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["data_rekening"]>

  export type data_rekeningSelectScalar = {
    rekening_id?: boolean
    nama_rekening?: boolean
    nama_bank?: boolean
    nomor_rekening?: boolean
    crowdfunding_id?: boolean
  }


  export type data_rekeningInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    crowdfunding?: boolean | crowdfundingDefaultArgs<ExtArgs>
  }


  export type $data_rekeningPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "data_rekening"
    objects: {
      crowdfunding: Prisma.$crowdfundingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      rekening_id: string
      nama_rekening: string | null
      nama_bank: string | null
      nomor_rekening: string | null
      crowdfunding_id: string
    }, ExtArgs["result"]["data_rekening"]>
    composites: {}
  }


  type data_rekeningGetPayload<S extends boolean | null | undefined | data_rekeningDefaultArgs> = $Result.GetResult<Prisma.$data_rekeningPayload, S>

  type data_rekeningCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<data_rekeningFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Data_rekeningCountAggregateInputType | true
    }

  export interface data_rekeningDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['data_rekening'], meta: { name: 'data_rekening' } }
    /**
     * Find zero or one Data_rekening that matches the filter.
     * @param {data_rekeningFindUniqueArgs} args - Arguments to find a Data_rekening
     * @example
     * // Get one Data_rekening
     * const data_rekening = await prisma.data_rekening.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends data_rekeningFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, data_rekeningFindUniqueArgs<ExtArgs>>
    ): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Data_rekening that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {data_rekeningFindUniqueOrThrowArgs} args - Arguments to find a Data_rekening
     * @example
     * // Get one Data_rekening
     * const data_rekening = await prisma.data_rekening.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends data_rekeningFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, data_rekeningFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Data_rekening that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_rekeningFindFirstArgs} args - Arguments to find a Data_rekening
     * @example
     * // Get one Data_rekening
     * const data_rekening = await prisma.data_rekening.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends data_rekeningFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, data_rekeningFindFirstArgs<ExtArgs>>
    ): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Data_rekening that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_rekeningFindFirstOrThrowArgs} args - Arguments to find a Data_rekening
     * @example
     * // Get one Data_rekening
     * const data_rekening = await prisma.data_rekening.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends data_rekeningFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, data_rekeningFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Data_rekenings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_rekeningFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Data_rekenings
     * const data_rekenings = await prisma.data_rekening.findMany()
     * 
     * // Get first 10 Data_rekenings
     * const data_rekenings = await prisma.data_rekening.findMany({ take: 10 })
     * 
     * // Only select the `rekening_id`
     * const data_rekeningWithRekening_idOnly = await prisma.data_rekening.findMany({ select: { rekening_id: true } })
     * 
    **/
    findMany<T extends data_rekeningFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, data_rekeningFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Data_rekening.
     * @param {data_rekeningCreateArgs} args - Arguments to create a Data_rekening.
     * @example
     * // Create one Data_rekening
     * const Data_rekening = await prisma.data_rekening.create({
     *   data: {
     *     // ... data to create a Data_rekening
     *   }
     * })
     * 
    **/
    create<T extends data_rekeningCreateArgs<ExtArgs>>(
      args: SelectSubset<T, data_rekeningCreateArgs<ExtArgs>>
    ): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Data_rekenings.
     * @param {data_rekeningCreateManyArgs} args - Arguments to create many Data_rekenings.
     * @example
     * // Create many Data_rekenings
     * const data_rekening = await prisma.data_rekening.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends data_rekeningCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, data_rekeningCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Data_rekenings and returns the data saved in the database.
     * @param {data_rekeningCreateManyAndReturnArgs} args - Arguments to create many Data_rekenings.
     * @example
     * // Create many Data_rekenings
     * const data_rekening = await prisma.data_rekening.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Data_rekenings and only return the `rekening_id`
     * const data_rekeningWithRekening_idOnly = await prisma.data_rekening.createManyAndReturn({ 
     *   select: { rekening_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends data_rekeningCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, data_rekeningCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Data_rekening.
     * @param {data_rekeningDeleteArgs} args - Arguments to delete one Data_rekening.
     * @example
     * // Delete one Data_rekening
     * const Data_rekening = await prisma.data_rekening.delete({
     *   where: {
     *     // ... filter to delete one Data_rekening
     *   }
     * })
     * 
    **/
    delete<T extends data_rekeningDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, data_rekeningDeleteArgs<ExtArgs>>
    ): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Data_rekening.
     * @param {data_rekeningUpdateArgs} args - Arguments to update one Data_rekening.
     * @example
     * // Update one Data_rekening
     * const data_rekening = await prisma.data_rekening.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends data_rekeningUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, data_rekeningUpdateArgs<ExtArgs>>
    ): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Data_rekenings.
     * @param {data_rekeningDeleteManyArgs} args - Arguments to filter Data_rekenings to delete.
     * @example
     * // Delete a few Data_rekenings
     * const { count } = await prisma.data_rekening.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends data_rekeningDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, data_rekeningDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Data_rekenings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_rekeningUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Data_rekenings
     * const data_rekening = await prisma.data_rekening.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends data_rekeningUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, data_rekeningUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Data_rekening.
     * @param {data_rekeningUpsertArgs} args - Arguments to update or create a Data_rekening.
     * @example
     * // Update or create a Data_rekening
     * const data_rekening = await prisma.data_rekening.upsert({
     *   create: {
     *     // ... data to create a Data_rekening
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Data_rekening we want to update
     *   }
     * })
    **/
    upsert<T extends data_rekeningUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, data_rekeningUpsertArgs<ExtArgs>>
    ): Prisma__data_rekeningClient<$Result.GetResult<Prisma.$data_rekeningPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Data_rekenings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_rekeningCountArgs} args - Arguments to filter Data_rekenings to count.
     * @example
     * // Count the number of Data_rekenings
     * const count = await prisma.data_rekening.count({
     *   where: {
     *     // ... the filter for the Data_rekenings we want to count
     *   }
     * })
    **/
    count<T extends data_rekeningCountArgs>(
      args?: Subset<T, data_rekeningCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Data_rekeningCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Data_rekening.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Data_rekeningAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Data_rekeningAggregateArgs>(args: Subset<T, Data_rekeningAggregateArgs>): Prisma.PrismaPromise<GetData_rekeningAggregateType<T>>

    /**
     * Group by Data_rekening.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_rekeningGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends data_rekeningGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: data_rekeningGroupByArgs['orderBy'] }
        : { orderBy?: data_rekeningGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, data_rekeningGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetData_rekeningGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the data_rekening model
   */
  readonly fields: data_rekeningFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for data_rekening.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__data_rekeningClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    crowdfunding<T extends crowdfundingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, crowdfundingDefaultArgs<ExtArgs>>): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the data_rekening model
   */ 
  interface data_rekeningFieldRefs {
    readonly rekening_id: FieldRef<"data_rekening", 'String'>
    readonly nama_rekening: FieldRef<"data_rekening", 'String'>
    readonly nama_bank: FieldRef<"data_rekening", 'String'>
    readonly nomor_rekening: FieldRef<"data_rekening", 'String'>
    readonly crowdfunding_id: FieldRef<"data_rekening", 'String'>
  }
    

  // Custom InputTypes
  /**
   * data_rekening findUnique
   */
  export type data_rekeningFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * Filter, which data_rekening to fetch.
     */
    where: data_rekeningWhereUniqueInput
  }

  /**
   * data_rekening findUniqueOrThrow
   */
  export type data_rekeningFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * Filter, which data_rekening to fetch.
     */
    where: data_rekeningWhereUniqueInput
  }

  /**
   * data_rekening findFirst
   */
  export type data_rekeningFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * Filter, which data_rekening to fetch.
     */
    where?: data_rekeningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of data_rekenings to fetch.
     */
    orderBy?: data_rekeningOrderByWithRelationInput | data_rekeningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for data_rekenings.
     */
    cursor?: data_rekeningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` data_rekenings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` data_rekenings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of data_rekenings.
     */
    distinct?: Data_rekeningScalarFieldEnum | Data_rekeningScalarFieldEnum[]
  }

  /**
   * data_rekening findFirstOrThrow
   */
  export type data_rekeningFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * Filter, which data_rekening to fetch.
     */
    where?: data_rekeningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of data_rekenings to fetch.
     */
    orderBy?: data_rekeningOrderByWithRelationInput | data_rekeningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for data_rekenings.
     */
    cursor?: data_rekeningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` data_rekenings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` data_rekenings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of data_rekenings.
     */
    distinct?: Data_rekeningScalarFieldEnum | Data_rekeningScalarFieldEnum[]
  }

  /**
   * data_rekening findMany
   */
  export type data_rekeningFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * Filter, which data_rekenings to fetch.
     */
    where?: data_rekeningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of data_rekenings to fetch.
     */
    orderBy?: data_rekeningOrderByWithRelationInput | data_rekeningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing data_rekenings.
     */
    cursor?: data_rekeningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` data_rekenings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` data_rekenings.
     */
    skip?: number
    distinct?: Data_rekeningScalarFieldEnum | Data_rekeningScalarFieldEnum[]
  }

  /**
   * data_rekening create
   */
  export type data_rekeningCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * The data needed to create a data_rekening.
     */
    data: XOR<data_rekeningCreateInput, data_rekeningUncheckedCreateInput>
  }

  /**
   * data_rekening createMany
   */
  export type data_rekeningCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many data_rekenings.
     */
    data: data_rekeningCreateManyInput | data_rekeningCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * data_rekening createManyAndReturn
   */
  export type data_rekeningCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * The data used to create many data_rekenings.
     */
    data: data_rekeningCreateManyInput | data_rekeningCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * data_rekening update
   */
  export type data_rekeningUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * The data needed to update a data_rekening.
     */
    data: XOR<data_rekeningUpdateInput, data_rekeningUncheckedUpdateInput>
    /**
     * Choose, which data_rekening to update.
     */
    where: data_rekeningWhereUniqueInput
  }

  /**
   * data_rekening updateMany
   */
  export type data_rekeningUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update data_rekenings.
     */
    data: XOR<data_rekeningUpdateManyMutationInput, data_rekeningUncheckedUpdateManyInput>
    /**
     * Filter which data_rekenings to update
     */
    where?: data_rekeningWhereInput
  }

  /**
   * data_rekening upsert
   */
  export type data_rekeningUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * The filter to search for the data_rekening to update in case it exists.
     */
    where: data_rekeningWhereUniqueInput
    /**
     * In case the data_rekening found by the `where` argument doesn't exist, create a new data_rekening with this data.
     */
    create: XOR<data_rekeningCreateInput, data_rekeningUncheckedCreateInput>
    /**
     * In case the data_rekening was found with the provided `where` argument, update it with this data.
     */
    update: XOR<data_rekeningUpdateInput, data_rekeningUncheckedUpdateInput>
  }

  /**
   * data_rekening delete
   */
  export type data_rekeningDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
    /**
     * Filter which data_rekening to delete.
     */
    where: data_rekeningWhereUniqueInput
  }

  /**
   * data_rekening deleteMany
   */
  export type data_rekeningDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which data_rekenings to delete
     */
    where?: data_rekeningWhereInput
  }

  /**
   * data_rekening without action
   */
  export type data_rekeningDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_rekening
     */
    select?: data_rekeningSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: data_rekeningInclude<ExtArgs> | null
  }


  /**
   * Model discussion
   */

  export type AggregateDiscussion = {
    _count: DiscussionCountAggregateOutputType | null
    _avg: DiscussionAvgAggregateOutputType | null
    _sum: DiscussionSumAggregateOutputType | null
    _min: DiscussionMinAggregateOutputType | null
    _max: DiscussionMaxAggregateOutputType | null
  }

  export type DiscussionAvgAggregateOutputType = {
    like: number | null
  }

  export type DiscussionSumAggregateOutputType = {
    like: number | null
  }

  export type DiscussionMinAggregateOutputType = {
    discussion_id: string | null
    campaign_id: string | null
    user_id: string | null
    createdAt: Date | null
    lastActivity: Date | null
    message: string | null
    like: number | null
  }

  export type DiscussionMaxAggregateOutputType = {
    discussion_id: string | null
    campaign_id: string | null
    user_id: string | null
    createdAt: Date | null
    lastActivity: Date | null
    message: string | null
    like: number | null
  }

  export type DiscussionCountAggregateOutputType = {
    discussion_id: number
    campaign_id: number
    user_id: number
    createdAt: number
    lastActivity: number
    message: number
    like: number
    _all: number
  }


  export type DiscussionAvgAggregateInputType = {
    like?: true
  }

  export type DiscussionSumAggregateInputType = {
    like?: true
  }

  export type DiscussionMinAggregateInputType = {
    discussion_id?: true
    campaign_id?: true
    user_id?: true
    createdAt?: true
    lastActivity?: true
    message?: true
    like?: true
  }

  export type DiscussionMaxAggregateInputType = {
    discussion_id?: true
    campaign_id?: true
    user_id?: true
    createdAt?: true
    lastActivity?: true
    message?: true
    like?: true
  }

  export type DiscussionCountAggregateInputType = {
    discussion_id?: true
    campaign_id?: true
    user_id?: true
    createdAt?: true
    lastActivity?: true
    message?: true
    like?: true
    _all?: true
  }

  export type DiscussionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which discussion to aggregate.
     */
    where?: discussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of discussions to fetch.
     */
    orderBy?: discussionOrderByWithRelationInput | discussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: discussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned discussions
    **/
    _count?: true | DiscussionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiscussionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiscussionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscussionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscussionMaxAggregateInputType
  }

  export type GetDiscussionAggregateType<T extends DiscussionAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscussion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscussion[P]>
      : GetScalarType<T[P], AggregateDiscussion[P]>
  }




  export type discussionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: discussionWhereInput
    orderBy?: discussionOrderByWithAggregationInput | discussionOrderByWithAggregationInput[]
    by: DiscussionScalarFieldEnum[] | DiscussionScalarFieldEnum
    having?: discussionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscussionCountAggregateInputType | true
    _avg?: DiscussionAvgAggregateInputType
    _sum?: DiscussionSumAggregateInputType
    _min?: DiscussionMinAggregateInputType
    _max?: DiscussionMaxAggregateInputType
  }

  export type DiscussionGroupByOutputType = {
    discussion_id: string
    campaign_id: string
    user_id: string
    createdAt: Date
    lastActivity: Date | null
    message: string
    like: number | null
    _count: DiscussionCountAggregateOutputType | null
    _avg: DiscussionAvgAggregateOutputType | null
    _sum: DiscussionSumAggregateOutputType | null
    _min: DiscussionMinAggregateOutputType | null
    _max: DiscussionMaxAggregateOutputType | null
  }

  type GetDiscussionGroupByPayload<T extends discussionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscussionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscussionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscussionGroupByOutputType[P]>
            : GetScalarType<T[P], DiscussionGroupByOutputType[P]>
        }
      >
    >


  export type discussionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    discussion_id?: boolean
    campaign_id?: boolean
    user_id?: boolean
    createdAt?: boolean
    lastActivity?: boolean
    message?: boolean
    like?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    replies_discussion?: boolean | discussion$replies_discussionArgs<ExtArgs>
    _count?: boolean | DiscussionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discussion"]>

  export type discussionSelectScalar = {
    discussion_id?: boolean
    campaign_id?: boolean
    user_id?: boolean
    createdAt?: boolean
    lastActivity?: boolean
    message?: boolean
    like?: boolean
  }


  export type discussionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    replies_discussion?: boolean | discussion$replies_discussionArgs<ExtArgs>
    _count?: boolean | DiscussionCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $discussionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "discussion"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
      replies_discussion: Prisma.$replies_discussionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      discussion_id: string
      campaign_id: string
      user_id: string
      createdAt: Date
      lastActivity: Date | null
      message: string
      like: number | null
    }, ExtArgs["result"]["discussion"]>
    composites: {}
  }


  type discussionGetPayload<S extends boolean | null | undefined | discussionDefaultArgs> = $Result.GetResult<Prisma.$discussionPayload, S>

  type discussionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<discussionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DiscussionCountAggregateInputType | true
    }

  export interface discussionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion'], meta: { name: 'discussion' } }
    /**
     * Find zero or one Discussion that matches the filter.
     * @param {discussionFindUniqueArgs} args - Arguments to find a Discussion
     * @example
     * // Get one Discussion
     * const discussion = await prisma.discussion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends discussionFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, discussionFindUniqueArgs<ExtArgs>>
    ): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Discussion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {discussionFindUniqueOrThrowArgs} args - Arguments to find a Discussion
     * @example
     * // Get one Discussion
     * const discussion = await prisma.discussion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends discussionFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, discussionFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Discussion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discussionFindFirstArgs} args - Arguments to find a Discussion
     * @example
     * // Get one Discussion
     * const discussion = await prisma.discussion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends discussionFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, discussionFindFirstArgs<ExtArgs>>
    ): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Discussion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discussionFindFirstOrThrowArgs} args - Arguments to find a Discussion
     * @example
     * // Get one Discussion
     * const discussion = await prisma.discussion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends discussionFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, discussionFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Discussions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discussionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Discussions
     * const discussions = await prisma.discussion.findMany()
     * 
     * // Get first 10 Discussions
     * const discussions = await prisma.discussion.findMany({ take: 10 })
     * 
     * // Only select the `discussion_id`
     * const discussionWithDiscussion_idOnly = await prisma.discussion.findMany({ select: { discussion_id: true } })
     * 
    **/
    findMany<T extends discussionFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, discussionFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Discussion.
     * @param {discussionCreateArgs} args - Arguments to create a Discussion.
     * @example
     * // Create one Discussion
     * const Discussion = await prisma.discussion.create({
     *   data: {
     *     // ... data to create a Discussion
     *   }
     * })
     * 
    **/
    create<T extends discussionCreateArgs<ExtArgs>>(
      args: SelectSubset<T, discussionCreateArgs<ExtArgs>>
    ): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Discussions.
     * @param {discussionCreateManyArgs} args - Arguments to create many Discussions.
     * @example
     * // Create many Discussions
     * const discussion = await prisma.discussion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends discussionCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, discussionCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Discussions and returns the data saved in the database.
     * @param {discussionCreateManyAndReturnArgs} args - Arguments to create many Discussions.
     * @example
     * // Create many Discussions
     * const discussion = await prisma.discussion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Discussions and only return the `discussion_id`
     * const discussionWithDiscussion_idOnly = await prisma.discussion.createManyAndReturn({ 
     *   select: { discussion_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends discussionCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, discussionCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Discussion.
     * @param {discussionDeleteArgs} args - Arguments to delete one Discussion.
     * @example
     * // Delete one Discussion
     * const Discussion = await prisma.discussion.delete({
     *   where: {
     *     // ... filter to delete one Discussion
     *   }
     * })
     * 
    **/
    delete<T extends discussionDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, discussionDeleteArgs<ExtArgs>>
    ): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Discussion.
     * @param {discussionUpdateArgs} args - Arguments to update one Discussion.
     * @example
     * // Update one Discussion
     * const discussion = await prisma.discussion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends discussionUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, discussionUpdateArgs<ExtArgs>>
    ): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Discussions.
     * @param {discussionDeleteManyArgs} args - Arguments to filter Discussions to delete.
     * @example
     * // Delete a few Discussions
     * const { count } = await prisma.discussion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends discussionDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, discussionDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Discussions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discussionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Discussions
     * const discussion = await prisma.discussion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends discussionUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, discussionUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Discussion.
     * @param {discussionUpsertArgs} args - Arguments to update or create a Discussion.
     * @example
     * // Update or create a Discussion
     * const discussion = await prisma.discussion.upsert({
     *   create: {
     *     // ... data to create a Discussion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Discussion we want to update
     *   }
     * })
    **/
    upsert<T extends discussionUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, discussionUpsertArgs<ExtArgs>>
    ): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Discussions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discussionCountArgs} args - Arguments to filter Discussions to count.
     * @example
     * // Count the number of Discussions
     * const count = await prisma.discussion.count({
     *   where: {
     *     // ... the filter for the Discussions we want to count
     *   }
     * })
    **/
    count<T extends discussionCountArgs>(
      args?: Subset<T, discussionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscussionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Discussion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscussionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscussionAggregateArgs>(args: Subset<T, DiscussionAggregateArgs>): Prisma.PrismaPromise<GetDiscussionAggregateType<T>>

    /**
     * Group by Discussion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discussionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends discussionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: discussionGroupByArgs['orderBy'] }
        : { orderBy?: discussionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, discussionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the discussion model
   */
  readonly fields: discussionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for discussion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__discussionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    replies_discussion<T extends discussion$replies_discussionArgs<ExtArgs> = {}>(args?: Subset<T, discussion$replies_discussionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the discussion model
   */ 
  interface discussionFieldRefs {
    readonly discussion_id: FieldRef<"discussion", 'String'>
    readonly campaign_id: FieldRef<"discussion", 'String'>
    readonly user_id: FieldRef<"discussion", 'String'>
    readonly createdAt: FieldRef<"discussion", 'DateTime'>
    readonly lastActivity: FieldRef<"discussion", 'DateTime'>
    readonly message: FieldRef<"discussion", 'String'>
    readonly like: FieldRef<"discussion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * discussion findUnique
   */
  export type discussionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * Filter, which discussion to fetch.
     */
    where: discussionWhereUniqueInput
  }

  /**
   * discussion findUniqueOrThrow
   */
  export type discussionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * Filter, which discussion to fetch.
     */
    where: discussionWhereUniqueInput
  }

  /**
   * discussion findFirst
   */
  export type discussionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * Filter, which discussion to fetch.
     */
    where?: discussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of discussions to fetch.
     */
    orderBy?: discussionOrderByWithRelationInput | discussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for discussions.
     */
    cursor?: discussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of discussions.
     */
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * discussion findFirstOrThrow
   */
  export type discussionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * Filter, which discussion to fetch.
     */
    where?: discussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of discussions to fetch.
     */
    orderBy?: discussionOrderByWithRelationInput | discussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for discussions.
     */
    cursor?: discussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of discussions.
     */
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * discussion findMany
   */
  export type discussionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * Filter, which discussions to fetch.
     */
    where?: discussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of discussions to fetch.
     */
    orderBy?: discussionOrderByWithRelationInput | discussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing discussions.
     */
    cursor?: discussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` discussions.
     */
    skip?: number
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * discussion create
   */
  export type discussionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * The data needed to create a discussion.
     */
    data: XOR<discussionCreateInput, discussionUncheckedCreateInput>
  }

  /**
   * discussion createMany
   */
  export type discussionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many discussions.
     */
    data: discussionCreateManyInput | discussionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * discussion createManyAndReturn
   */
  export type discussionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * The data used to create many discussions.
     */
    data: discussionCreateManyInput | discussionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * discussion update
   */
  export type discussionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * The data needed to update a discussion.
     */
    data: XOR<discussionUpdateInput, discussionUncheckedUpdateInput>
    /**
     * Choose, which discussion to update.
     */
    where: discussionWhereUniqueInput
  }

  /**
   * discussion updateMany
   */
  export type discussionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update discussions.
     */
    data: XOR<discussionUpdateManyMutationInput, discussionUncheckedUpdateManyInput>
    /**
     * Filter which discussions to update
     */
    where?: discussionWhereInput
  }

  /**
   * discussion upsert
   */
  export type discussionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * The filter to search for the discussion to update in case it exists.
     */
    where: discussionWhereUniqueInput
    /**
     * In case the discussion found by the `where` argument doesn't exist, create a new discussion with this data.
     */
    create: XOR<discussionCreateInput, discussionUncheckedCreateInput>
    /**
     * In case the discussion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<discussionUpdateInput, discussionUncheckedUpdateInput>
  }

  /**
   * discussion delete
   */
  export type discussionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    /**
     * Filter which discussion to delete.
     */
    where: discussionWhereUniqueInput
  }

  /**
   * discussion deleteMany
   */
  export type discussionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which discussions to delete
     */
    where?: discussionWhereInput
  }

  /**
   * discussion.replies_discussion
   */
  export type discussion$replies_discussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    where?: replies_discussionWhereInput
    orderBy?: replies_discussionOrderByWithRelationInput | replies_discussionOrderByWithRelationInput[]
    cursor?: replies_discussionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Replies_discussionScalarFieldEnum | Replies_discussionScalarFieldEnum[]
  }

  /**
   * discussion without action
   */
  export type discussionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
  }


  /**
   * Model document
   */

  export type AggregateDocument = {
    _count: DocumentCountAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  export type DocumentMinAggregateOutputType = {
    document_id: string | null
    campaign_id: string | null
  }

  export type DocumentMaxAggregateOutputType = {
    document_id: string | null
    campaign_id: string | null
  }

  export type DocumentCountAggregateOutputType = {
    document_id: number
    campaign_id: number
    _all: number
  }


  export type DocumentMinAggregateInputType = {
    document_id?: true
    campaign_id?: true
  }

  export type DocumentMaxAggregateInputType = {
    document_id?: true
    campaign_id?: true
  }

  export type DocumentCountAggregateInputType = {
    document_id?: true
    campaign_id?: true
    _all?: true
  }

  export type DocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document to aggregate.
     */
    where?: documentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentOrderByWithRelationInput | documentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: documentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned documents
    **/
    _count?: true | DocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentMaxAggregateInputType
  }

  export type GetDocumentAggregateType<T extends DocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument[P]>
      : GetScalarType<T[P], AggregateDocument[P]>
  }




  export type documentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: documentWhereInput
    orderBy?: documentOrderByWithAggregationInput | documentOrderByWithAggregationInput[]
    by: DocumentScalarFieldEnum[] | DocumentScalarFieldEnum
    having?: documentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentCountAggregateInputType | true
    _min?: DocumentMinAggregateInputType
    _max?: DocumentMaxAggregateInputType
  }

  export type DocumentGroupByOutputType = {
    document_id: string
    campaign_id: string
    _count: DocumentCountAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  type GetDocumentGroupByPayload<T extends documentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentGroupByOutputType[P]>
        }
      >
    >


  export type documentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    document_id?: boolean
    campaign_id?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    document_legal?: boolean | document$document_legalArgs<ExtArgs>
    document_proposal?: boolean | document$document_proposalArgs<ExtArgs>
    _count?: boolean | DocumentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type documentSelectScalar = {
    document_id?: boolean
    campaign_id?: boolean
  }


  export type documentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    document_legal?: boolean | document$document_legalArgs<ExtArgs>
    document_proposal?: boolean | document$document_proposalArgs<ExtArgs>
    _count?: boolean | DocumentCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $documentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "document"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
      document_legal: Prisma.$document_legalPayload<ExtArgs>[]
      document_proposal: Prisma.$document_proposalPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      document_id: string
      campaign_id: string
    }, ExtArgs["result"]["document"]>
    composites: {}
  }


  type documentGetPayload<S extends boolean | null | undefined | documentDefaultArgs> = $Result.GetResult<Prisma.$documentPayload, S>

  type documentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<documentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DocumentCountAggregateInputType | true
    }

  export interface documentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['document'], meta: { name: 'document' } }
    /**
     * Find zero or one Document that matches the filter.
     * @param {documentFindUniqueArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends documentFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, documentFindUniqueArgs<ExtArgs>>
    ): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Document that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {documentFindUniqueOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends documentFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, documentFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Document that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentFindFirstArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends documentFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, documentFindFirstArgs<ExtArgs>>
    ): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Document that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentFindFirstOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends documentFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, documentFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documents
     * const documents = await prisma.document.findMany()
     * 
     * // Get first 10 Documents
     * const documents = await prisma.document.findMany({ take: 10 })
     * 
     * // Only select the `document_id`
     * const documentWithDocument_idOnly = await prisma.document.findMany({ select: { document_id: true } })
     * 
    **/
    findMany<T extends documentFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, documentFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Document.
     * @param {documentCreateArgs} args - Arguments to create a Document.
     * @example
     * // Create one Document
     * const Document = await prisma.document.create({
     *   data: {
     *     // ... data to create a Document
     *   }
     * })
     * 
    **/
    create<T extends documentCreateArgs<ExtArgs>>(
      args: SelectSubset<T, documentCreateArgs<ExtArgs>>
    ): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Documents.
     * @param {documentCreateManyArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends documentCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, documentCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Documents and returns the data saved in the database.
     * @param {documentCreateManyAndReturnArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Documents and only return the `document_id`
     * const documentWithDocument_idOnly = await prisma.document.createManyAndReturn({ 
     *   select: { document_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends documentCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, documentCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Document.
     * @param {documentDeleteArgs} args - Arguments to delete one Document.
     * @example
     * // Delete one Document
     * const Document = await prisma.document.delete({
     *   where: {
     *     // ... filter to delete one Document
     *   }
     * })
     * 
    **/
    delete<T extends documentDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, documentDeleteArgs<ExtArgs>>
    ): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Document.
     * @param {documentUpdateArgs} args - Arguments to update one Document.
     * @example
     * // Update one Document
     * const document = await prisma.document.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends documentUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, documentUpdateArgs<ExtArgs>>
    ): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Documents.
     * @param {documentDeleteManyArgs} args - Arguments to filter Documents to delete.
     * @example
     * // Delete a few Documents
     * const { count } = await prisma.document.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends documentDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, documentDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documents
     * const document = await prisma.document.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends documentUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, documentUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Document.
     * @param {documentUpsertArgs} args - Arguments to update or create a Document.
     * @example
     * // Update or create a Document
     * const document = await prisma.document.upsert({
     *   create: {
     *     // ... data to create a Document
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document we want to update
     *   }
     * })
    **/
    upsert<T extends documentUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, documentUpsertArgs<ExtArgs>>
    ): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentCountArgs} args - Arguments to filter Documents to count.
     * @example
     * // Count the number of Documents
     * const count = await prisma.document.count({
     *   where: {
     *     // ... the filter for the Documents we want to count
     *   }
     * })
    **/
    count<T extends documentCountArgs>(
      args?: Subset<T, documentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentAggregateArgs>(args: Subset<T, DocumentAggregateArgs>): Prisma.PrismaPromise<GetDocumentAggregateType<T>>

    /**
     * Group by Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends documentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: documentGroupByArgs['orderBy'] }
        : { orderBy?: documentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, documentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the document model
   */
  readonly fields: documentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for document.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__documentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    document_legal<T extends document$document_legalArgs<ExtArgs> = {}>(args?: Subset<T, document$document_legalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'findMany'> | Null>;

    document_proposal<T extends document$document_proposalArgs<ExtArgs> = {}>(args?: Subset<T, document$document_proposalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the document model
   */ 
  interface documentFieldRefs {
    readonly document_id: FieldRef<"document", 'String'>
    readonly campaign_id: FieldRef<"document", 'String'>
  }
    

  // Custom InputTypes
  /**
   * document findUnique
   */
  export type documentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * Filter, which document to fetch.
     */
    where: documentWhereUniqueInput
  }

  /**
   * document findUniqueOrThrow
   */
  export type documentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * Filter, which document to fetch.
     */
    where: documentWhereUniqueInput
  }

  /**
   * document findFirst
   */
  export type documentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * Filter, which document to fetch.
     */
    where?: documentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentOrderByWithRelationInput | documentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for documents.
     */
    cursor?: documentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * document findFirstOrThrow
   */
  export type documentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * Filter, which document to fetch.
     */
    where?: documentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentOrderByWithRelationInput | documentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for documents.
     */
    cursor?: documentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * document findMany
   */
  export type documentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where?: documentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentOrderByWithRelationInput | documentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing documents.
     */
    cursor?: documentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * document create
   */
  export type documentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * The data needed to create a document.
     */
    data: XOR<documentCreateInput, documentUncheckedCreateInput>
  }

  /**
   * document createMany
   */
  export type documentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many documents.
     */
    data: documentCreateManyInput | documentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * document createManyAndReturn
   */
  export type documentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * The data used to create many documents.
     */
    data: documentCreateManyInput | documentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * document update
   */
  export type documentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * The data needed to update a document.
     */
    data: XOR<documentUpdateInput, documentUncheckedUpdateInput>
    /**
     * Choose, which document to update.
     */
    where: documentWhereUniqueInput
  }

  /**
   * document updateMany
   */
  export type documentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update documents.
     */
    data: XOR<documentUpdateManyMutationInput, documentUncheckedUpdateManyInput>
    /**
     * Filter which documents to update
     */
    where?: documentWhereInput
  }

  /**
   * document upsert
   */
  export type documentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * The filter to search for the document to update in case it exists.
     */
    where: documentWhereUniqueInput
    /**
     * In case the document found by the `where` argument doesn't exist, create a new document with this data.
     */
    create: XOR<documentCreateInput, documentUncheckedCreateInput>
    /**
     * In case the document was found with the provided `where` argument, update it with this data.
     */
    update: XOR<documentUpdateInput, documentUncheckedUpdateInput>
  }

  /**
   * document delete
   */
  export type documentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
    /**
     * Filter which document to delete.
     */
    where: documentWhereUniqueInput
  }

  /**
   * document deleteMany
   */
  export type documentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which documents to delete
     */
    where?: documentWhereInput
  }

  /**
   * document.document_legal
   */
  export type document$document_legalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    where?: document_legalWhereInput
    orderBy?: document_legalOrderByWithRelationInput | document_legalOrderByWithRelationInput[]
    cursor?: document_legalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Document_legalScalarFieldEnum | Document_legalScalarFieldEnum[]
  }

  /**
   * document.document_proposal
   */
  export type document$document_proposalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    where?: document_proposalWhereInput
    orderBy?: document_proposalOrderByWithRelationInput | document_proposalOrderByWithRelationInput[]
    cursor?: document_proposalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Document_proposalScalarFieldEnum | Document_proposalScalarFieldEnum[]
  }

  /**
   * document without action
   */
  export type documentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document
     */
    select?: documentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentInclude<ExtArgs> | null
  }


  /**
   * Model document_legal
   */

  export type AggregateDocument_legal = {
    _count: Document_legalCountAggregateOutputType | null
    _min: Document_legalMinAggregateOutputType | null
    _max: Document_legalMaxAggregateOutputType | null
  }

  export type Document_legalMinAggregateOutputType = {
    document_legal_id: string | null
    document_id: string | null
    nama_dokumen: string | null
    file: Buffer | null
  }

  export type Document_legalMaxAggregateOutputType = {
    document_legal_id: string | null
    document_id: string | null
    nama_dokumen: string | null
    file: Buffer | null
  }

  export type Document_legalCountAggregateOutputType = {
    document_legal_id: number
    document_id: number
    nama_dokumen: number
    file: number
    _all: number
  }


  export type Document_legalMinAggregateInputType = {
    document_legal_id?: true
    document_id?: true
    nama_dokumen?: true
    file?: true
  }

  export type Document_legalMaxAggregateInputType = {
    document_legal_id?: true
    document_id?: true
    nama_dokumen?: true
    file?: true
  }

  export type Document_legalCountAggregateInputType = {
    document_legal_id?: true
    document_id?: true
    nama_dokumen?: true
    file?: true
    _all?: true
  }

  export type Document_legalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_legal to aggregate.
     */
    where?: document_legalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_legals to fetch.
     */
    orderBy?: document_legalOrderByWithRelationInput | document_legalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: document_legalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_legals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_legals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned document_legals
    **/
    _count?: true | Document_legalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Document_legalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Document_legalMaxAggregateInputType
  }

  export type GetDocument_legalAggregateType<T extends Document_legalAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument_legal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument_legal[P]>
      : GetScalarType<T[P], AggregateDocument_legal[P]>
  }




  export type document_legalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_legalWhereInput
    orderBy?: document_legalOrderByWithAggregationInput | document_legalOrderByWithAggregationInput[]
    by: Document_legalScalarFieldEnum[] | Document_legalScalarFieldEnum
    having?: document_legalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Document_legalCountAggregateInputType | true
    _min?: Document_legalMinAggregateInputType
    _max?: Document_legalMaxAggregateInputType
  }

  export type Document_legalGroupByOutputType = {
    document_legal_id: string
    document_id: string
    nama_dokumen: string | null
    file: Buffer | null
    _count: Document_legalCountAggregateOutputType | null
    _min: Document_legalMinAggregateOutputType | null
    _max: Document_legalMaxAggregateOutputType | null
  }

  type GetDocument_legalGroupByPayload<T extends document_legalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Document_legalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Document_legalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Document_legalGroupByOutputType[P]>
            : GetScalarType<T[P], Document_legalGroupByOutputType[P]>
        }
      >
    >


  export type document_legalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    document_legal_id?: boolean
    document_id?: boolean
    nama_dokumen?: boolean
    file?: boolean
    document?: boolean | documentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document_legal"]>

  export type document_legalSelectScalar = {
    document_legal_id?: boolean
    document_id?: boolean
    nama_dokumen?: boolean
    file?: boolean
  }


  export type document_legalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    document?: boolean | documentDefaultArgs<ExtArgs>
  }


  export type $document_legalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "document_legal"
    objects: {
      document: Prisma.$documentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      document_legal_id: string
      document_id: string
      nama_dokumen: string | null
      file: Buffer | null
    }, ExtArgs["result"]["document_legal"]>
    composites: {}
  }


  type document_legalGetPayload<S extends boolean | null | undefined | document_legalDefaultArgs> = $Result.GetResult<Prisma.$document_legalPayload, S>

  type document_legalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<document_legalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Document_legalCountAggregateInputType | true
    }

  export interface document_legalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['document_legal'], meta: { name: 'document_legal' } }
    /**
     * Find zero or one Document_legal that matches the filter.
     * @param {document_legalFindUniqueArgs} args - Arguments to find a Document_legal
     * @example
     * // Get one Document_legal
     * const document_legal = await prisma.document_legal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends document_legalFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, document_legalFindUniqueArgs<ExtArgs>>
    ): Prisma__document_legalClient<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Document_legal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {document_legalFindUniqueOrThrowArgs} args - Arguments to find a Document_legal
     * @example
     * // Get one Document_legal
     * const document_legal = await prisma.document_legal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends document_legalFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, document_legalFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__document_legalClient<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Document_legal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_legalFindFirstArgs} args - Arguments to find a Document_legal
     * @example
     * // Get one Document_legal
     * const document_legal = await prisma.document_legal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends document_legalFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, document_legalFindFirstArgs<ExtArgs>>
    ): Prisma__document_legalClient<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Document_legal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_legalFindFirstOrThrowArgs} args - Arguments to find a Document_legal
     * @example
     * // Get one Document_legal
     * const document_legal = await prisma.document_legal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends document_legalFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, document_legalFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__document_legalClient<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Document_legals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_legalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Document_legals
     * const document_legals = await prisma.document_legal.findMany()
     * 
     * // Get first 10 Document_legals
     * const document_legals = await prisma.document_legal.findMany({ take: 10 })
     * 
     * // Only select the `document_legal_id`
     * const document_legalWithDocument_legal_idOnly = await prisma.document_legal.findMany({ select: { document_legal_id: true } })
     * 
    **/
    findMany<T extends document_legalFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, document_legalFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Document_legal.
     * @param {document_legalCreateArgs} args - Arguments to create a Document_legal.
     * @example
     * // Create one Document_legal
     * const Document_legal = await prisma.document_legal.create({
     *   data: {
     *     // ... data to create a Document_legal
     *   }
     * })
     * 
    **/
    create<T extends document_legalCreateArgs<ExtArgs>>(
      args: SelectSubset<T, document_legalCreateArgs<ExtArgs>>
    ): Prisma__document_legalClient<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Document_legals.
     * @param {document_legalCreateManyArgs} args - Arguments to create many Document_legals.
     * @example
     * // Create many Document_legals
     * const document_legal = await prisma.document_legal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends document_legalCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, document_legalCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Document_legals and returns the data saved in the database.
     * @param {document_legalCreateManyAndReturnArgs} args - Arguments to create many Document_legals.
     * @example
     * // Create many Document_legals
     * const document_legal = await prisma.document_legal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Document_legals and only return the `document_legal_id`
     * const document_legalWithDocument_legal_idOnly = await prisma.document_legal.createManyAndReturn({ 
     *   select: { document_legal_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends document_legalCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, document_legalCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Document_legal.
     * @param {document_legalDeleteArgs} args - Arguments to delete one Document_legal.
     * @example
     * // Delete one Document_legal
     * const Document_legal = await prisma.document_legal.delete({
     *   where: {
     *     // ... filter to delete one Document_legal
     *   }
     * })
     * 
    **/
    delete<T extends document_legalDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, document_legalDeleteArgs<ExtArgs>>
    ): Prisma__document_legalClient<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Document_legal.
     * @param {document_legalUpdateArgs} args - Arguments to update one Document_legal.
     * @example
     * // Update one Document_legal
     * const document_legal = await prisma.document_legal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends document_legalUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, document_legalUpdateArgs<ExtArgs>>
    ): Prisma__document_legalClient<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Document_legals.
     * @param {document_legalDeleteManyArgs} args - Arguments to filter Document_legals to delete.
     * @example
     * // Delete a few Document_legals
     * const { count } = await prisma.document_legal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends document_legalDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, document_legalDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_legals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_legalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Document_legals
     * const document_legal = await prisma.document_legal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends document_legalUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, document_legalUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Document_legal.
     * @param {document_legalUpsertArgs} args - Arguments to update or create a Document_legal.
     * @example
     * // Update or create a Document_legal
     * const document_legal = await prisma.document_legal.upsert({
     *   create: {
     *     // ... data to create a Document_legal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document_legal we want to update
     *   }
     * })
    **/
    upsert<T extends document_legalUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, document_legalUpsertArgs<ExtArgs>>
    ): Prisma__document_legalClient<$Result.GetResult<Prisma.$document_legalPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Document_legals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_legalCountArgs} args - Arguments to filter Document_legals to count.
     * @example
     * // Count the number of Document_legals
     * const count = await prisma.document_legal.count({
     *   where: {
     *     // ... the filter for the Document_legals we want to count
     *   }
     * })
    **/
    count<T extends document_legalCountArgs>(
      args?: Subset<T, document_legalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Document_legalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document_legal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_legalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Document_legalAggregateArgs>(args: Subset<T, Document_legalAggregateArgs>): Prisma.PrismaPromise<GetDocument_legalAggregateType<T>>

    /**
     * Group by Document_legal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_legalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends document_legalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: document_legalGroupByArgs['orderBy'] }
        : { orderBy?: document_legalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, document_legalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocument_legalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the document_legal model
   */
  readonly fields: document_legalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for document_legal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__document_legalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    document<T extends documentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, documentDefaultArgs<ExtArgs>>): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the document_legal model
   */ 
  interface document_legalFieldRefs {
    readonly document_legal_id: FieldRef<"document_legal", 'String'>
    readonly document_id: FieldRef<"document_legal", 'String'>
    readonly nama_dokumen: FieldRef<"document_legal", 'String'>
    readonly file: FieldRef<"document_legal", 'Bytes'>
  }
    

  // Custom InputTypes
  /**
   * document_legal findUnique
   */
  export type document_legalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * Filter, which document_legal to fetch.
     */
    where: document_legalWhereUniqueInput
  }

  /**
   * document_legal findUniqueOrThrow
   */
  export type document_legalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * Filter, which document_legal to fetch.
     */
    where: document_legalWhereUniqueInput
  }

  /**
   * document_legal findFirst
   */
  export type document_legalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * Filter, which document_legal to fetch.
     */
    where?: document_legalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_legals to fetch.
     */
    orderBy?: document_legalOrderByWithRelationInput | document_legalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_legals.
     */
    cursor?: document_legalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_legals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_legals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_legals.
     */
    distinct?: Document_legalScalarFieldEnum | Document_legalScalarFieldEnum[]
  }

  /**
   * document_legal findFirstOrThrow
   */
  export type document_legalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * Filter, which document_legal to fetch.
     */
    where?: document_legalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_legals to fetch.
     */
    orderBy?: document_legalOrderByWithRelationInput | document_legalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_legals.
     */
    cursor?: document_legalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_legals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_legals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_legals.
     */
    distinct?: Document_legalScalarFieldEnum | Document_legalScalarFieldEnum[]
  }

  /**
   * document_legal findMany
   */
  export type document_legalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * Filter, which document_legals to fetch.
     */
    where?: document_legalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_legals to fetch.
     */
    orderBy?: document_legalOrderByWithRelationInput | document_legalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing document_legals.
     */
    cursor?: document_legalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_legals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_legals.
     */
    skip?: number
    distinct?: Document_legalScalarFieldEnum | Document_legalScalarFieldEnum[]
  }

  /**
   * document_legal create
   */
  export type document_legalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * The data needed to create a document_legal.
     */
    data: XOR<document_legalCreateInput, document_legalUncheckedCreateInput>
  }

  /**
   * document_legal createMany
   */
  export type document_legalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many document_legals.
     */
    data: document_legalCreateManyInput | document_legalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * document_legal createManyAndReturn
   */
  export type document_legalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * The data used to create many document_legals.
     */
    data: document_legalCreateManyInput | document_legalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * document_legal update
   */
  export type document_legalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * The data needed to update a document_legal.
     */
    data: XOR<document_legalUpdateInput, document_legalUncheckedUpdateInput>
    /**
     * Choose, which document_legal to update.
     */
    where: document_legalWhereUniqueInput
  }

  /**
   * document_legal updateMany
   */
  export type document_legalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update document_legals.
     */
    data: XOR<document_legalUpdateManyMutationInput, document_legalUncheckedUpdateManyInput>
    /**
     * Filter which document_legals to update
     */
    where?: document_legalWhereInput
  }

  /**
   * document_legal upsert
   */
  export type document_legalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * The filter to search for the document_legal to update in case it exists.
     */
    where: document_legalWhereUniqueInput
    /**
     * In case the document_legal found by the `where` argument doesn't exist, create a new document_legal with this data.
     */
    create: XOR<document_legalCreateInput, document_legalUncheckedCreateInput>
    /**
     * In case the document_legal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<document_legalUpdateInput, document_legalUncheckedUpdateInput>
  }

  /**
   * document_legal delete
   */
  export type document_legalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
    /**
     * Filter which document_legal to delete.
     */
    where: document_legalWhereUniqueInput
  }

  /**
   * document_legal deleteMany
   */
  export type document_legalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_legals to delete
     */
    where?: document_legalWhereInput
  }

  /**
   * document_legal without action
   */
  export type document_legalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_legal
     */
    select?: document_legalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_legalInclude<ExtArgs> | null
  }


  /**
   * Model document_proposal
   */

  export type AggregateDocument_proposal = {
    _count: Document_proposalCountAggregateOutputType | null
    _min: Document_proposalMinAggregateOutputType | null
    _max: Document_proposalMaxAggregateOutputType | null
  }

  export type Document_proposalMinAggregateOutputType = {
    document_proposal_id: string | null
    document_id: string | null
    nama_dokumen: string | null
    file: Buffer | null
  }

  export type Document_proposalMaxAggregateOutputType = {
    document_proposal_id: string | null
    document_id: string | null
    nama_dokumen: string | null
    file: Buffer | null
  }

  export type Document_proposalCountAggregateOutputType = {
    document_proposal_id: number
    document_id: number
    nama_dokumen: number
    file: number
    _all: number
  }


  export type Document_proposalMinAggregateInputType = {
    document_proposal_id?: true
    document_id?: true
    nama_dokumen?: true
    file?: true
  }

  export type Document_proposalMaxAggregateInputType = {
    document_proposal_id?: true
    document_id?: true
    nama_dokumen?: true
    file?: true
  }

  export type Document_proposalCountAggregateInputType = {
    document_proposal_id?: true
    document_id?: true
    nama_dokumen?: true
    file?: true
    _all?: true
  }

  export type Document_proposalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_proposal to aggregate.
     */
    where?: document_proposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_proposals to fetch.
     */
    orderBy?: document_proposalOrderByWithRelationInput | document_proposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: document_proposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_proposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_proposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned document_proposals
    **/
    _count?: true | Document_proposalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Document_proposalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Document_proposalMaxAggregateInputType
  }

  export type GetDocument_proposalAggregateType<T extends Document_proposalAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument_proposal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument_proposal[P]>
      : GetScalarType<T[P], AggregateDocument_proposal[P]>
  }




  export type document_proposalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_proposalWhereInput
    orderBy?: document_proposalOrderByWithAggregationInput | document_proposalOrderByWithAggregationInput[]
    by: Document_proposalScalarFieldEnum[] | Document_proposalScalarFieldEnum
    having?: document_proposalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Document_proposalCountAggregateInputType | true
    _min?: Document_proposalMinAggregateInputType
    _max?: Document_proposalMaxAggregateInputType
  }

  export type Document_proposalGroupByOutputType = {
    document_proposal_id: string
    document_id: string
    nama_dokumen: string | null
    file: Buffer | null
    _count: Document_proposalCountAggregateOutputType | null
    _min: Document_proposalMinAggregateOutputType | null
    _max: Document_proposalMaxAggregateOutputType | null
  }

  type GetDocument_proposalGroupByPayload<T extends document_proposalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Document_proposalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Document_proposalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Document_proposalGroupByOutputType[P]>
            : GetScalarType<T[P], Document_proposalGroupByOutputType[P]>
        }
      >
    >


  export type document_proposalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    document_proposal_id?: boolean
    document_id?: boolean
    nama_dokumen?: boolean
    file?: boolean
    document?: boolean | documentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document_proposal"]>

  export type document_proposalSelectScalar = {
    document_proposal_id?: boolean
    document_id?: boolean
    nama_dokumen?: boolean
    file?: boolean
  }


  export type document_proposalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    document?: boolean | documentDefaultArgs<ExtArgs>
  }


  export type $document_proposalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "document_proposal"
    objects: {
      document: Prisma.$documentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      document_proposal_id: string
      document_id: string
      nama_dokumen: string | null
      file: Buffer | null
    }, ExtArgs["result"]["document_proposal"]>
    composites: {}
  }


  type document_proposalGetPayload<S extends boolean | null | undefined | document_proposalDefaultArgs> = $Result.GetResult<Prisma.$document_proposalPayload, S>

  type document_proposalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<document_proposalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Document_proposalCountAggregateInputType | true
    }

  export interface document_proposalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['document_proposal'], meta: { name: 'document_proposal' } }
    /**
     * Find zero or one Document_proposal that matches the filter.
     * @param {document_proposalFindUniqueArgs} args - Arguments to find a Document_proposal
     * @example
     * // Get one Document_proposal
     * const document_proposal = await prisma.document_proposal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends document_proposalFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, document_proposalFindUniqueArgs<ExtArgs>>
    ): Prisma__document_proposalClient<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Document_proposal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {document_proposalFindUniqueOrThrowArgs} args - Arguments to find a Document_proposal
     * @example
     * // Get one Document_proposal
     * const document_proposal = await prisma.document_proposal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends document_proposalFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, document_proposalFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__document_proposalClient<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Document_proposal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_proposalFindFirstArgs} args - Arguments to find a Document_proposal
     * @example
     * // Get one Document_proposal
     * const document_proposal = await prisma.document_proposal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends document_proposalFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, document_proposalFindFirstArgs<ExtArgs>>
    ): Prisma__document_proposalClient<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Document_proposal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_proposalFindFirstOrThrowArgs} args - Arguments to find a Document_proposal
     * @example
     * // Get one Document_proposal
     * const document_proposal = await prisma.document_proposal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends document_proposalFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, document_proposalFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__document_proposalClient<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Document_proposals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_proposalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Document_proposals
     * const document_proposals = await prisma.document_proposal.findMany()
     * 
     * // Get first 10 Document_proposals
     * const document_proposals = await prisma.document_proposal.findMany({ take: 10 })
     * 
     * // Only select the `document_proposal_id`
     * const document_proposalWithDocument_proposal_idOnly = await prisma.document_proposal.findMany({ select: { document_proposal_id: true } })
     * 
    **/
    findMany<T extends document_proposalFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, document_proposalFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Document_proposal.
     * @param {document_proposalCreateArgs} args - Arguments to create a Document_proposal.
     * @example
     * // Create one Document_proposal
     * const Document_proposal = await prisma.document_proposal.create({
     *   data: {
     *     // ... data to create a Document_proposal
     *   }
     * })
     * 
    **/
    create<T extends document_proposalCreateArgs<ExtArgs>>(
      args: SelectSubset<T, document_proposalCreateArgs<ExtArgs>>
    ): Prisma__document_proposalClient<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Document_proposals.
     * @param {document_proposalCreateManyArgs} args - Arguments to create many Document_proposals.
     * @example
     * // Create many Document_proposals
     * const document_proposal = await prisma.document_proposal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends document_proposalCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, document_proposalCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Document_proposals and returns the data saved in the database.
     * @param {document_proposalCreateManyAndReturnArgs} args - Arguments to create many Document_proposals.
     * @example
     * // Create many Document_proposals
     * const document_proposal = await prisma.document_proposal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Document_proposals and only return the `document_proposal_id`
     * const document_proposalWithDocument_proposal_idOnly = await prisma.document_proposal.createManyAndReturn({ 
     *   select: { document_proposal_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends document_proposalCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, document_proposalCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Document_proposal.
     * @param {document_proposalDeleteArgs} args - Arguments to delete one Document_proposal.
     * @example
     * // Delete one Document_proposal
     * const Document_proposal = await prisma.document_proposal.delete({
     *   where: {
     *     // ... filter to delete one Document_proposal
     *   }
     * })
     * 
    **/
    delete<T extends document_proposalDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, document_proposalDeleteArgs<ExtArgs>>
    ): Prisma__document_proposalClient<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Document_proposal.
     * @param {document_proposalUpdateArgs} args - Arguments to update one Document_proposal.
     * @example
     * // Update one Document_proposal
     * const document_proposal = await prisma.document_proposal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends document_proposalUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, document_proposalUpdateArgs<ExtArgs>>
    ): Prisma__document_proposalClient<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Document_proposals.
     * @param {document_proposalDeleteManyArgs} args - Arguments to filter Document_proposals to delete.
     * @example
     * // Delete a few Document_proposals
     * const { count } = await prisma.document_proposal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends document_proposalDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, document_proposalDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_proposals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_proposalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Document_proposals
     * const document_proposal = await prisma.document_proposal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends document_proposalUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, document_proposalUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Document_proposal.
     * @param {document_proposalUpsertArgs} args - Arguments to update or create a Document_proposal.
     * @example
     * // Update or create a Document_proposal
     * const document_proposal = await prisma.document_proposal.upsert({
     *   create: {
     *     // ... data to create a Document_proposal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document_proposal we want to update
     *   }
     * })
    **/
    upsert<T extends document_proposalUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, document_proposalUpsertArgs<ExtArgs>>
    ): Prisma__document_proposalClient<$Result.GetResult<Prisma.$document_proposalPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Document_proposals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_proposalCountArgs} args - Arguments to filter Document_proposals to count.
     * @example
     * // Count the number of Document_proposals
     * const count = await prisma.document_proposal.count({
     *   where: {
     *     // ... the filter for the Document_proposals we want to count
     *   }
     * })
    **/
    count<T extends document_proposalCountArgs>(
      args?: Subset<T, document_proposalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Document_proposalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document_proposal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_proposalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Document_proposalAggregateArgs>(args: Subset<T, Document_proposalAggregateArgs>): Prisma.PrismaPromise<GetDocument_proposalAggregateType<T>>

    /**
     * Group by Document_proposal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_proposalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends document_proposalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: document_proposalGroupByArgs['orderBy'] }
        : { orderBy?: document_proposalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, document_proposalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocument_proposalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the document_proposal model
   */
  readonly fields: document_proposalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for document_proposal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__document_proposalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    document<T extends documentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, documentDefaultArgs<ExtArgs>>): Prisma__documentClient<$Result.GetResult<Prisma.$documentPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the document_proposal model
   */ 
  interface document_proposalFieldRefs {
    readonly document_proposal_id: FieldRef<"document_proposal", 'String'>
    readonly document_id: FieldRef<"document_proposal", 'String'>
    readonly nama_dokumen: FieldRef<"document_proposal", 'String'>
    readonly file: FieldRef<"document_proposal", 'Bytes'>
  }
    

  // Custom InputTypes
  /**
   * document_proposal findUnique
   */
  export type document_proposalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * Filter, which document_proposal to fetch.
     */
    where: document_proposalWhereUniqueInput
  }

  /**
   * document_proposal findUniqueOrThrow
   */
  export type document_proposalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * Filter, which document_proposal to fetch.
     */
    where: document_proposalWhereUniqueInput
  }

  /**
   * document_proposal findFirst
   */
  export type document_proposalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * Filter, which document_proposal to fetch.
     */
    where?: document_proposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_proposals to fetch.
     */
    orderBy?: document_proposalOrderByWithRelationInput | document_proposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_proposals.
     */
    cursor?: document_proposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_proposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_proposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_proposals.
     */
    distinct?: Document_proposalScalarFieldEnum | Document_proposalScalarFieldEnum[]
  }

  /**
   * document_proposal findFirstOrThrow
   */
  export type document_proposalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * Filter, which document_proposal to fetch.
     */
    where?: document_proposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_proposals to fetch.
     */
    orderBy?: document_proposalOrderByWithRelationInput | document_proposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_proposals.
     */
    cursor?: document_proposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_proposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_proposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_proposals.
     */
    distinct?: Document_proposalScalarFieldEnum | Document_proposalScalarFieldEnum[]
  }

  /**
   * document_proposal findMany
   */
  export type document_proposalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * Filter, which document_proposals to fetch.
     */
    where?: document_proposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_proposals to fetch.
     */
    orderBy?: document_proposalOrderByWithRelationInput | document_proposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing document_proposals.
     */
    cursor?: document_proposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_proposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_proposals.
     */
    skip?: number
    distinct?: Document_proposalScalarFieldEnum | Document_proposalScalarFieldEnum[]
  }

  /**
   * document_proposal create
   */
  export type document_proposalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * The data needed to create a document_proposal.
     */
    data: XOR<document_proposalCreateInput, document_proposalUncheckedCreateInput>
  }

  /**
   * document_proposal createMany
   */
  export type document_proposalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many document_proposals.
     */
    data: document_proposalCreateManyInput | document_proposalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * document_proposal createManyAndReturn
   */
  export type document_proposalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * The data used to create many document_proposals.
     */
    data: document_proposalCreateManyInput | document_proposalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * document_proposal update
   */
  export type document_proposalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * The data needed to update a document_proposal.
     */
    data: XOR<document_proposalUpdateInput, document_proposalUncheckedUpdateInput>
    /**
     * Choose, which document_proposal to update.
     */
    where: document_proposalWhereUniqueInput
  }

  /**
   * document_proposal updateMany
   */
  export type document_proposalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update document_proposals.
     */
    data: XOR<document_proposalUpdateManyMutationInput, document_proposalUncheckedUpdateManyInput>
    /**
     * Filter which document_proposals to update
     */
    where?: document_proposalWhereInput
  }

  /**
   * document_proposal upsert
   */
  export type document_proposalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * The filter to search for the document_proposal to update in case it exists.
     */
    where: document_proposalWhereUniqueInput
    /**
     * In case the document_proposal found by the `where` argument doesn't exist, create a new document_proposal with this data.
     */
    create: XOR<document_proposalCreateInput, document_proposalUncheckedCreateInput>
    /**
     * In case the document_proposal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<document_proposalUpdateInput, document_proposalUncheckedUpdateInput>
  }

  /**
   * document_proposal delete
   */
  export type document_proposalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
    /**
     * Filter which document_proposal to delete.
     */
    where: document_proposalWhereUniqueInput
  }

  /**
   * document_proposal deleteMany
   */
  export type document_proposalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_proposals to delete
     */
    where?: document_proposalWhereInput
  }

  /**
   * document_proposal without action
   */
  export type document_proposalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_proposal
     */
    select?: document_proposalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_proposalInclude<ExtArgs> | null
  }


  /**
   * Model foto_dokumen
   */

  export type AggregateFoto_dokumen = {
    _count: Foto_dokumenCountAggregateOutputType | null
    _min: Foto_dokumenMinAggregateOutputType | null
    _max: Foto_dokumenMaxAggregateOutputType | null
  }

  export type Foto_dokumenMinAggregateOutputType = {
    foto_dokumen_id: string | null
    foto_ktp_depan: Buffer | null
    foto_ktp_belakang: Buffer | null
    foto_selfie: Buffer | null
    kyc_level_1_id: string | null
  }

  export type Foto_dokumenMaxAggregateOutputType = {
    foto_dokumen_id: string | null
    foto_ktp_depan: Buffer | null
    foto_ktp_belakang: Buffer | null
    foto_selfie: Buffer | null
    kyc_level_1_id: string | null
  }

  export type Foto_dokumenCountAggregateOutputType = {
    foto_dokumen_id: number
    foto_ktp_depan: number
    foto_ktp_belakang: number
    foto_selfie: number
    kyc_level_1_id: number
    _all: number
  }


  export type Foto_dokumenMinAggregateInputType = {
    foto_dokumen_id?: true
    foto_ktp_depan?: true
    foto_ktp_belakang?: true
    foto_selfie?: true
    kyc_level_1_id?: true
  }

  export type Foto_dokumenMaxAggregateInputType = {
    foto_dokumen_id?: true
    foto_ktp_depan?: true
    foto_ktp_belakang?: true
    foto_selfie?: true
    kyc_level_1_id?: true
  }

  export type Foto_dokumenCountAggregateInputType = {
    foto_dokumen_id?: true
    foto_ktp_depan?: true
    foto_ktp_belakang?: true
    foto_selfie?: true
    kyc_level_1_id?: true
    _all?: true
  }

  export type Foto_dokumenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which foto_dokumen to aggregate.
     */
    where?: foto_dokumenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of foto_dokumen to fetch.
     */
    orderBy?: foto_dokumenOrderByWithRelationInput | foto_dokumenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: foto_dokumenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` foto_dokumen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` foto_dokumen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned foto_dokumen
    **/
    _count?: true | Foto_dokumenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Foto_dokumenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Foto_dokumenMaxAggregateInputType
  }

  export type GetFoto_dokumenAggregateType<T extends Foto_dokumenAggregateArgs> = {
        [P in keyof T & keyof AggregateFoto_dokumen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFoto_dokumen[P]>
      : GetScalarType<T[P], AggregateFoto_dokumen[P]>
  }




  export type foto_dokumenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: foto_dokumenWhereInput
    orderBy?: foto_dokumenOrderByWithAggregationInput | foto_dokumenOrderByWithAggregationInput[]
    by: Foto_dokumenScalarFieldEnum[] | Foto_dokumenScalarFieldEnum
    having?: foto_dokumenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Foto_dokumenCountAggregateInputType | true
    _min?: Foto_dokumenMinAggregateInputType
    _max?: Foto_dokumenMaxAggregateInputType
  }

  export type Foto_dokumenGroupByOutputType = {
    foto_dokumen_id: string
    foto_ktp_depan: Buffer
    foto_ktp_belakang: Buffer
    foto_selfie: Buffer
    kyc_level_1_id: string
    _count: Foto_dokumenCountAggregateOutputType | null
    _min: Foto_dokumenMinAggregateOutputType | null
    _max: Foto_dokumenMaxAggregateOutputType | null
  }

  type GetFoto_dokumenGroupByPayload<T extends foto_dokumenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Foto_dokumenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Foto_dokumenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Foto_dokumenGroupByOutputType[P]>
            : GetScalarType<T[P], Foto_dokumenGroupByOutputType[P]>
        }
      >
    >


  export type foto_dokumenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    foto_dokumen_id?: boolean
    foto_ktp_depan?: boolean
    foto_ktp_belakang?: boolean
    foto_selfie?: boolean
    kyc_level_1_id?: boolean
    kyc_level_1?: boolean | kyc_level_1DefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foto_dokumen"]>

  export type foto_dokumenSelectScalar = {
    foto_dokumen_id?: boolean
    foto_ktp_depan?: boolean
    foto_ktp_belakang?: boolean
    foto_selfie?: boolean
    kyc_level_1_id?: boolean
  }


  export type foto_dokumenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kyc_level_1?: boolean | kyc_level_1DefaultArgs<ExtArgs>
  }


  export type $foto_dokumenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "foto_dokumen"
    objects: {
      kyc_level_1: Prisma.$kyc_level_1Payload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      foto_dokumen_id: string
      foto_ktp_depan: Buffer
      foto_ktp_belakang: Buffer
      foto_selfie: Buffer
      kyc_level_1_id: string
    }, ExtArgs["result"]["foto_dokumen"]>
    composites: {}
  }


  type foto_dokumenGetPayload<S extends boolean | null | undefined | foto_dokumenDefaultArgs> = $Result.GetResult<Prisma.$foto_dokumenPayload, S>

  type foto_dokumenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<foto_dokumenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Foto_dokumenCountAggregateInputType | true
    }

  export interface foto_dokumenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['foto_dokumen'], meta: { name: 'foto_dokumen' } }
    /**
     * Find zero or one Foto_dokumen that matches the filter.
     * @param {foto_dokumenFindUniqueArgs} args - Arguments to find a Foto_dokumen
     * @example
     * // Get one Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends foto_dokumenFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, foto_dokumenFindUniqueArgs<ExtArgs>>
    ): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Foto_dokumen that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {foto_dokumenFindUniqueOrThrowArgs} args - Arguments to find a Foto_dokumen
     * @example
     * // Get one Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends foto_dokumenFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, foto_dokumenFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Foto_dokumen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_dokumenFindFirstArgs} args - Arguments to find a Foto_dokumen
     * @example
     * // Get one Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends foto_dokumenFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, foto_dokumenFindFirstArgs<ExtArgs>>
    ): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Foto_dokumen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_dokumenFindFirstOrThrowArgs} args - Arguments to find a Foto_dokumen
     * @example
     * // Get one Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends foto_dokumenFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, foto_dokumenFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Foto_dokumen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_dokumenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.findMany()
     * 
     * // Get first 10 Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.findMany({ take: 10 })
     * 
     * // Only select the `foto_dokumen_id`
     * const foto_dokumenWithFoto_dokumen_idOnly = await prisma.foto_dokumen.findMany({ select: { foto_dokumen_id: true } })
     * 
    **/
    findMany<T extends foto_dokumenFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, foto_dokumenFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Foto_dokumen.
     * @param {foto_dokumenCreateArgs} args - Arguments to create a Foto_dokumen.
     * @example
     * // Create one Foto_dokumen
     * const Foto_dokumen = await prisma.foto_dokumen.create({
     *   data: {
     *     // ... data to create a Foto_dokumen
     *   }
     * })
     * 
    **/
    create<T extends foto_dokumenCreateArgs<ExtArgs>>(
      args: SelectSubset<T, foto_dokumenCreateArgs<ExtArgs>>
    ): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Foto_dokumen.
     * @param {foto_dokumenCreateManyArgs} args - Arguments to create many Foto_dokumen.
     * @example
     * // Create many Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends foto_dokumenCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, foto_dokumenCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Foto_dokumen and returns the data saved in the database.
     * @param {foto_dokumenCreateManyAndReturnArgs} args - Arguments to create many Foto_dokumen.
     * @example
     * // Create many Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Foto_dokumen and only return the `foto_dokumen_id`
     * const foto_dokumenWithFoto_dokumen_idOnly = await prisma.foto_dokumen.createManyAndReturn({ 
     *   select: { foto_dokumen_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends foto_dokumenCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, foto_dokumenCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Foto_dokumen.
     * @param {foto_dokumenDeleteArgs} args - Arguments to delete one Foto_dokumen.
     * @example
     * // Delete one Foto_dokumen
     * const Foto_dokumen = await prisma.foto_dokumen.delete({
     *   where: {
     *     // ... filter to delete one Foto_dokumen
     *   }
     * })
     * 
    **/
    delete<T extends foto_dokumenDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, foto_dokumenDeleteArgs<ExtArgs>>
    ): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Foto_dokumen.
     * @param {foto_dokumenUpdateArgs} args - Arguments to update one Foto_dokumen.
     * @example
     * // Update one Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends foto_dokumenUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, foto_dokumenUpdateArgs<ExtArgs>>
    ): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Foto_dokumen.
     * @param {foto_dokumenDeleteManyArgs} args - Arguments to filter Foto_dokumen to delete.
     * @example
     * // Delete a few Foto_dokumen
     * const { count } = await prisma.foto_dokumen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends foto_dokumenDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, foto_dokumenDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Foto_dokumen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_dokumenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends foto_dokumenUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, foto_dokumenUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Foto_dokumen.
     * @param {foto_dokumenUpsertArgs} args - Arguments to update or create a Foto_dokumen.
     * @example
     * // Update or create a Foto_dokumen
     * const foto_dokumen = await prisma.foto_dokumen.upsert({
     *   create: {
     *     // ... data to create a Foto_dokumen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Foto_dokumen we want to update
     *   }
     * })
    **/
    upsert<T extends foto_dokumenUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, foto_dokumenUpsertArgs<ExtArgs>>
    ): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Foto_dokumen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_dokumenCountArgs} args - Arguments to filter Foto_dokumen to count.
     * @example
     * // Count the number of Foto_dokumen
     * const count = await prisma.foto_dokumen.count({
     *   where: {
     *     // ... the filter for the Foto_dokumen we want to count
     *   }
     * })
    **/
    count<T extends foto_dokumenCountArgs>(
      args?: Subset<T, foto_dokumenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Foto_dokumenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Foto_dokumen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_dokumenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Foto_dokumenAggregateArgs>(args: Subset<T, Foto_dokumenAggregateArgs>): Prisma.PrismaPromise<GetFoto_dokumenAggregateType<T>>

    /**
     * Group by Foto_dokumen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {foto_dokumenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends foto_dokumenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: foto_dokumenGroupByArgs['orderBy'] }
        : { orderBy?: foto_dokumenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, foto_dokumenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFoto_dokumenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the foto_dokumen model
   */
  readonly fields: foto_dokumenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for foto_dokumen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__foto_dokumenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    kyc_level_1<T extends kyc_level_1DefaultArgs<ExtArgs> = {}>(args?: Subset<T, kyc_level_1DefaultArgs<ExtArgs>>): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the foto_dokumen model
   */ 
  interface foto_dokumenFieldRefs {
    readonly foto_dokumen_id: FieldRef<"foto_dokumen", 'String'>
    readonly foto_ktp_depan: FieldRef<"foto_dokumen", 'Bytes'>
    readonly foto_ktp_belakang: FieldRef<"foto_dokumen", 'Bytes'>
    readonly foto_selfie: FieldRef<"foto_dokumen", 'Bytes'>
    readonly kyc_level_1_id: FieldRef<"foto_dokumen", 'String'>
  }
    

  // Custom InputTypes
  /**
   * foto_dokumen findUnique
   */
  export type foto_dokumenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * Filter, which foto_dokumen to fetch.
     */
    where: foto_dokumenWhereUniqueInput
  }

  /**
   * foto_dokumen findUniqueOrThrow
   */
  export type foto_dokumenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * Filter, which foto_dokumen to fetch.
     */
    where: foto_dokumenWhereUniqueInput
  }

  /**
   * foto_dokumen findFirst
   */
  export type foto_dokumenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * Filter, which foto_dokumen to fetch.
     */
    where?: foto_dokumenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of foto_dokumen to fetch.
     */
    orderBy?: foto_dokumenOrderByWithRelationInput | foto_dokumenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for foto_dokumen.
     */
    cursor?: foto_dokumenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` foto_dokumen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` foto_dokumen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of foto_dokumen.
     */
    distinct?: Foto_dokumenScalarFieldEnum | Foto_dokumenScalarFieldEnum[]
  }

  /**
   * foto_dokumen findFirstOrThrow
   */
  export type foto_dokumenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * Filter, which foto_dokumen to fetch.
     */
    where?: foto_dokumenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of foto_dokumen to fetch.
     */
    orderBy?: foto_dokumenOrderByWithRelationInput | foto_dokumenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for foto_dokumen.
     */
    cursor?: foto_dokumenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` foto_dokumen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` foto_dokumen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of foto_dokumen.
     */
    distinct?: Foto_dokumenScalarFieldEnum | Foto_dokumenScalarFieldEnum[]
  }

  /**
   * foto_dokumen findMany
   */
  export type foto_dokumenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * Filter, which foto_dokumen to fetch.
     */
    where?: foto_dokumenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of foto_dokumen to fetch.
     */
    orderBy?: foto_dokumenOrderByWithRelationInput | foto_dokumenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing foto_dokumen.
     */
    cursor?: foto_dokumenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` foto_dokumen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` foto_dokumen.
     */
    skip?: number
    distinct?: Foto_dokumenScalarFieldEnum | Foto_dokumenScalarFieldEnum[]
  }

  /**
   * foto_dokumen create
   */
  export type foto_dokumenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * The data needed to create a foto_dokumen.
     */
    data: XOR<foto_dokumenCreateInput, foto_dokumenUncheckedCreateInput>
  }

  /**
   * foto_dokumen createMany
   */
  export type foto_dokumenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many foto_dokumen.
     */
    data: foto_dokumenCreateManyInput | foto_dokumenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * foto_dokumen createManyAndReturn
   */
  export type foto_dokumenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * The data used to create many foto_dokumen.
     */
    data: foto_dokumenCreateManyInput | foto_dokumenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * foto_dokumen update
   */
  export type foto_dokumenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * The data needed to update a foto_dokumen.
     */
    data: XOR<foto_dokumenUpdateInput, foto_dokumenUncheckedUpdateInput>
    /**
     * Choose, which foto_dokumen to update.
     */
    where: foto_dokumenWhereUniqueInput
  }

  /**
   * foto_dokumen updateMany
   */
  export type foto_dokumenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update foto_dokumen.
     */
    data: XOR<foto_dokumenUpdateManyMutationInput, foto_dokumenUncheckedUpdateManyInput>
    /**
     * Filter which foto_dokumen to update
     */
    where?: foto_dokumenWhereInput
  }

  /**
   * foto_dokumen upsert
   */
  export type foto_dokumenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * The filter to search for the foto_dokumen to update in case it exists.
     */
    where: foto_dokumenWhereUniqueInput
    /**
     * In case the foto_dokumen found by the `where` argument doesn't exist, create a new foto_dokumen with this data.
     */
    create: XOR<foto_dokumenCreateInput, foto_dokumenUncheckedCreateInput>
    /**
     * In case the foto_dokumen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<foto_dokumenUpdateInput, foto_dokumenUncheckedUpdateInput>
  }

  /**
   * foto_dokumen delete
   */
  export type foto_dokumenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    /**
     * Filter which foto_dokumen to delete.
     */
    where: foto_dokumenWhereUniqueInput
  }

  /**
   * foto_dokumen deleteMany
   */
  export type foto_dokumenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which foto_dokumen to delete
     */
    where?: foto_dokumenWhereInput
  }

  /**
   * foto_dokumen without action
   */
  export type foto_dokumenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
  }


  /**
   * Model highlight_product
   */

  export type AggregateHighlight_product = {
    _count: Highlight_productCountAggregateOutputType | null
    _avg: Highlight_productAvgAggregateOutputType | null
    _sum: Highlight_productSumAggregateOutputType | null
    _min: Highlight_productMinAggregateOutputType | null
    _max: Highlight_productMaxAggregateOutputType | null
  }

  export type Highlight_productAvgAggregateOutputType = {
    highlight_product_id: number | null
  }

  export type Highlight_productSumAggregateOutputType = {
    highlight_product_id: number | null
  }

  export type Highlight_productMinAggregateOutputType = {
    highlight_product_id: number | null
    crowdfunding_id: string | null
    highlight: string | null
  }

  export type Highlight_productMaxAggregateOutputType = {
    highlight_product_id: number | null
    crowdfunding_id: string | null
    highlight: string | null
  }

  export type Highlight_productCountAggregateOutputType = {
    highlight_product_id: number
    crowdfunding_id: number
    highlight: number
    _all: number
  }


  export type Highlight_productAvgAggregateInputType = {
    highlight_product_id?: true
  }

  export type Highlight_productSumAggregateInputType = {
    highlight_product_id?: true
  }

  export type Highlight_productMinAggregateInputType = {
    highlight_product_id?: true
    crowdfunding_id?: true
    highlight?: true
  }

  export type Highlight_productMaxAggregateInputType = {
    highlight_product_id?: true
    crowdfunding_id?: true
    highlight?: true
  }

  export type Highlight_productCountAggregateInputType = {
    highlight_product_id?: true
    crowdfunding_id?: true
    highlight?: true
    _all?: true
  }

  export type Highlight_productAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which highlight_product to aggregate.
     */
    where?: highlight_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of highlight_products to fetch.
     */
    orderBy?: highlight_productOrderByWithRelationInput | highlight_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: highlight_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` highlight_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` highlight_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned highlight_products
    **/
    _count?: true | Highlight_productCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Highlight_productAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Highlight_productSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Highlight_productMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Highlight_productMaxAggregateInputType
  }

  export type GetHighlight_productAggregateType<T extends Highlight_productAggregateArgs> = {
        [P in keyof T & keyof AggregateHighlight_product]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHighlight_product[P]>
      : GetScalarType<T[P], AggregateHighlight_product[P]>
  }




  export type highlight_productGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: highlight_productWhereInput
    orderBy?: highlight_productOrderByWithAggregationInput | highlight_productOrderByWithAggregationInput[]
    by: Highlight_productScalarFieldEnum[] | Highlight_productScalarFieldEnum
    having?: highlight_productScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Highlight_productCountAggregateInputType | true
    _avg?: Highlight_productAvgAggregateInputType
    _sum?: Highlight_productSumAggregateInputType
    _min?: Highlight_productMinAggregateInputType
    _max?: Highlight_productMaxAggregateInputType
  }

  export type Highlight_productGroupByOutputType = {
    highlight_product_id: number
    crowdfunding_id: string
    highlight: string | null
    _count: Highlight_productCountAggregateOutputType | null
    _avg: Highlight_productAvgAggregateOutputType | null
    _sum: Highlight_productSumAggregateOutputType | null
    _min: Highlight_productMinAggregateOutputType | null
    _max: Highlight_productMaxAggregateOutputType | null
  }

  type GetHighlight_productGroupByPayload<T extends highlight_productGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Highlight_productGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Highlight_productGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Highlight_productGroupByOutputType[P]>
            : GetScalarType<T[P], Highlight_productGroupByOutputType[P]>
        }
      >
    >


  export type highlight_productSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    highlight_product_id?: boolean
    crowdfunding_id?: boolean
    highlight?: boolean
    crowdfunding?: boolean | crowdfundingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["highlight_product"]>

  export type highlight_productSelectScalar = {
    highlight_product_id?: boolean
    crowdfunding_id?: boolean
    highlight?: boolean
  }


  export type highlight_productInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    crowdfunding?: boolean | crowdfundingDefaultArgs<ExtArgs>
  }


  export type $highlight_productPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "highlight_product"
    objects: {
      crowdfunding: Prisma.$crowdfundingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      highlight_product_id: number
      crowdfunding_id: string
      highlight: string | null
    }, ExtArgs["result"]["highlight_product"]>
    composites: {}
  }


  type highlight_productGetPayload<S extends boolean | null | undefined | highlight_productDefaultArgs> = $Result.GetResult<Prisma.$highlight_productPayload, S>

  type highlight_productCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<highlight_productFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Highlight_productCountAggregateInputType | true
    }

  export interface highlight_productDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['highlight_product'], meta: { name: 'highlight_product' } }
    /**
     * Find zero or one Highlight_product that matches the filter.
     * @param {highlight_productFindUniqueArgs} args - Arguments to find a Highlight_product
     * @example
     * // Get one Highlight_product
     * const highlight_product = await prisma.highlight_product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends highlight_productFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, highlight_productFindUniqueArgs<ExtArgs>>
    ): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Highlight_product that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {highlight_productFindUniqueOrThrowArgs} args - Arguments to find a Highlight_product
     * @example
     * // Get one Highlight_product
     * const highlight_product = await prisma.highlight_product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends highlight_productFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, highlight_productFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Highlight_product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highlight_productFindFirstArgs} args - Arguments to find a Highlight_product
     * @example
     * // Get one Highlight_product
     * const highlight_product = await prisma.highlight_product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends highlight_productFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, highlight_productFindFirstArgs<ExtArgs>>
    ): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Highlight_product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highlight_productFindFirstOrThrowArgs} args - Arguments to find a Highlight_product
     * @example
     * // Get one Highlight_product
     * const highlight_product = await prisma.highlight_product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends highlight_productFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, highlight_productFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Highlight_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highlight_productFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Highlight_products
     * const highlight_products = await prisma.highlight_product.findMany()
     * 
     * // Get first 10 Highlight_products
     * const highlight_products = await prisma.highlight_product.findMany({ take: 10 })
     * 
     * // Only select the `highlight_product_id`
     * const highlight_productWithHighlight_product_idOnly = await prisma.highlight_product.findMany({ select: { highlight_product_id: true } })
     * 
    **/
    findMany<T extends highlight_productFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, highlight_productFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Highlight_product.
     * @param {highlight_productCreateArgs} args - Arguments to create a Highlight_product.
     * @example
     * // Create one Highlight_product
     * const Highlight_product = await prisma.highlight_product.create({
     *   data: {
     *     // ... data to create a Highlight_product
     *   }
     * })
     * 
    **/
    create<T extends highlight_productCreateArgs<ExtArgs>>(
      args: SelectSubset<T, highlight_productCreateArgs<ExtArgs>>
    ): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Highlight_products.
     * @param {highlight_productCreateManyArgs} args - Arguments to create many Highlight_products.
     * @example
     * // Create many Highlight_products
     * const highlight_product = await prisma.highlight_product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends highlight_productCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, highlight_productCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Highlight_products and returns the data saved in the database.
     * @param {highlight_productCreateManyAndReturnArgs} args - Arguments to create many Highlight_products.
     * @example
     * // Create many Highlight_products
     * const highlight_product = await prisma.highlight_product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Highlight_products and only return the `highlight_product_id`
     * const highlight_productWithHighlight_product_idOnly = await prisma.highlight_product.createManyAndReturn({ 
     *   select: { highlight_product_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends highlight_productCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, highlight_productCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Highlight_product.
     * @param {highlight_productDeleteArgs} args - Arguments to delete one Highlight_product.
     * @example
     * // Delete one Highlight_product
     * const Highlight_product = await prisma.highlight_product.delete({
     *   where: {
     *     // ... filter to delete one Highlight_product
     *   }
     * })
     * 
    **/
    delete<T extends highlight_productDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, highlight_productDeleteArgs<ExtArgs>>
    ): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Highlight_product.
     * @param {highlight_productUpdateArgs} args - Arguments to update one Highlight_product.
     * @example
     * // Update one Highlight_product
     * const highlight_product = await prisma.highlight_product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends highlight_productUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, highlight_productUpdateArgs<ExtArgs>>
    ): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Highlight_products.
     * @param {highlight_productDeleteManyArgs} args - Arguments to filter Highlight_products to delete.
     * @example
     * // Delete a few Highlight_products
     * const { count } = await prisma.highlight_product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends highlight_productDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, highlight_productDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Highlight_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highlight_productUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Highlight_products
     * const highlight_product = await prisma.highlight_product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends highlight_productUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, highlight_productUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Highlight_product.
     * @param {highlight_productUpsertArgs} args - Arguments to update or create a Highlight_product.
     * @example
     * // Update or create a Highlight_product
     * const highlight_product = await prisma.highlight_product.upsert({
     *   create: {
     *     // ... data to create a Highlight_product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Highlight_product we want to update
     *   }
     * })
    **/
    upsert<T extends highlight_productUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, highlight_productUpsertArgs<ExtArgs>>
    ): Prisma__highlight_productClient<$Result.GetResult<Prisma.$highlight_productPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Highlight_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highlight_productCountArgs} args - Arguments to filter Highlight_products to count.
     * @example
     * // Count the number of Highlight_products
     * const count = await prisma.highlight_product.count({
     *   where: {
     *     // ... the filter for the Highlight_products we want to count
     *   }
     * })
    **/
    count<T extends highlight_productCountArgs>(
      args?: Subset<T, highlight_productCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Highlight_productCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Highlight_product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Highlight_productAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Highlight_productAggregateArgs>(args: Subset<T, Highlight_productAggregateArgs>): Prisma.PrismaPromise<GetHighlight_productAggregateType<T>>

    /**
     * Group by Highlight_product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highlight_productGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends highlight_productGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: highlight_productGroupByArgs['orderBy'] }
        : { orderBy?: highlight_productGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, highlight_productGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHighlight_productGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the highlight_product model
   */
  readonly fields: highlight_productFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for highlight_product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__highlight_productClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    crowdfunding<T extends crowdfundingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, crowdfundingDefaultArgs<ExtArgs>>): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the highlight_product model
   */ 
  interface highlight_productFieldRefs {
    readonly highlight_product_id: FieldRef<"highlight_product", 'Int'>
    readonly crowdfunding_id: FieldRef<"highlight_product", 'String'>
    readonly highlight: FieldRef<"highlight_product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * highlight_product findUnique
   */
  export type highlight_productFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * Filter, which highlight_product to fetch.
     */
    where: highlight_productWhereUniqueInput
  }

  /**
   * highlight_product findUniqueOrThrow
   */
  export type highlight_productFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * Filter, which highlight_product to fetch.
     */
    where: highlight_productWhereUniqueInput
  }

  /**
   * highlight_product findFirst
   */
  export type highlight_productFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * Filter, which highlight_product to fetch.
     */
    where?: highlight_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of highlight_products to fetch.
     */
    orderBy?: highlight_productOrderByWithRelationInput | highlight_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for highlight_products.
     */
    cursor?: highlight_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` highlight_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` highlight_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of highlight_products.
     */
    distinct?: Highlight_productScalarFieldEnum | Highlight_productScalarFieldEnum[]
  }

  /**
   * highlight_product findFirstOrThrow
   */
  export type highlight_productFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * Filter, which highlight_product to fetch.
     */
    where?: highlight_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of highlight_products to fetch.
     */
    orderBy?: highlight_productOrderByWithRelationInput | highlight_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for highlight_products.
     */
    cursor?: highlight_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` highlight_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` highlight_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of highlight_products.
     */
    distinct?: Highlight_productScalarFieldEnum | Highlight_productScalarFieldEnum[]
  }

  /**
   * highlight_product findMany
   */
  export type highlight_productFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * Filter, which highlight_products to fetch.
     */
    where?: highlight_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of highlight_products to fetch.
     */
    orderBy?: highlight_productOrderByWithRelationInput | highlight_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing highlight_products.
     */
    cursor?: highlight_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` highlight_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` highlight_products.
     */
    skip?: number
    distinct?: Highlight_productScalarFieldEnum | Highlight_productScalarFieldEnum[]
  }

  /**
   * highlight_product create
   */
  export type highlight_productCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * The data needed to create a highlight_product.
     */
    data: XOR<highlight_productCreateInput, highlight_productUncheckedCreateInput>
  }

  /**
   * highlight_product createMany
   */
  export type highlight_productCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many highlight_products.
     */
    data: highlight_productCreateManyInput | highlight_productCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * highlight_product createManyAndReturn
   */
  export type highlight_productCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * The data used to create many highlight_products.
     */
    data: highlight_productCreateManyInput | highlight_productCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * highlight_product update
   */
  export type highlight_productUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * The data needed to update a highlight_product.
     */
    data: XOR<highlight_productUpdateInput, highlight_productUncheckedUpdateInput>
    /**
     * Choose, which highlight_product to update.
     */
    where: highlight_productWhereUniqueInput
  }

  /**
   * highlight_product updateMany
   */
  export type highlight_productUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update highlight_products.
     */
    data: XOR<highlight_productUpdateManyMutationInput, highlight_productUncheckedUpdateManyInput>
    /**
     * Filter which highlight_products to update
     */
    where?: highlight_productWhereInput
  }

  /**
   * highlight_product upsert
   */
  export type highlight_productUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * The filter to search for the highlight_product to update in case it exists.
     */
    where: highlight_productWhereUniqueInput
    /**
     * In case the highlight_product found by the `where` argument doesn't exist, create a new highlight_product with this data.
     */
    create: XOR<highlight_productCreateInput, highlight_productUncheckedCreateInput>
    /**
     * In case the highlight_product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<highlight_productUpdateInput, highlight_productUncheckedUpdateInput>
  }

  /**
   * highlight_product delete
   */
  export type highlight_productDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
    /**
     * Filter which highlight_product to delete.
     */
    where: highlight_productWhereUniqueInput
  }

  /**
   * highlight_product deleteMany
   */
  export type highlight_productDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which highlight_products to delete
     */
    where?: highlight_productWhereInput
  }

  /**
   * highlight_product without action
   */
  export type highlight_productDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highlight_product
     */
    select?: highlight_productSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highlight_productInclude<ExtArgs> | null
  }


  /**
   * Model investment
   */

  export type AggregateInvestment = {
    _count: InvestmentCountAggregateOutputType | null
    _avg: InvestmentAvgAggregateOutputType | null
    _sum: InvestmentSumAggregateOutputType | null
    _min: InvestmentMinAggregateOutputType | null
    _max: InvestmentMaxAggregateOutputType | null
  }

  export type InvestmentAvgAggregateOutputType = {
    amount: number | null
  }

  export type InvestmentSumAggregateOutputType = {
    amount: bigint | null
  }

  export type InvestmentMinAggregateOutputType = {
    investment_id: string | null
    campaign_id: string | null
    user_id: string | null
    amount: bigint | null
    investment_date: Date | null
  }

  export type InvestmentMaxAggregateOutputType = {
    investment_id: string | null
    campaign_id: string | null
    user_id: string | null
    amount: bigint | null
    investment_date: Date | null
  }

  export type InvestmentCountAggregateOutputType = {
    investment_id: number
    campaign_id: number
    user_id: number
    amount: number
    investment_date: number
    _all: number
  }


  export type InvestmentAvgAggregateInputType = {
    amount?: true
  }

  export type InvestmentSumAggregateInputType = {
    amount?: true
  }

  export type InvestmentMinAggregateInputType = {
    investment_id?: true
    campaign_id?: true
    user_id?: true
    amount?: true
    investment_date?: true
  }

  export type InvestmentMaxAggregateInputType = {
    investment_id?: true
    campaign_id?: true
    user_id?: true
    amount?: true
    investment_date?: true
  }

  export type InvestmentCountAggregateInputType = {
    investment_id?: true
    campaign_id?: true
    user_id?: true
    amount?: true
    investment_date?: true
    _all?: true
  }

  export type InvestmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which investment to aggregate.
     */
    where?: investmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of investments to fetch.
     */
    orderBy?: investmentOrderByWithRelationInput | investmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: investmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` investments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` investments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned investments
    **/
    _count?: true | InvestmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvestmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvestmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvestmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvestmentMaxAggregateInputType
  }

  export type GetInvestmentAggregateType<T extends InvestmentAggregateArgs> = {
        [P in keyof T & keyof AggregateInvestment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvestment[P]>
      : GetScalarType<T[P], AggregateInvestment[P]>
  }




  export type investmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: investmentWhereInput
    orderBy?: investmentOrderByWithAggregationInput | investmentOrderByWithAggregationInput[]
    by: InvestmentScalarFieldEnum[] | InvestmentScalarFieldEnum
    having?: investmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvestmentCountAggregateInputType | true
    _avg?: InvestmentAvgAggregateInputType
    _sum?: InvestmentSumAggregateInputType
    _min?: InvestmentMinAggregateInputType
    _max?: InvestmentMaxAggregateInputType
  }

  export type InvestmentGroupByOutputType = {
    investment_id: string
    campaign_id: string
    user_id: string
    amount: bigint
    investment_date: Date
    _count: InvestmentCountAggregateOutputType | null
    _avg: InvestmentAvgAggregateOutputType | null
    _sum: InvestmentSumAggregateOutputType | null
    _min: InvestmentMinAggregateOutputType | null
    _max: InvestmentMaxAggregateOutputType | null
  }

  type GetInvestmentGroupByPayload<T extends investmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvestmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvestmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvestmentGroupByOutputType[P]>
            : GetScalarType<T[P], InvestmentGroupByOutputType[P]>
        }
      >
    >


  export type investmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    investment_id?: boolean
    campaign_id?: boolean
    user_id?: boolean
    amount?: boolean
    investment_date?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["investment"]>

  export type investmentSelectScalar = {
    investment_id?: boolean
    campaign_id?: boolean
    user_id?: boolean
    amount?: boolean
    investment_date?: boolean
  }


  export type investmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $investmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "investment"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      investment_id: string
      campaign_id: string
      user_id: string
      amount: bigint
      investment_date: Date
    }, ExtArgs["result"]["investment"]>
    composites: {}
  }


  type investmentGetPayload<S extends boolean | null | undefined | investmentDefaultArgs> = $Result.GetResult<Prisma.$investmentPayload, S>

  type investmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<investmentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InvestmentCountAggregateInputType | true
    }

  export interface investmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['investment'], meta: { name: 'investment' } }
    /**
     * Find zero or one Investment that matches the filter.
     * @param {investmentFindUniqueArgs} args - Arguments to find a Investment
     * @example
     * // Get one Investment
     * const investment = await prisma.investment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends investmentFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, investmentFindUniqueArgs<ExtArgs>>
    ): Prisma__investmentClient<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Investment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {investmentFindUniqueOrThrowArgs} args - Arguments to find a Investment
     * @example
     * // Get one Investment
     * const investment = await prisma.investment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends investmentFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, investmentFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__investmentClient<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Investment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {investmentFindFirstArgs} args - Arguments to find a Investment
     * @example
     * // Get one Investment
     * const investment = await prisma.investment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends investmentFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, investmentFindFirstArgs<ExtArgs>>
    ): Prisma__investmentClient<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Investment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {investmentFindFirstOrThrowArgs} args - Arguments to find a Investment
     * @example
     * // Get one Investment
     * const investment = await prisma.investment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends investmentFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, investmentFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__investmentClient<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Investments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {investmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Investments
     * const investments = await prisma.investment.findMany()
     * 
     * // Get first 10 Investments
     * const investments = await prisma.investment.findMany({ take: 10 })
     * 
     * // Only select the `investment_id`
     * const investmentWithInvestment_idOnly = await prisma.investment.findMany({ select: { investment_id: true } })
     * 
    **/
    findMany<T extends investmentFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, investmentFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Investment.
     * @param {investmentCreateArgs} args - Arguments to create a Investment.
     * @example
     * // Create one Investment
     * const Investment = await prisma.investment.create({
     *   data: {
     *     // ... data to create a Investment
     *   }
     * })
     * 
    **/
    create<T extends investmentCreateArgs<ExtArgs>>(
      args: SelectSubset<T, investmentCreateArgs<ExtArgs>>
    ): Prisma__investmentClient<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Investments.
     * @param {investmentCreateManyArgs} args - Arguments to create many Investments.
     * @example
     * // Create many Investments
     * const investment = await prisma.investment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends investmentCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, investmentCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Investments and returns the data saved in the database.
     * @param {investmentCreateManyAndReturnArgs} args - Arguments to create many Investments.
     * @example
     * // Create many Investments
     * const investment = await prisma.investment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Investments and only return the `investment_id`
     * const investmentWithInvestment_idOnly = await prisma.investment.createManyAndReturn({ 
     *   select: { investment_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends investmentCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, investmentCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Investment.
     * @param {investmentDeleteArgs} args - Arguments to delete one Investment.
     * @example
     * // Delete one Investment
     * const Investment = await prisma.investment.delete({
     *   where: {
     *     // ... filter to delete one Investment
     *   }
     * })
     * 
    **/
    delete<T extends investmentDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, investmentDeleteArgs<ExtArgs>>
    ): Prisma__investmentClient<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Investment.
     * @param {investmentUpdateArgs} args - Arguments to update one Investment.
     * @example
     * // Update one Investment
     * const investment = await prisma.investment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends investmentUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, investmentUpdateArgs<ExtArgs>>
    ): Prisma__investmentClient<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Investments.
     * @param {investmentDeleteManyArgs} args - Arguments to filter Investments to delete.
     * @example
     * // Delete a few Investments
     * const { count } = await prisma.investment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends investmentDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, investmentDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Investments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {investmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Investments
     * const investment = await prisma.investment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends investmentUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, investmentUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Investment.
     * @param {investmentUpsertArgs} args - Arguments to update or create a Investment.
     * @example
     * // Update or create a Investment
     * const investment = await prisma.investment.upsert({
     *   create: {
     *     // ... data to create a Investment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Investment we want to update
     *   }
     * })
    **/
    upsert<T extends investmentUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, investmentUpsertArgs<ExtArgs>>
    ): Prisma__investmentClient<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Investments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {investmentCountArgs} args - Arguments to filter Investments to count.
     * @example
     * // Count the number of Investments
     * const count = await prisma.investment.count({
     *   where: {
     *     // ... the filter for the Investments we want to count
     *   }
     * })
    **/
    count<T extends investmentCountArgs>(
      args?: Subset<T, investmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvestmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Investment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvestmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvestmentAggregateArgs>(args: Subset<T, InvestmentAggregateArgs>): Prisma.PrismaPromise<GetInvestmentAggregateType<T>>

    /**
     * Group by Investment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {investmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends investmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: investmentGroupByArgs['orderBy'] }
        : { orderBy?: investmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, investmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvestmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the investment model
   */
  readonly fields: investmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for investment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__investmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the investment model
   */ 
  interface investmentFieldRefs {
    readonly investment_id: FieldRef<"investment", 'String'>
    readonly campaign_id: FieldRef<"investment", 'String'>
    readonly user_id: FieldRef<"investment", 'String'>
    readonly amount: FieldRef<"investment", 'BigInt'>
    readonly investment_date: FieldRef<"investment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * investment findUnique
   */
  export type investmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * Filter, which investment to fetch.
     */
    where: investmentWhereUniqueInput
  }

  /**
   * investment findUniqueOrThrow
   */
  export type investmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * Filter, which investment to fetch.
     */
    where: investmentWhereUniqueInput
  }

  /**
   * investment findFirst
   */
  export type investmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * Filter, which investment to fetch.
     */
    where?: investmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of investments to fetch.
     */
    orderBy?: investmentOrderByWithRelationInput | investmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for investments.
     */
    cursor?: investmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` investments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` investments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of investments.
     */
    distinct?: InvestmentScalarFieldEnum | InvestmentScalarFieldEnum[]
  }

  /**
   * investment findFirstOrThrow
   */
  export type investmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * Filter, which investment to fetch.
     */
    where?: investmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of investments to fetch.
     */
    orderBy?: investmentOrderByWithRelationInput | investmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for investments.
     */
    cursor?: investmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` investments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` investments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of investments.
     */
    distinct?: InvestmentScalarFieldEnum | InvestmentScalarFieldEnum[]
  }

  /**
   * investment findMany
   */
  export type investmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * Filter, which investments to fetch.
     */
    where?: investmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of investments to fetch.
     */
    orderBy?: investmentOrderByWithRelationInput | investmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing investments.
     */
    cursor?: investmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` investments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` investments.
     */
    skip?: number
    distinct?: InvestmentScalarFieldEnum | InvestmentScalarFieldEnum[]
  }

  /**
   * investment create
   */
  export type investmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * The data needed to create a investment.
     */
    data: XOR<investmentCreateInput, investmentUncheckedCreateInput>
  }

  /**
   * investment createMany
   */
  export type investmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many investments.
     */
    data: investmentCreateManyInput | investmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * investment createManyAndReturn
   */
  export type investmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * The data used to create many investments.
     */
    data: investmentCreateManyInput | investmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * investment update
   */
  export type investmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * The data needed to update a investment.
     */
    data: XOR<investmentUpdateInput, investmentUncheckedUpdateInput>
    /**
     * Choose, which investment to update.
     */
    where: investmentWhereUniqueInput
  }

  /**
   * investment updateMany
   */
  export type investmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update investments.
     */
    data: XOR<investmentUpdateManyMutationInput, investmentUncheckedUpdateManyInput>
    /**
     * Filter which investments to update
     */
    where?: investmentWhereInput
  }

  /**
   * investment upsert
   */
  export type investmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * The filter to search for the investment to update in case it exists.
     */
    where: investmentWhereUniqueInput
    /**
     * In case the investment found by the `where` argument doesn't exist, create a new investment with this data.
     */
    create: XOR<investmentCreateInput, investmentUncheckedCreateInput>
    /**
     * In case the investment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<investmentUpdateInput, investmentUncheckedUpdateInput>
  }

  /**
   * investment delete
   */
  export type investmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    /**
     * Filter which investment to delete.
     */
    where: investmentWhereUniqueInput
  }

  /**
   * investment deleteMany
   */
  export type investmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which investments to delete
     */
    where?: investmentWhereInput
  }

  /**
   * investment without action
   */
  export type investmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
  }


  /**
   * Model kyc_level_1
   */

  export type AggregateKyc_level_1 = {
    _count: Kyc_level_1CountAggregateOutputType | null
    _min: Kyc_level_1MinAggregateOutputType | null
    _max: Kyc_level_1MaxAggregateOutputType | null
  }

  export type Kyc_level_1MinAggregateOutputType = {
    kyc_level_1_id: string | null
    user_id: string | null
    full_name: string | null
    nik: string | null
    tanggal_lahir: Date | null
    status: $Enums.kyc_status_enum | null
    createdAt: Date | null
    updatedAt: Date | null
    statusUpdate: string | null
    jenis_kelamin: string | null
    isaproved: boolean | null
  }

  export type Kyc_level_1MaxAggregateOutputType = {
    kyc_level_1_id: string | null
    user_id: string | null
    full_name: string | null
    nik: string | null
    tanggal_lahir: Date | null
    status: $Enums.kyc_status_enum | null
    createdAt: Date | null
    updatedAt: Date | null
    statusUpdate: string | null
    jenis_kelamin: string | null
    isaproved: boolean | null
  }

  export type Kyc_level_1CountAggregateOutputType = {
    kyc_level_1_id: number
    user_id: number
    full_name: number
    nik: number
    tanggal_lahir: number
    status: number
    createdAt: number
    updatedAt: number
    statusUpdate: number
    jenis_kelamin: number
    isaproved: number
    _all: number
  }


  export type Kyc_level_1MinAggregateInputType = {
    kyc_level_1_id?: true
    user_id?: true
    full_name?: true
    nik?: true
    tanggal_lahir?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    statusUpdate?: true
    jenis_kelamin?: true
    isaproved?: true
  }

  export type Kyc_level_1MaxAggregateInputType = {
    kyc_level_1_id?: true
    user_id?: true
    full_name?: true
    nik?: true
    tanggal_lahir?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    statusUpdate?: true
    jenis_kelamin?: true
    isaproved?: true
  }

  export type Kyc_level_1CountAggregateInputType = {
    kyc_level_1_id?: true
    user_id?: true
    full_name?: true
    nik?: true
    tanggal_lahir?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    statusUpdate?: true
    jenis_kelamin?: true
    isaproved?: true
    _all?: true
  }

  export type Kyc_level_1AggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kyc_level_1 to aggregate.
     */
    where?: kyc_level_1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kyc_level_1s to fetch.
     */
    orderBy?: kyc_level_1OrderByWithRelationInput | kyc_level_1OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: kyc_level_1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kyc_level_1s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kyc_level_1s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned kyc_level_1s
    **/
    _count?: true | Kyc_level_1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Kyc_level_1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Kyc_level_1MaxAggregateInputType
  }

  export type GetKyc_level_1AggregateType<T extends Kyc_level_1AggregateArgs> = {
        [P in keyof T & keyof AggregateKyc_level_1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKyc_level_1[P]>
      : GetScalarType<T[P], AggregateKyc_level_1[P]>
  }




  export type kyc_level_1GroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kyc_level_1WhereInput
    orderBy?: kyc_level_1OrderByWithAggregationInput | kyc_level_1OrderByWithAggregationInput[]
    by: Kyc_level_1ScalarFieldEnum[] | Kyc_level_1ScalarFieldEnum
    having?: kyc_level_1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Kyc_level_1CountAggregateInputType | true
    _min?: Kyc_level_1MinAggregateInputType
    _max?: Kyc_level_1MaxAggregateInputType
  }

  export type Kyc_level_1GroupByOutputType = {
    kyc_level_1_id: string
    user_id: string
    full_name: string
    nik: string
    tanggal_lahir: Date
    status: $Enums.kyc_status_enum
    createdAt: Date
    updatedAt: Date | null
    statusUpdate: string | null
    jenis_kelamin: string
    isaproved: boolean | null
    _count: Kyc_level_1CountAggregateOutputType | null
    _min: Kyc_level_1MinAggregateOutputType | null
    _max: Kyc_level_1MaxAggregateOutputType | null
  }

  type GetKyc_level_1GroupByPayload<T extends kyc_level_1GroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Kyc_level_1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Kyc_level_1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Kyc_level_1GroupByOutputType[P]>
            : GetScalarType<T[P], Kyc_level_1GroupByOutputType[P]>
        }
      >
    >


  export type kyc_level_1Select<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kyc_level_1_id?: boolean
    user_id?: boolean
    full_name?: boolean
    nik?: boolean
    tanggal_lahir?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    statusUpdate?: boolean
    jenis_kelamin?: boolean
    isaproved?: boolean
    address?: boolean | kyc_level_1$addressArgs<ExtArgs>
    foto_dokumen?: boolean | kyc_level_1$foto_dokumenArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kyc_level_1"]>

  export type kyc_level_1SelectScalar = {
    kyc_level_1_id?: boolean
    user_id?: boolean
    full_name?: boolean
    nik?: boolean
    tanggal_lahir?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    statusUpdate?: boolean
    jenis_kelamin?: boolean
    isaproved?: boolean
  }


  export type kyc_level_1Include<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    address?: boolean | kyc_level_1$addressArgs<ExtArgs>
    foto_dokumen?: boolean | kyc_level_1$foto_dokumenArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $kyc_level_1Payload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "kyc_level_1"
    objects: {
      address: Prisma.$addressPayload<ExtArgs> | null
      foto_dokumen: Prisma.$foto_dokumenPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      kyc_level_1_id: string
      user_id: string
      full_name: string
      nik: string
      tanggal_lahir: Date
      status: $Enums.kyc_status_enum
      createdAt: Date
      updatedAt: Date | null
      statusUpdate: string | null
      jenis_kelamin: string
      isaproved: boolean | null
    }, ExtArgs["result"]["kyc_level_1"]>
    composites: {}
  }


  type kyc_level_1GetPayload<S extends boolean | null | undefined | kyc_level_1DefaultArgs> = $Result.GetResult<Prisma.$kyc_level_1Payload, S>

  type kyc_level_1CountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<kyc_level_1FindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Kyc_level_1CountAggregateInputType | true
    }

  export interface kyc_level_1Delegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['kyc_level_1'], meta: { name: 'kyc_level_1' } }
    /**
     * Find zero or one Kyc_level_1 that matches the filter.
     * @param {kyc_level_1FindUniqueArgs} args - Arguments to find a Kyc_level_1
     * @example
     * // Get one Kyc_level_1
     * const kyc_level_1 = await prisma.kyc_level_1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends kyc_level_1FindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_1FindUniqueArgs<ExtArgs>>
    ): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Kyc_level_1 that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {kyc_level_1FindUniqueOrThrowArgs} args - Arguments to find a Kyc_level_1
     * @example
     * // Get one Kyc_level_1
     * const kyc_level_1 = await prisma.kyc_level_1.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends kyc_level_1FindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_1FindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Kyc_level_1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_1FindFirstArgs} args - Arguments to find a Kyc_level_1
     * @example
     * // Get one Kyc_level_1
     * const kyc_level_1 = await prisma.kyc_level_1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends kyc_level_1FindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_1FindFirstArgs<ExtArgs>>
    ): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Kyc_level_1 that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_1FindFirstOrThrowArgs} args - Arguments to find a Kyc_level_1
     * @example
     * // Get one Kyc_level_1
     * const kyc_level_1 = await prisma.kyc_level_1.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends kyc_level_1FindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_1FindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Kyc_level_1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_1FindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kyc_level_1s
     * const kyc_level_1s = await prisma.kyc_level_1.findMany()
     * 
     * // Get first 10 Kyc_level_1s
     * const kyc_level_1s = await prisma.kyc_level_1.findMany({ take: 10 })
     * 
     * // Only select the `kyc_level_1_id`
     * const kyc_level_1WithKyc_level_1_idOnly = await prisma.kyc_level_1.findMany({ select: { kyc_level_1_id: true } })
     * 
    **/
    findMany<T extends kyc_level_1FindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_1FindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Kyc_level_1.
     * @param {kyc_level_1CreateArgs} args - Arguments to create a Kyc_level_1.
     * @example
     * // Create one Kyc_level_1
     * const Kyc_level_1 = await prisma.kyc_level_1.create({
     *   data: {
     *     // ... data to create a Kyc_level_1
     *   }
     * })
     * 
    **/
    create<T extends kyc_level_1CreateArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_1CreateArgs<ExtArgs>>
    ): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Kyc_level_1s.
     * @param {kyc_level_1CreateManyArgs} args - Arguments to create many Kyc_level_1s.
     * @example
     * // Create many Kyc_level_1s
     * const kyc_level_1 = await prisma.kyc_level_1.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends kyc_level_1CreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_1CreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Kyc_level_1s and returns the data saved in the database.
     * @param {kyc_level_1CreateManyAndReturnArgs} args - Arguments to create many Kyc_level_1s.
     * @example
     * // Create many Kyc_level_1s
     * const kyc_level_1 = await prisma.kyc_level_1.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Kyc_level_1s and only return the `kyc_level_1_id`
     * const kyc_level_1WithKyc_level_1_idOnly = await prisma.kyc_level_1.createManyAndReturn({ 
     *   select: { kyc_level_1_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends kyc_level_1CreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_1CreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Kyc_level_1.
     * @param {kyc_level_1DeleteArgs} args - Arguments to delete one Kyc_level_1.
     * @example
     * // Delete one Kyc_level_1
     * const Kyc_level_1 = await prisma.kyc_level_1.delete({
     *   where: {
     *     // ... filter to delete one Kyc_level_1
     *   }
     * })
     * 
    **/
    delete<T extends kyc_level_1DeleteArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_1DeleteArgs<ExtArgs>>
    ): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Kyc_level_1.
     * @param {kyc_level_1UpdateArgs} args - Arguments to update one Kyc_level_1.
     * @example
     * // Update one Kyc_level_1
     * const kyc_level_1 = await prisma.kyc_level_1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends kyc_level_1UpdateArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_1UpdateArgs<ExtArgs>>
    ): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Kyc_level_1s.
     * @param {kyc_level_1DeleteManyArgs} args - Arguments to filter Kyc_level_1s to delete.
     * @example
     * // Delete a few Kyc_level_1s
     * const { count } = await prisma.kyc_level_1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends kyc_level_1DeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_1DeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kyc_level_1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kyc_level_1s
     * const kyc_level_1 = await prisma.kyc_level_1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends kyc_level_1UpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_1UpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kyc_level_1.
     * @param {kyc_level_1UpsertArgs} args - Arguments to update or create a Kyc_level_1.
     * @example
     * // Update or create a Kyc_level_1
     * const kyc_level_1 = await prisma.kyc_level_1.upsert({
     *   create: {
     *     // ... data to create a Kyc_level_1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kyc_level_1 we want to update
     *   }
     * })
    **/
    upsert<T extends kyc_level_1UpsertArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_1UpsertArgs<ExtArgs>>
    ): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Kyc_level_1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_1CountArgs} args - Arguments to filter Kyc_level_1s to count.
     * @example
     * // Count the number of Kyc_level_1s
     * const count = await prisma.kyc_level_1.count({
     *   where: {
     *     // ... the filter for the Kyc_level_1s we want to count
     *   }
     * })
    **/
    count<T extends kyc_level_1CountArgs>(
      args?: Subset<T, kyc_level_1CountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Kyc_level_1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kyc_level_1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kyc_level_1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Kyc_level_1AggregateArgs>(args: Subset<T, Kyc_level_1AggregateArgs>): Prisma.PrismaPromise<GetKyc_level_1AggregateType<T>>

    /**
     * Group by Kyc_level_1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends kyc_level_1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: kyc_level_1GroupByArgs['orderBy'] }
        : { orderBy?: kyc_level_1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, kyc_level_1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKyc_level_1GroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the kyc_level_1 model
   */
  readonly fields: kyc_level_1FieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for kyc_level_1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__kyc_level_1Client<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    address<T extends kyc_level_1$addressArgs<ExtArgs> = {}>(args?: Subset<T, kyc_level_1$addressArgs<ExtArgs>>): Prisma__addressClient<$Result.GetResult<Prisma.$addressPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    foto_dokumen<T extends kyc_level_1$foto_dokumenArgs<ExtArgs> = {}>(args?: Subset<T, kyc_level_1$foto_dokumenArgs<ExtArgs>>): Prisma__foto_dokumenClient<$Result.GetResult<Prisma.$foto_dokumenPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the kyc_level_1 model
   */ 
  interface kyc_level_1FieldRefs {
    readonly kyc_level_1_id: FieldRef<"kyc_level_1", 'String'>
    readonly user_id: FieldRef<"kyc_level_1", 'String'>
    readonly full_name: FieldRef<"kyc_level_1", 'String'>
    readonly nik: FieldRef<"kyc_level_1", 'String'>
    readonly tanggal_lahir: FieldRef<"kyc_level_1", 'DateTime'>
    readonly status: FieldRef<"kyc_level_1", 'kyc_status_enum'>
    readonly createdAt: FieldRef<"kyc_level_1", 'DateTime'>
    readonly updatedAt: FieldRef<"kyc_level_1", 'DateTime'>
    readonly statusUpdate: FieldRef<"kyc_level_1", 'String'>
    readonly jenis_kelamin: FieldRef<"kyc_level_1", 'String'>
    readonly isaproved: FieldRef<"kyc_level_1", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * kyc_level_1 findUnique
   */
  export type kyc_level_1FindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_1 to fetch.
     */
    where: kyc_level_1WhereUniqueInput
  }

  /**
   * kyc_level_1 findUniqueOrThrow
   */
  export type kyc_level_1FindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_1 to fetch.
     */
    where: kyc_level_1WhereUniqueInput
  }

  /**
   * kyc_level_1 findFirst
   */
  export type kyc_level_1FindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_1 to fetch.
     */
    where?: kyc_level_1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kyc_level_1s to fetch.
     */
    orderBy?: kyc_level_1OrderByWithRelationInput | kyc_level_1OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kyc_level_1s.
     */
    cursor?: kyc_level_1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kyc_level_1s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kyc_level_1s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kyc_level_1s.
     */
    distinct?: Kyc_level_1ScalarFieldEnum | Kyc_level_1ScalarFieldEnum[]
  }

  /**
   * kyc_level_1 findFirstOrThrow
   */
  export type kyc_level_1FindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_1 to fetch.
     */
    where?: kyc_level_1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kyc_level_1s to fetch.
     */
    orderBy?: kyc_level_1OrderByWithRelationInput | kyc_level_1OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kyc_level_1s.
     */
    cursor?: kyc_level_1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kyc_level_1s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kyc_level_1s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kyc_level_1s.
     */
    distinct?: Kyc_level_1ScalarFieldEnum | Kyc_level_1ScalarFieldEnum[]
  }

  /**
   * kyc_level_1 findMany
   */
  export type kyc_level_1FindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_1s to fetch.
     */
    where?: kyc_level_1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kyc_level_1s to fetch.
     */
    orderBy?: kyc_level_1OrderByWithRelationInput | kyc_level_1OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing kyc_level_1s.
     */
    cursor?: kyc_level_1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kyc_level_1s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kyc_level_1s.
     */
    skip?: number
    distinct?: Kyc_level_1ScalarFieldEnum | Kyc_level_1ScalarFieldEnum[]
  }

  /**
   * kyc_level_1 create
   */
  export type kyc_level_1CreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * The data needed to create a kyc_level_1.
     */
    data: XOR<kyc_level_1CreateInput, kyc_level_1UncheckedCreateInput>
  }

  /**
   * kyc_level_1 createMany
   */
  export type kyc_level_1CreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many kyc_level_1s.
     */
    data: kyc_level_1CreateManyInput | kyc_level_1CreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * kyc_level_1 createManyAndReturn
   */
  export type kyc_level_1CreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * The data used to create many kyc_level_1s.
     */
    data: kyc_level_1CreateManyInput | kyc_level_1CreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * kyc_level_1 update
   */
  export type kyc_level_1UpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * The data needed to update a kyc_level_1.
     */
    data: XOR<kyc_level_1UpdateInput, kyc_level_1UncheckedUpdateInput>
    /**
     * Choose, which kyc_level_1 to update.
     */
    where: kyc_level_1WhereUniqueInput
  }

  /**
   * kyc_level_1 updateMany
   */
  export type kyc_level_1UpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update kyc_level_1s.
     */
    data: XOR<kyc_level_1UpdateManyMutationInput, kyc_level_1UncheckedUpdateManyInput>
    /**
     * Filter which kyc_level_1s to update
     */
    where?: kyc_level_1WhereInput
  }

  /**
   * kyc_level_1 upsert
   */
  export type kyc_level_1UpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * The filter to search for the kyc_level_1 to update in case it exists.
     */
    where: kyc_level_1WhereUniqueInput
    /**
     * In case the kyc_level_1 found by the `where` argument doesn't exist, create a new kyc_level_1 with this data.
     */
    create: XOR<kyc_level_1CreateInput, kyc_level_1UncheckedCreateInput>
    /**
     * In case the kyc_level_1 was found with the provided `where` argument, update it with this data.
     */
    update: XOR<kyc_level_1UpdateInput, kyc_level_1UncheckedUpdateInput>
  }

  /**
   * kyc_level_1 delete
   */
  export type kyc_level_1DeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    /**
     * Filter which kyc_level_1 to delete.
     */
    where: kyc_level_1WhereUniqueInput
  }

  /**
   * kyc_level_1 deleteMany
   */
  export type kyc_level_1DeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kyc_level_1s to delete
     */
    where?: kyc_level_1WhereInput
  }

  /**
   * kyc_level_1.address
   */
  export type kyc_level_1$addressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the address
     */
    select?: addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressInclude<ExtArgs> | null
    where?: addressWhereInput
  }

  /**
   * kyc_level_1.foto_dokumen
   */
  export type kyc_level_1$foto_dokumenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the foto_dokumen
     */
    select?: foto_dokumenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: foto_dokumenInclude<ExtArgs> | null
    where?: foto_dokumenWhereInput
  }

  /**
   * kyc_level_1 without action
   */
  export type kyc_level_1DefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
  }


  /**
   * Model kyc_level_2
   */

  export type AggregateKyc_level_2 = {
    _count: Kyc_level_2CountAggregateOutputType | null
    _min: Kyc_level_2MinAggregateOutputType | null
    _max: Kyc_level_2MaxAggregateOutputType | null
  }

  export type Kyc_level_2MinAggregateOutputType = {
    kyc_level_2_id: string | null
    user_id: string | null
    surat_skck: Buffer | null
    surat_domisili: Buffer | null
    surat_keterangan_bank: Buffer | null
    status: $Enums.kyc_status_enum | null
    isApproved: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    updateStatus: string | null
  }

  export type Kyc_level_2MaxAggregateOutputType = {
    kyc_level_2_id: string | null
    user_id: string | null
    surat_skck: Buffer | null
    surat_domisili: Buffer | null
    surat_keterangan_bank: Buffer | null
    status: $Enums.kyc_status_enum | null
    isApproved: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    updateStatus: string | null
  }

  export type Kyc_level_2CountAggregateOutputType = {
    kyc_level_2_id: number
    user_id: number
    surat_skck: number
    surat_domisili: number
    surat_keterangan_bank: number
    status: number
    isApproved: number
    createdAt: number
    updatedAt: number
    updateStatus: number
    _all: number
  }


  export type Kyc_level_2MinAggregateInputType = {
    kyc_level_2_id?: true
    user_id?: true
    surat_skck?: true
    surat_domisili?: true
    surat_keterangan_bank?: true
    status?: true
    isApproved?: true
    createdAt?: true
    updatedAt?: true
    updateStatus?: true
  }

  export type Kyc_level_2MaxAggregateInputType = {
    kyc_level_2_id?: true
    user_id?: true
    surat_skck?: true
    surat_domisili?: true
    surat_keterangan_bank?: true
    status?: true
    isApproved?: true
    createdAt?: true
    updatedAt?: true
    updateStatus?: true
  }

  export type Kyc_level_2CountAggregateInputType = {
    kyc_level_2_id?: true
    user_id?: true
    surat_skck?: true
    surat_domisili?: true
    surat_keterangan_bank?: true
    status?: true
    isApproved?: true
    createdAt?: true
    updatedAt?: true
    updateStatus?: true
    _all?: true
  }

  export type Kyc_level_2AggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kyc_level_2 to aggregate.
     */
    where?: kyc_level_2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kyc_level_2s to fetch.
     */
    orderBy?: kyc_level_2OrderByWithRelationInput | kyc_level_2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: kyc_level_2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kyc_level_2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kyc_level_2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned kyc_level_2s
    **/
    _count?: true | Kyc_level_2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Kyc_level_2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Kyc_level_2MaxAggregateInputType
  }

  export type GetKyc_level_2AggregateType<T extends Kyc_level_2AggregateArgs> = {
        [P in keyof T & keyof AggregateKyc_level_2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKyc_level_2[P]>
      : GetScalarType<T[P], AggregateKyc_level_2[P]>
  }




  export type kyc_level_2GroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kyc_level_2WhereInput
    orderBy?: kyc_level_2OrderByWithAggregationInput | kyc_level_2OrderByWithAggregationInput[]
    by: Kyc_level_2ScalarFieldEnum[] | Kyc_level_2ScalarFieldEnum
    having?: kyc_level_2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Kyc_level_2CountAggregateInputType | true
    _min?: Kyc_level_2MinAggregateInputType
    _max?: Kyc_level_2MaxAggregateInputType
  }

  export type Kyc_level_2GroupByOutputType = {
    kyc_level_2_id: string
    user_id: string
    surat_skck: Buffer
    surat_domisili: Buffer
    surat_keterangan_bank: Buffer
    status: $Enums.kyc_status_enum
    isApproved: boolean
    createdAt: Date
    updatedAt: Date | null
    updateStatus: string | null
    _count: Kyc_level_2CountAggregateOutputType | null
    _min: Kyc_level_2MinAggregateOutputType | null
    _max: Kyc_level_2MaxAggregateOutputType | null
  }

  type GetKyc_level_2GroupByPayload<T extends kyc_level_2GroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Kyc_level_2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Kyc_level_2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Kyc_level_2GroupByOutputType[P]>
            : GetScalarType<T[P], Kyc_level_2GroupByOutputType[P]>
        }
      >
    >


  export type kyc_level_2Select<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kyc_level_2_id?: boolean
    user_id?: boolean
    surat_skck?: boolean
    surat_domisili?: boolean
    surat_keterangan_bank?: boolean
    status?: boolean
    isApproved?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    updateStatus?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kyc_level_2"]>

  export type kyc_level_2SelectScalar = {
    kyc_level_2_id?: boolean
    user_id?: boolean
    surat_skck?: boolean
    surat_domisili?: boolean
    surat_keterangan_bank?: boolean
    status?: boolean
    isApproved?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    updateStatus?: boolean
  }


  export type kyc_level_2Include<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $kyc_level_2Payload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "kyc_level_2"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      kyc_level_2_id: string
      user_id: string
      surat_skck: Buffer
      surat_domisili: Buffer
      surat_keterangan_bank: Buffer
      status: $Enums.kyc_status_enum
      isApproved: boolean
      createdAt: Date
      updatedAt: Date | null
      updateStatus: string | null
    }, ExtArgs["result"]["kyc_level_2"]>
    composites: {}
  }


  type kyc_level_2GetPayload<S extends boolean | null | undefined | kyc_level_2DefaultArgs> = $Result.GetResult<Prisma.$kyc_level_2Payload, S>

  type kyc_level_2CountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<kyc_level_2FindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Kyc_level_2CountAggregateInputType | true
    }

  export interface kyc_level_2Delegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['kyc_level_2'], meta: { name: 'kyc_level_2' } }
    /**
     * Find zero or one Kyc_level_2 that matches the filter.
     * @param {kyc_level_2FindUniqueArgs} args - Arguments to find a Kyc_level_2
     * @example
     * // Get one Kyc_level_2
     * const kyc_level_2 = await prisma.kyc_level_2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends kyc_level_2FindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_2FindUniqueArgs<ExtArgs>>
    ): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Kyc_level_2 that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {kyc_level_2FindUniqueOrThrowArgs} args - Arguments to find a Kyc_level_2
     * @example
     * // Get one Kyc_level_2
     * const kyc_level_2 = await prisma.kyc_level_2.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends kyc_level_2FindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_2FindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Kyc_level_2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_2FindFirstArgs} args - Arguments to find a Kyc_level_2
     * @example
     * // Get one Kyc_level_2
     * const kyc_level_2 = await prisma.kyc_level_2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends kyc_level_2FindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_2FindFirstArgs<ExtArgs>>
    ): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Kyc_level_2 that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_2FindFirstOrThrowArgs} args - Arguments to find a Kyc_level_2
     * @example
     * // Get one Kyc_level_2
     * const kyc_level_2 = await prisma.kyc_level_2.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends kyc_level_2FindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_2FindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Kyc_level_2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_2FindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kyc_level_2s
     * const kyc_level_2s = await prisma.kyc_level_2.findMany()
     * 
     * // Get first 10 Kyc_level_2s
     * const kyc_level_2s = await prisma.kyc_level_2.findMany({ take: 10 })
     * 
     * // Only select the `kyc_level_2_id`
     * const kyc_level_2WithKyc_level_2_idOnly = await prisma.kyc_level_2.findMany({ select: { kyc_level_2_id: true } })
     * 
    **/
    findMany<T extends kyc_level_2FindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_2FindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Kyc_level_2.
     * @param {kyc_level_2CreateArgs} args - Arguments to create a Kyc_level_2.
     * @example
     * // Create one Kyc_level_2
     * const Kyc_level_2 = await prisma.kyc_level_2.create({
     *   data: {
     *     // ... data to create a Kyc_level_2
     *   }
     * })
     * 
    **/
    create<T extends kyc_level_2CreateArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_2CreateArgs<ExtArgs>>
    ): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Kyc_level_2s.
     * @param {kyc_level_2CreateManyArgs} args - Arguments to create many Kyc_level_2s.
     * @example
     * // Create many Kyc_level_2s
     * const kyc_level_2 = await prisma.kyc_level_2.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends kyc_level_2CreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_2CreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Kyc_level_2s and returns the data saved in the database.
     * @param {kyc_level_2CreateManyAndReturnArgs} args - Arguments to create many Kyc_level_2s.
     * @example
     * // Create many Kyc_level_2s
     * const kyc_level_2 = await prisma.kyc_level_2.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Kyc_level_2s and only return the `kyc_level_2_id`
     * const kyc_level_2WithKyc_level_2_idOnly = await prisma.kyc_level_2.createManyAndReturn({ 
     *   select: { kyc_level_2_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends kyc_level_2CreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_2CreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Kyc_level_2.
     * @param {kyc_level_2DeleteArgs} args - Arguments to delete one Kyc_level_2.
     * @example
     * // Delete one Kyc_level_2
     * const Kyc_level_2 = await prisma.kyc_level_2.delete({
     *   where: {
     *     // ... filter to delete one Kyc_level_2
     *   }
     * })
     * 
    **/
    delete<T extends kyc_level_2DeleteArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_2DeleteArgs<ExtArgs>>
    ): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Kyc_level_2.
     * @param {kyc_level_2UpdateArgs} args - Arguments to update one Kyc_level_2.
     * @example
     * // Update one Kyc_level_2
     * const kyc_level_2 = await prisma.kyc_level_2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends kyc_level_2UpdateArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_2UpdateArgs<ExtArgs>>
    ): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Kyc_level_2s.
     * @param {kyc_level_2DeleteManyArgs} args - Arguments to filter Kyc_level_2s to delete.
     * @example
     * // Delete a few Kyc_level_2s
     * const { count } = await prisma.kyc_level_2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends kyc_level_2DeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kyc_level_2DeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kyc_level_2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kyc_level_2s
     * const kyc_level_2 = await prisma.kyc_level_2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends kyc_level_2UpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_2UpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kyc_level_2.
     * @param {kyc_level_2UpsertArgs} args - Arguments to update or create a Kyc_level_2.
     * @example
     * // Update or create a Kyc_level_2
     * const kyc_level_2 = await prisma.kyc_level_2.upsert({
     *   create: {
     *     // ... data to create a Kyc_level_2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kyc_level_2 we want to update
     *   }
     * })
    **/
    upsert<T extends kyc_level_2UpsertArgs<ExtArgs>>(
      args: SelectSubset<T, kyc_level_2UpsertArgs<ExtArgs>>
    ): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Kyc_level_2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_2CountArgs} args - Arguments to filter Kyc_level_2s to count.
     * @example
     * // Count the number of Kyc_level_2s
     * const count = await prisma.kyc_level_2.count({
     *   where: {
     *     // ... the filter for the Kyc_level_2s we want to count
     *   }
     * })
    **/
    count<T extends kyc_level_2CountArgs>(
      args?: Subset<T, kyc_level_2CountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Kyc_level_2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kyc_level_2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kyc_level_2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Kyc_level_2AggregateArgs>(args: Subset<T, Kyc_level_2AggregateArgs>): Prisma.PrismaPromise<GetKyc_level_2AggregateType<T>>

    /**
     * Group by Kyc_level_2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kyc_level_2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends kyc_level_2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: kyc_level_2GroupByArgs['orderBy'] }
        : { orderBy?: kyc_level_2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, kyc_level_2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKyc_level_2GroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the kyc_level_2 model
   */
  readonly fields: kyc_level_2FieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for kyc_level_2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__kyc_level_2Client<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the kyc_level_2 model
   */ 
  interface kyc_level_2FieldRefs {
    readonly kyc_level_2_id: FieldRef<"kyc_level_2", 'String'>
    readonly user_id: FieldRef<"kyc_level_2", 'String'>
    readonly surat_skck: FieldRef<"kyc_level_2", 'Bytes'>
    readonly surat_domisili: FieldRef<"kyc_level_2", 'Bytes'>
    readonly surat_keterangan_bank: FieldRef<"kyc_level_2", 'Bytes'>
    readonly status: FieldRef<"kyc_level_2", 'kyc_status_enum'>
    readonly isApproved: FieldRef<"kyc_level_2", 'Boolean'>
    readonly createdAt: FieldRef<"kyc_level_2", 'DateTime'>
    readonly updatedAt: FieldRef<"kyc_level_2", 'DateTime'>
    readonly updateStatus: FieldRef<"kyc_level_2", 'String'>
  }
    

  // Custom InputTypes
  /**
   * kyc_level_2 findUnique
   */
  export type kyc_level_2FindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_2 to fetch.
     */
    where: kyc_level_2WhereUniqueInput
  }

  /**
   * kyc_level_2 findUniqueOrThrow
   */
  export type kyc_level_2FindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_2 to fetch.
     */
    where: kyc_level_2WhereUniqueInput
  }

  /**
   * kyc_level_2 findFirst
   */
  export type kyc_level_2FindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_2 to fetch.
     */
    where?: kyc_level_2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kyc_level_2s to fetch.
     */
    orderBy?: kyc_level_2OrderByWithRelationInput | kyc_level_2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kyc_level_2s.
     */
    cursor?: kyc_level_2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kyc_level_2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kyc_level_2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kyc_level_2s.
     */
    distinct?: Kyc_level_2ScalarFieldEnum | Kyc_level_2ScalarFieldEnum[]
  }

  /**
   * kyc_level_2 findFirstOrThrow
   */
  export type kyc_level_2FindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_2 to fetch.
     */
    where?: kyc_level_2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kyc_level_2s to fetch.
     */
    orderBy?: kyc_level_2OrderByWithRelationInput | kyc_level_2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kyc_level_2s.
     */
    cursor?: kyc_level_2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kyc_level_2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kyc_level_2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kyc_level_2s.
     */
    distinct?: Kyc_level_2ScalarFieldEnum | Kyc_level_2ScalarFieldEnum[]
  }

  /**
   * kyc_level_2 findMany
   */
  export type kyc_level_2FindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * Filter, which kyc_level_2s to fetch.
     */
    where?: kyc_level_2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kyc_level_2s to fetch.
     */
    orderBy?: kyc_level_2OrderByWithRelationInput | kyc_level_2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing kyc_level_2s.
     */
    cursor?: kyc_level_2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kyc_level_2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kyc_level_2s.
     */
    skip?: number
    distinct?: Kyc_level_2ScalarFieldEnum | Kyc_level_2ScalarFieldEnum[]
  }

  /**
   * kyc_level_2 create
   */
  export type kyc_level_2CreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * The data needed to create a kyc_level_2.
     */
    data: XOR<kyc_level_2CreateInput, kyc_level_2UncheckedCreateInput>
  }

  /**
   * kyc_level_2 createMany
   */
  export type kyc_level_2CreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many kyc_level_2s.
     */
    data: kyc_level_2CreateManyInput | kyc_level_2CreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * kyc_level_2 createManyAndReturn
   */
  export type kyc_level_2CreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * The data used to create many kyc_level_2s.
     */
    data: kyc_level_2CreateManyInput | kyc_level_2CreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * kyc_level_2 update
   */
  export type kyc_level_2UpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * The data needed to update a kyc_level_2.
     */
    data: XOR<kyc_level_2UpdateInput, kyc_level_2UncheckedUpdateInput>
    /**
     * Choose, which kyc_level_2 to update.
     */
    where: kyc_level_2WhereUniqueInput
  }

  /**
   * kyc_level_2 updateMany
   */
  export type kyc_level_2UpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update kyc_level_2s.
     */
    data: XOR<kyc_level_2UpdateManyMutationInput, kyc_level_2UncheckedUpdateManyInput>
    /**
     * Filter which kyc_level_2s to update
     */
    where?: kyc_level_2WhereInput
  }

  /**
   * kyc_level_2 upsert
   */
  export type kyc_level_2UpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * The filter to search for the kyc_level_2 to update in case it exists.
     */
    where: kyc_level_2WhereUniqueInput
    /**
     * In case the kyc_level_2 found by the `where` argument doesn't exist, create a new kyc_level_2 with this data.
     */
    create: XOR<kyc_level_2CreateInput, kyc_level_2UncheckedCreateInput>
    /**
     * In case the kyc_level_2 was found with the provided `where` argument, update it with this data.
     */
    update: XOR<kyc_level_2UpdateInput, kyc_level_2UncheckedUpdateInput>
  }

  /**
   * kyc_level_2 delete
   */
  export type kyc_level_2DeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    /**
     * Filter which kyc_level_2 to delete.
     */
    where: kyc_level_2WhereUniqueInput
  }

  /**
   * kyc_level_2 deleteMany
   */
  export type kyc_level_2DeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kyc_level_2s to delete
     */
    where?: kyc_level_2WhereInput
  }

  /**
   * kyc_level_2 without action
   */
  export type kyc_level_2DefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
  }


  /**
   * Model legalitas_usaha
   */

  export type AggregateLegalitas_usaha = {
    _count: Legalitas_usahaCountAggregateOutputType | null
    _min: Legalitas_usahaMinAggregateOutputType | null
    _max: Legalitas_usahaMaxAggregateOutputType | null
  }

  export type Legalitas_usahaMinAggregateOutputType = {
    legalitas_id: string | null
    campaign_id: string | null
    tanggal_dibentuk: Date | null
    pemilik: string | null
    nib: string | null
    nik_pic: string | null
    file_perizinan: Buffer | null
  }

  export type Legalitas_usahaMaxAggregateOutputType = {
    legalitas_id: string | null
    campaign_id: string | null
    tanggal_dibentuk: Date | null
    pemilik: string | null
    nib: string | null
    nik_pic: string | null
    file_perizinan: Buffer | null
  }

  export type Legalitas_usahaCountAggregateOutputType = {
    legalitas_id: number
    campaign_id: number
    tanggal_dibentuk: number
    pemilik: number
    nib: number
    nik_pic: number
    file_perizinan: number
    _all: number
  }


  export type Legalitas_usahaMinAggregateInputType = {
    legalitas_id?: true
    campaign_id?: true
    tanggal_dibentuk?: true
    pemilik?: true
    nib?: true
    nik_pic?: true
    file_perizinan?: true
  }

  export type Legalitas_usahaMaxAggregateInputType = {
    legalitas_id?: true
    campaign_id?: true
    tanggal_dibentuk?: true
    pemilik?: true
    nib?: true
    nik_pic?: true
    file_perizinan?: true
  }

  export type Legalitas_usahaCountAggregateInputType = {
    legalitas_id?: true
    campaign_id?: true
    tanggal_dibentuk?: true
    pemilik?: true
    nib?: true
    nik_pic?: true
    file_perizinan?: true
    _all?: true
  }

  export type Legalitas_usahaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which legalitas_usaha to aggregate.
     */
    where?: legalitas_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of legalitas_usahas to fetch.
     */
    orderBy?: legalitas_usahaOrderByWithRelationInput | legalitas_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: legalitas_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` legalitas_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` legalitas_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned legalitas_usahas
    **/
    _count?: true | Legalitas_usahaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Legalitas_usahaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Legalitas_usahaMaxAggregateInputType
  }

  export type GetLegalitas_usahaAggregateType<T extends Legalitas_usahaAggregateArgs> = {
        [P in keyof T & keyof AggregateLegalitas_usaha]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLegalitas_usaha[P]>
      : GetScalarType<T[P], AggregateLegalitas_usaha[P]>
  }




  export type legalitas_usahaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: legalitas_usahaWhereInput
    orderBy?: legalitas_usahaOrderByWithAggregationInput | legalitas_usahaOrderByWithAggregationInput[]
    by: Legalitas_usahaScalarFieldEnum[] | Legalitas_usahaScalarFieldEnum
    having?: legalitas_usahaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Legalitas_usahaCountAggregateInputType | true
    _min?: Legalitas_usahaMinAggregateInputType
    _max?: Legalitas_usahaMaxAggregateInputType
  }

  export type Legalitas_usahaGroupByOutputType = {
    legalitas_id: string
    campaign_id: string
    tanggal_dibentuk: Date | null
    pemilik: string | null
    nib: string | null
    nik_pic: string | null
    file_perizinan: Buffer | null
    _count: Legalitas_usahaCountAggregateOutputType | null
    _min: Legalitas_usahaMinAggregateOutputType | null
    _max: Legalitas_usahaMaxAggregateOutputType | null
  }

  type GetLegalitas_usahaGroupByPayload<T extends legalitas_usahaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Legalitas_usahaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Legalitas_usahaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Legalitas_usahaGroupByOutputType[P]>
            : GetScalarType<T[P], Legalitas_usahaGroupByOutputType[P]>
        }
      >
    >


  export type legalitas_usahaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    legalitas_id?: boolean
    campaign_id?: boolean
    tanggal_dibentuk?: boolean
    pemilik?: boolean
    nib?: boolean
    nik_pic?: boolean
    file_perizinan?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["legalitas_usaha"]>

  export type legalitas_usahaSelectScalar = {
    legalitas_id?: boolean
    campaign_id?: boolean
    tanggal_dibentuk?: boolean
    pemilik?: boolean
    nib?: boolean
    nik_pic?: boolean
    file_perizinan?: boolean
  }


  export type legalitas_usahaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }


  export type $legalitas_usahaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "legalitas_usaha"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      legalitas_id: string
      campaign_id: string
      tanggal_dibentuk: Date | null
      pemilik: string | null
      nib: string | null
      nik_pic: string | null
      file_perizinan: Buffer | null
    }, ExtArgs["result"]["legalitas_usaha"]>
    composites: {}
  }


  type legalitas_usahaGetPayload<S extends boolean | null | undefined | legalitas_usahaDefaultArgs> = $Result.GetResult<Prisma.$legalitas_usahaPayload, S>

  type legalitas_usahaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<legalitas_usahaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Legalitas_usahaCountAggregateInputType | true
    }

  export interface legalitas_usahaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['legalitas_usaha'], meta: { name: 'legalitas_usaha' } }
    /**
     * Find zero or one Legalitas_usaha that matches the filter.
     * @param {legalitas_usahaFindUniqueArgs} args - Arguments to find a Legalitas_usaha
     * @example
     * // Get one Legalitas_usaha
     * const legalitas_usaha = await prisma.legalitas_usaha.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends legalitas_usahaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, legalitas_usahaFindUniqueArgs<ExtArgs>>
    ): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Legalitas_usaha that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {legalitas_usahaFindUniqueOrThrowArgs} args - Arguments to find a Legalitas_usaha
     * @example
     * // Get one Legalitas_usaha
     * const legalitas_usaha = await prisma.legalitas_usaha.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends legalitas_usahaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, legalitas_usahaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Legalitas_usaha that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {legalitas_usahaFindFirstArgs} args - Arguments to find a Legalitas_usaha
     * @example
     * // Get one Legalitas_usaha
     * const legalitas_usaha = await prisma.legalitas_usaha.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends legalitas_usahaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, legalitas_usahaFindFirstArgs<ExtArgs>>
    ): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Legalitas_usaha that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {legalitas_usahaFindFirstOrThrowArgs} args - Arguments to find a Legalitas_usaha
     * @example
     * // Get one Legalitas_usaha
     * const legalitas_usaha = await prisma.legalitas_usaha.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends legalitas_usahaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, legalitas_usahaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Legalitas_usahas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {legalitas_usahaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Legalitas_usahas
     * const legalitas_usahas = await prisma.legalitas_usaha.findMany()
     * 
     * // Get first 10 Legalitas_usahas
     * const legalitas_usahas = await prisma.legalitas_usaha.findMany({ take: 10 })
     * 
     * // Only select the `legalitas_id`
     * const legalitas_usahaWithLegalitas_idOnly = await prisma.legalitas_usaha.findMany({ select: { legalitas_id: true } })
     * 
    **/
    findMany<T extends legalitas_usahaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, legalitas_usahaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Legalitas_usaha.
     * @param {legalitas_usahaCreateArgs} args - Arguments to create a Legalitas_usaha.
     * @example
     * // Create one Legalitas_usaha
     * const Legalitas_usaha = await prisma.legalitas_usaha.create({
     *   data: {
     *     // ... data to create a Legalitas_usaha
     *   }
     * })
     * 
    **/
    create<T extends legalitas_usahaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, legalitas_usahaCreateArgs<ExtArgs>>
    ): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Legalitas_usahas.
     * @param {legalitas_usahaCreateManyArgs} args - Arguments to create many Legalitas_usahas.
     * @example
     * // Create many Legalitas_usahas
     * const legalitas_usaha = await prisma.legalitas_usaha.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends legalitas_usahaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, legalitas_usahaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Legalitas_usahas and returns the data saved in the database.
     * @param {legalitas_usahaCreateManyAndReturnArgs} args - Arguments to create many Legalitas_usahas.
     * @example
     * // Create many Legalitas_usahas
     * const legalitas_usaha = await prisma.legalitas_usaha.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Legalitas_usahas and only return the `legalitas_id`
     * const legalitas_usahaWithLegalitas_idOnly = await prisma.legalitas_usaha.createManyAndReturn({ 
     *   select: { legalitas_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends legalitas_usahaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, legalitas_usahaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Legalitas_usaha.
     * @param {legalitas_usahaDeleteArgs} args - Arguments to delete one Legalitas_usaha.
     * @example
     * // Delete one Legalitas_usaha
     * const Legalitas_usaha = await prisma.legalitas_usaha.delete({
     *   where: {
     *     // ... filter to delete one Legalitas_usaha
     *   }
     * })
     * 
    **/
    delete<T extends legalitas_usahaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, legalitas_usahaDeleteArgs<ExtArgs>>
    ): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Legalitas_usaha.
     * @param {legalitas_usahaUpdateArgs} args - Arguments to update one Legalitas_usaha.
     * @example
     * // Update one Legalitas_usaha
     * const legalitas_usaha = await prisma.legalitas_usaha.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends legalitas_usahaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, legalitas_usahaUpdateArgs<ExtArgs>>
    ): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Legalitas_usahas.
     * @param {legalitas_usahaDeleteManyArgs} args - Arguments to filter Legalitas_usahas to delete.
     * @example
     * // Delete a few Legalitas_usahas
     * const { count } = await prisma.legalitas_usaha.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends legalitas_usahaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, legalitas_usahaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Legalitas_usahas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {legalitas_usahaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Legalitas_usahas
     * const legalitas_usaha = await prisma.legalitas_usaha.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends legalitas_usahaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, legalitas_usahaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Legalitas_usaha.
     * @param {legalitas_usahaUpsertArgs} args - Arguments to update or create a Legalitas_usaha.
     * @example
     * // Update or create a Legalitas_usaha
     * const legalitas_usaha = await prisma.legalitas_usaha.upsert({
     *   create: {
     *     // ... data to create a Legalitas_usaha
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Legalitas_usaha we want to update
     *   }
     * })
    **/
    upsert<T extends legalitas_usahaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, legalitas_usahaUpsertArgs<ExtArgs>>
    ): Prisma__legalitas_usahaClient<$Result.GetResult<Prisma.$legalitas_usahaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Legalitas_usahas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {legalitas_usahaCountArgs} args - Arguments to filter Legalitas_usahas to count.
     * @example
     * // Count the number of Legalitas_usahas
     * const count = await prisma.legalitas_usaha.count({
     *   where: {
     *     // ... the filter for the Legalitas_usahas we want to count
     *   }
     * })
    **/
    count<T extends legalitas_usahaCountArgs>(
      args?: Subset<T, legalitas_usahaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Legalitas_usahaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Legalitas_usaha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Legalitas_usahaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Legalitas_usahaAggregateArgs>(args: Subset<T, Legalitas_usahaAggregateArgs>): Prisma.PrismaPromise<GetLegalitas_usahaAggregateType<T>>

    /**
     * Group by Legalitas_usaha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {legalitas_usahaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends legalitas_usahaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: legalitas_usahaGroupByArgs['orderBy'] }
        : { orderBy?: legalitas_usahaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, legalitas_usahaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLegalitas_usahaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the legalitas_usaha model
   */
  readonly fields: legalitas_usahaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for legalitas_usaha.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__legalitas_usahaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the legalitas_usaha model
   */ 
  interface legalitas_usahaFieldRefs {
    readonly legalitas_id: FieldRef<"legalitas_usaha", 'String'>
    readonly campaign_id: FieldRef<"legalitas_usaha", 'String'>
    readonly tanggal_dibentuk: FieldRef<"legalitas_usaha", 'DateTime'>
    readonly pemilik: FieldRef<"legalitas_usaha", 'String'>
    readonly nib: FieldRef<"legalitas_usaha", 'String'>
    readonly nik_pic: FieldRef<"legalitas_usaha", 'String'>
    readonly file_perizinan: FieldRef<"legalitas_usaha", 'Bytes'>
  }
    

  // Custom InputTypes
  /**
   * legalitas_usaha findUnique
   */
  export type legalitas_usahaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * Filter, which legalitas_usaha to fetch.
     */
    where: legalitas_usahaWhereUniqueInput
  }

  /**
   * legalitas_usaha findUniqueOrThrow
   */
  export type legalitas_usahaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * Filter, which legalitas_usaha to fetch.
     */
    where: legalitas_usahaWhereUniqueInput
  }

  /**
   * legalitas_usaha findFirst
   */
  export type legalitas_usahaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * Filter, which legalitas_usaha to fetch.
     */
    where?: legalitas_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of legalitas_usahas to fetch.
     */
    orderBy?: legalitas_usahaOrderByWithRelationInput | legalitas_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for legalitas_usahas.
     */
    cursor?: legalitas_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` legalitas_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` legalitas_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of legalitas_usahas.
     */
    distinct?: Legalitas_usahaScalarFieldEnum | Legalitas_usahaScalarFieldEnum[]
  }

  /**
   * legalitas_usaha findFirstOrThrow
   */
  export type legalitas_usahaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * Filter, which legalitas_usaha to fetch.
     */
    where?: legalitas_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of legalitas_usahas to fetch.
     */
    orderBy?: legalitas_usahaOrderByWithRelationInput | legalitas_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for legalitas_usahas.
     */
    cursor?: legalitas_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` legalitas_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` legalitas_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of legalitas_usahas.
     */
    distinct?: Legalitas_usahaScalarFieldEnum | Legalitas_usahaScalarFieldEnum[]
  }

  /**
   * legalitas_usaha findMany
   */
  export type legalitas_usahaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * Filter, which legalitas_usahas to fetch.
     */
    where?: legalitas_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of legalitas_usahas to fetch.
     */
    orderBy?: legalitas_usahaOrderByWithRelationInput | legalitas_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing legalitas_usahas.
     */
    cursor?: legalitas_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` legalitas_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` legalitas_usahas.
     */
    skip?: number
    distinct?: Legalitas_usahaScalarFieldEnum | Legalitas_usahaScalarFieldEnum[]
  }

  /**
   * legalitas_usaha create
   */
  export type legalitas_usahaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * The data needed to create a legalitas_usaha.
     */
    data: XOR<legalitas_usahaCreateInput, legalitas_usahaUncheckedCreateInput>
  }

  /**
   * legalitas_usaha createMany
   */
  export type legalitas_usahaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many legalitas_usahas.
     */
    data: legalitas_usahaCreateManyInput | legalitas_usahaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * legalitas_usaha createManyAndReturn
   */
  export type legalitas_usahaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * The data used to create many legalitas_usahas.
     */
    data: legalitas_usahaCreateManyInput | legalitas_usahaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * legalitas_usaha update
   */
  export type legalitas_usahaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * The data needed to update a legalitas_usaha.
     */
    data: XOR<legalitas_usahaUpdateInput, legalitas_usahaUncheckedUpdateInput>
    /**
     * Choose, which legalitas_usaha to update.
     */
    where: legalitas_usahaWhereUniqueInput
  }

  /**
   * legalitas_usaha updateMany
   */
  export type legalitas_usahaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update legalitas_usahas.
     */
    data: XOR<legalitas_usahaUpdateManyMutationInput, legalitas_usahaUncheckedUpdateManyInput>
    /**
     * Filter which legalitas_usahas to update
     */
    where?: legalitas_usahaWhereInput
  }

  /**
   * legalitas_usaha upsert
   */
  export type legalitas_usahaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * The filter to search for the legalitas_usaha to update in case it exists.
     */
    where: legalitas_usahaWhereUniqueInput
    /**
     * In case the legalitas_usaha found by the `where` argument doesn't exist, create a new legalitas_usaha with this data.
     */
    create: XOR<legalitas_usahaCreateInput, legalitas_usahaUncheckedCreateInput>
    /**
     * In case the legalitas_usaha was found with the provided `where` argument, update it with this data.
     */
    update: XOR<legalitas_usahaUpdateInput, legalitas_usahaUncheckedUpdateInput>
  }

  /**
   * legalitas_usaha delete
   */
  export type legalitas_usahaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
    /**
     * Filter which legalitas_usaha to delete.
     */
    where: legalitas_usahaWhereUniqueInput
  }

  /**
   * legalitas_usaha deleteMany
   */
  export type legalitas_usahaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which legalitas_usahas to delete
     */
    where?: legalitas_usahaWhereInput
  }

  /**
   * legalitas_usaha without action
   */
  export type legalitas_usahaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the legalitas_usaha
     */
    select?: legalitas_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: legalitas_usahaInclude<ExtArgs> | null
  }


  /**
   * Model pesan_campaign
   */

  export type AggregatePesan_campaign = {
    _count: Pesan_campaignCountAggregateOutputType | null
    _min: Pesan_campaignMinAggregateOutputType | null
    _max: Pesan_campaignMaxAggregateOutputType | null
  }

  export type Pesan_campaignMinAggregateOutputType = {
    pesan_id: string | null
    campaign_id: string | null
    pesan: string | null
    createdAt: Date | null
    createdBy: string | null
  }

  export type Pesan_campaignMaxAggregateOutputType = {
    pesan_id: string | null
    campaign_id: string | null
    pesan: string | null
    createdAt: Date | null
    createdBy: string | null
  }

  export type Pesan_campaignCountAggregateOutputType = {
    pesan_id: number
    campaign_id: number
    pesan: number
    createdAt: number
    createdBy: number
    _all: number
  }


  export type Pesan_campaignMinAggregateInputType = {
    pesan_id?: true
    campaign_id?: true
    pesan?: true
    createdAt?: true
    createdBy?: true
  }

  export type Pesan_campaignMaxAggregateInputType = {
    pesan_id?: true
    campaign_id?: true
    pesan?: true
    createdAt?: true
    createdBy?: true
  }

  export type Pesan_campaignCountAggregateInputType = {
    pesan_id?: true
    campaign_id?: true
    pesan?: true
    createdAt?: true
    createdBy?: true
    _all?: true
  }

  export type Pesan_campaignAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pesan_campaign to aggregate.
     */
    where?: pesan_campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pesan_campaigns to fetch.
     */
    orderBy?: pesan_campaignOrderByWithRelationInput | pesan_campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pesan_campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pesan_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pesan_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pesan_campaigns
    **/
    _count?: true | Pesan_campaignCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pesan_campaignMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pesan_campaignMaxAggregateInputType
  }

  export type GetPesan_campaignAggregateType<T extends Pesan_campaignAggregateArgs> = {
        [P in keyof T & keyof AggregatePesan_campaign]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePesan_campaign[P]>
      : GetScalarType<T[P], AggregatePesan_campaign[P]>
  }




  export type pesan_campaignGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pesan_campaignWhereInput
    orderBy?: pesan_campaignOrderByWithAggregationInput | pesan_campaignOrderByWithAggregationInput[]
    by: Pesan_campaignScalarFieldEnum[] | Pesan_campaignScalarFieldEnum
    having?: pesan_campaignScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pesan_campaignCountAggregateInputType | true
    _min?: Pesan_campaignMinAggregateInputType
    _max?: Pesan_campaignMaxAggregateInputType
  }

  export type Pesan_campaignGroupByOutputType = {
    pesan_id: string
    campaign_id: string
    pesan: string
    createdAt: Date
    createdBy: string
    _count: Pesan_campaignCountAggregateOutputType | null
    _min: Pesan_campaignMinAggregateOutputType | null
    _max: Pesan_campaignMaxAggregateOutputType | null
  }

  type GetPesan_campaignGroupByPayload<T extends pesan_campaignGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pesan_campaignGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pesan_campaignGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pesan_campaignGroupByOutputType[P]>
            : GetScalarType<T[P], Pesan_campaignGroupByOutputType[P]>
        }
      >
    >


  export type pesan_campaignSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pesan_id?: boolean
    campaign_id?: boolean
    pesan?: boolean
    createdAt?: boolean
    createdBy?: boolean
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pesan_campaign"]>

  export type pesan_campaignSelectScalar = {
    pesan_id?: boolean
    campaign_id?: boolean
    pesan?: boolean
    createdAt?: boolean
    createdBy?: boolean
  }


  export type pesan_campaignInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
  }


  export type $pesan_campaignPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pesan_campaign"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      pesan_id: string
      campaign_id: string
      pesan: string
      createdAt: Date
      createdBy: string
    }, ExtArgs["result"]["pesan_campaign"]>
    composites: {}
  }


  type pesan_campaignGetPayload<S extends boolean | null | undefined | pesan_campaignDefaultArgs> = $Result.GetResult<Prisma.$pesan_campaignPayload, S>

  type pesan_campaignCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<pesan_campaignFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Pesan_campaignCountAggregateInputType | true
    }

  export interface pesan_campaignDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pesan_campaign'], meta: { name: 'pesan_campaign' } }
    /**
     * Find zero or one Pesan_campaign that matches the filter.
     * @param {pesan_campaignFindUniqueArgs} args - Arguments to find a Pesan_campaign
     * @example
     * // Get one Pesan_campaign
     * const pesan_campaign = await prisma.pesan_campaign.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends pesan_campaignFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, pesan_campaignFindUniqueArgs<ExtArgs>>
    ): Prisma__pesan_campaignClient<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Pesan_campaign that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {pesan_campaignFindUniqueOrThrowArgs} args - Arguments to find a Pesan_campaign
     * @example
     * // Get one Pesan_campaign
     * const pesan_campaign = await prisma.pesan_campaign.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends pesan_campaignFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, pesan_campaignFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__pesan_campaignClient<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Pesan_campaign that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesan_campaignFindFirstArgs} args - Arguments to find a Pesan_campaign
     * @example
     * // Get one Pesan_campaign
     * const pesan_campaign = await prisma.pesan_campaign.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends pesan_campaignFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, pesan_campaignFindFirstArgs<ExtArgs>>
    ): Prisma__pesan_campaignClient<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Pesan_campaign that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesan_campaignFindFirstOrThrowArgs} args - Arguments to find a Pesan_campaign
     * @example
     * // Get one Pesan_campaign
     * const pesan_campaign = await prisma.pesan_campaign.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends pesan_campaignFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, pesan_campaignFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__pesan_campaignClient<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Pesan_campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesan_campaignFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pesan_campaigns
     * const pesan_campaigns = await prisma.pesan_campaign.findMany()
     * 
     * // Get first 10 Pesan_campaigns
     * const pesan_campaigns = await prisma.pesan_campaign.findMany({ take: 10 })
     * 
     * // Only select the `pesan_id`
     * const pesan_campaignWithPesan_idOnly = await prisma.pesan_campaign.findMany({ select: { pesan_id: true } })
     * 
    **/
    findMany<T extends pesan_campaignFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, pesan_campaignFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Pesan_campaign.
     * @param {pesan_campaignCreateArgs} args - Arguments to create a Pesan_campaign.
     * @example
     * // Create one Pesan_campaign
     * const Pesan_campaign = await prisma.pesan_campaign.create({
     *   data: {
     *     // ... data to create a Pesan_campaign
     *   }
     * })
     * 
    **/
    create<T extends pesan_campaignCreateArgs<ExtArgs>>(
      args: SelectSubset<T, pesan_campaignCreateArgs<ExtArgs>>
    ): Prisma__pesan_campaignClient<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Pesan_campaigns.
     * @param {pesan_campaignCreateManyArgs} args - Arguments to create many Pesan_campaigns.
     * @example
     * // Create many Pesan_campaigns
     * const pesan_campaign = await prisma.pesan_campaign.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends pesan_campaignCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, pesan_campaignCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pesan_campaigns and returns the data saved in the database.
     * @param {pesan_campaignCreateManyAndReturnArgs} args - Arguments to create many Pesan_campaigns.
     * @example
     * // Create many Pesan_campaigns
     * const pesan_campaign = await prisma.pesan_campaign.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pesan_campaigns and only return the `pesan_id`
     * const pesan_campaignWithPesan_idOnly = await prisma.pesan_campaign.createManyAndReturn({ 
     *   select: { pesan_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends pesan_campaignCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, pesan_campaignCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Pesan_campaign.
     * @param {pesan_campaignDeleteArgs} args - Arguments to delete one Pesan_campaign.
     * @example
     * // Delete one Pesan_campaign
     * const Pesan_campaign = await prisma.pesan_campaign.delete({
     *   where: {
     *     // ... filter to delete one Pesan_campaign
     *   }
     * })
     * 
    **/
    delete<T extends pesan_campaignDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, pesan_campaignDeleteArgs<ExtArgs>>
    ): Prisma__pesan_campaignClient<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Pesan_campaign.
     * @param {pesan_campaignUpdateArgs} args - Arguments to update one Pesan_campaign.
     * @example
     * // Update one Pesan_campaign
     * const pesan_campaign = await prisma.pesan_campaign.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends pesan_campaignUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, pesan_campaignUpdateArgs<ExtArgs>>
    ): Prisma__pesan_campaignClient<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Pesan_campaigns.
     * @param {pesan_campaignDeleteManyArgs} args - Arguments to filter Pesan_campaigns to delete.
     * @example
     * // Delete a few Pesan_campaigns
     * const { count } = await prisma.pesan_campaign.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends pesan_campaignDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, pesan_campaignDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pesan_campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesan_campaignUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pesan_campaigns
     * const pesan_campaign = await prisma.pesan_campaign.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends pesan_campaignUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, pesan_campaignUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pesan_campaign.
     * @param {pesan_campaignUpsertArgs} args - Arguments to update or create a Pesan_campaign.
     * @example
     * // Update or create a Pesan_campaign
     * const pesan_campaign = await prisma.pesan_campaign.upsert({
     *   create: {
     *     // ... data to create a Pesan_campaign
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pesan_campaign we want to update
     *   }
     * })
    **/
    upsert<T extends pesan_campaignUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, pesan_campaignUpsertArgs<ExtArgs>>
    ): Prisma__pesan_campaignClient<$Result.GetResult<Prisma.$pesan_campaignPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Pesan_campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesan_campaignCountArgs} args - Arguments to filter Pesan_campaigns to count.
     * @example
     * // Count the number of Pesan_campaigns
     * const count = await prisma.pesan_campaign.count({
     *   where: {
     *     // ... the filter for the Pesan_campaigns we want to count
     *   }
     * })
    **/
    count<T extends pesan_campaignCountArgs>(
      args?: Subset<T, pesan_campaignCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pesan_campaignCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pesan_campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pesan_campaignAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pesan_campaignAggregateArgs>(args: Subset<T, Pesan_campaignAggregateArgs>): Prisma.PrismaPromise<GetPesan_campaignAggregateType<T>>

    /**
     * Group by Pesan_campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesan_campaignGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pesan_campaignGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pesan_campaignGroupByArgs['orderBy'] }
        : { orderBy?: pesan_campaignGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pesan_campaignGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPesan_campaignGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pesan_campaign model
   */
  readonly fields: pesan_campaignFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pesan_campaign.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pesan_campaignClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the pesan_campaign model
   */ 
  interface pesan_campaignFieldRefs {
    readonly pesan_id: FieldRef<"pesan_campaign", 'String'>
    readonly campaign_id: FieldRef<"pesan_campaign", 'String'>
    readonly pesan: FieldRef<"pesan_campaign", 'String'>
    readonly createdAt: FieldRef<"pesan_campaign", 'DateTime'>
    readonly createdBy: FieldRef<"pesan_campaign", 'String'>
  }
    

  // Custom InputTypes
  /**
   * pesan_campaign findUnique
   */
  export type pesan_campaignFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * Filter, which pesan_campaign to fetch.
     */
    where: pesan_campaignWhereUniqueInput
  }

  /**
   * pesan_campaign findUniqueOrThrow
   */
  export type pesan_campaignFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * Filter, which pesan_campaign to fetch.
     */
    where: pesan_campaignWhereUniqueInput
  }

  /**
   * pesan_campaign findFirst
   */
  export type pesan_campaignFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * Filter, which pesan_campaign to fetch.
     */
    where?: pesan_campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pesan_campaigns to fetch.
     */
    orderBy?: pesan_campaignOrderByWithRelationInput | pesan_campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pesan_campaigns.
     */
    cursor?: pesan_campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pesan_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pesan_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pesan_campaigns.
     */
    distinct?: Pesan_campaignScalarFieldEnum | Pesan_campaignScalarFieldEnum[]
  }

  /**
   * pesan_campaign findFirstOrThrow
   */
  export type pesan_campaignFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * Filter, which pesan_campaign to fetch.
     */
    where?: pesan_campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pesan_campaigns to fetch.
     */
    orderBy?: pesan_campaignOrderByWithRelationInput | pesan_campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pesan_campaigns.
     */
    cursor?: pesan_campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pesan_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pesan_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pesan_campaigns.
     */
    distinct?: Pesan_campaignScalarFieldEnum | Pesan_campaignScalarFieldEnum[]
  }

  /**
   * pesan_campaign findMany
   */
  export type pesan_campaignFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * Filter, which pesan_campaigns to fetch.
     */
    where?: pesan_campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pesan_campaigns to fetch.
     */
    orderBy?: pesan_campaignOrderByWithRelationInput | pesan_campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pesan_campaigns.
     */
    cursor?: pesan_campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pesan_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pesan_campaigns.
     */
    skip?: number
    distinct?: Pesan_campaignScalarFieldEnum | Pesan_campaignScalarFieldEnum[]
  }

  /**
   * pesan_campaign create
   */
  export type pesan_campaignCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * The data needed to create a pesan_campaign.
     */
    data: XOR<pesan_campaignCreateInput, pesan_campaignUncheckedCreateInput>
  }

  /**
   * pesan_campaign createMany
   */
  export type pesan_campaignCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pesan_campaigns.
     */
    data: pesan_campaignCreateManyInput | pesan_campaignCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pesan_campaign createManyAndReturn
   */
  export type pesan_campaignCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * The data used to create many pesan_campaigns.
     */
    data: pesan_campaignCreateManyInput | pesan_campaignCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pesan_campaign update
   */
  export type pesan_campaignUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * The data needed to update a pesan_campaign.
     */
    data: XOR<pesan_campaignUpdateInput, pesan_campaignUncheckedUpdateInput>
    /**
     * Choose, which pesan_campaign to update.
     */
    where: pesan_campaignWhereUniqueInput
  }

  /**
   * pesan_campaign updateMany
   */
  export type pesan_campaignUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pesan_campaigns.
     */
    data: XOR<pesan_campaignUpdateManyMutationInput, pesan_campaignUncheckedUpdateManyInput>
    /**
     * Filter which pesan_campaigns to update
     */
    where?: pesan_campaignWhereInput
  }

  /**
   * pesan_campaign upsert
   */
  export type pesan_campaignUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * The filter to search for the pesan_campaign to update in case it exists.
     */
    where: pesan_campaignWhereUniqueInput
    /**
     * In case the pesan_campaign found by the `where` argument doesn't exist, create a new pesan_campaign with this data.
     */
    create: XOR<pesan_campaignCreateInput, pesan_campaignUncheckedCreateInput>
    /**
     * In case the pesan_campaign was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pesan_campaignUpdateInput, pesan_campaignUncheckedUpdateInput>
  }

  /**
   * pesan_campaign delete
   */
  export type pesan_campaignDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
    /**
     * Filter which pesan_campaign to delete.
     */
    where: pesan_campaignWhereUniqueInput
  }

  /**
   * pesan_campaign deleteMany
   */
  export type pesan_campaignDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pesan_campaigns to delete
     */
    where?: pesan_campaignWhereInput
  }

  /**
   * pesan_campaign without action
   */
  export type pesan_campaignDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesan_campaign
     */
    select?: pesan_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesan_campaignInclude<ExtArgs> | null
  }


  /**
   * Model product_information
   */

  export type AggregateProduct_information = {
    _count: Product_informationCountAggregateOutputType | null
    _avg: Product_informationAvgAggregateOutputType | null
    _sum: Product_informationSumAggregateOutputType | null
    _min: Product_informationMinAggregateOutputType | null
    _max: Product_informationMaxAggregateOutputType | null
  }

  export type Product_informationAvgAggregateOutputType = {
    product_info_id: number | null
  }

  export type Product_informationSumAggregateOutputType = {
    product_info_id: number | null
  }

  export type Product_informationMinAggregateOutputType = {
    product_info_id: number | null
    crowdfunding_id: string | null
    link_video: string | null
    product_info: string | null
  }

  export type Product_informationMaxAggregateOutputType = {
    product_info_id: number | null
    crowdfunding_id: string | null
    link_video: string | null
    product_info: string | null
  }

  export type Product_informationCountAggregateOutputType = {
    product_info_id: number
    crowdfunding_id: number
    link_video: number
    product_info: number
    _all: number
  }


  export type Product_informationAvgAggregateInputType = {
    product_info_id?: true
  }

  export type Product_informationSumAggregateInputType = {
    product_info_id?: true
  }

  export type Product_informationMinAggregateInputType = {
    product_info_id?: true
    crowdfunding_id?: true
    link_video?: true
    product_info?: true
  }

  export type Product_informationMaxAggregateInputType = {
    product_info_id?: true
    crowdfunding_id?: true
    link_video?: true
    product_info?: true
  }

  export type Product_informationCountAggregateInputType = {
    product_info_id?: true
    crowdfunding_id?: true
    link_video?: true
    product_info?: true
    _all?: true
  }

  export type Product_informationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_information to aggregate.
     */
    where?: product_informationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_informations to fetch.
     */
    orderBy?: product_informationOrderByWithRelationInput | product_informationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_informationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_informations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_informations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_informations
    **/
    _count?: true | Product_informationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_informationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_informationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_informationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_informationMaxAggregateInputType
  }

  export type GetProduct_informationAggregateType<T extends Product_informationAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_information]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_information[P]>
      : GetScalarType<T[P], AggregateProduct_information[P]>
  }




  export type product_informationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_informationWhereInput
    orderBy?: product_informationOrderByWithAggregationInput | product_informationOrderByWithAggregationInput[]
    by: Product_informationScalarFieldEnum[] | Product_informationScalarFieldEnum
    having?: product_informationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_informationCountAggregateInputType | true
    _avg?: Product_informationAvgAggregateInputType
    _sum?: Product_informationSumAggregateInputType
    _min?: Product_informationMinAggregateInputType
    _max?: Product_informationMaxAggregateInputType
  }

  export type Product_informationGroupByOutputType = {
    product_info_id: number
    crowdfunding_id: string
    link_video: string | null
    product_info: string | null
    _count: Product_informationCountAggregateOutputType | null
    _avg: Product_informationAvgAggregateOutputType | null
    _sum: Product_informationSumAggregateOutputType | null
    _min: Product_informationMinAggregateOutputType | null
    _max: Product_informationMaxAggregateOutputType | null
  }

  type GetProduct_informationGroupByPayload<T extends product_informationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_informationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_informationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_informationGroupByOutputType[P]>
            : GetScalarType<T[P], Product_informationGroupByOutputType[P]>
        }
      >
    >


  export type product_informationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_info_id?: boolean
    crowdfunding_id?: boolean
    link_video?: boolean
    product_info?: boolean
    crowdfunding?: boolean | crowdfundingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_information"]>

  export type product_informationSelectScalar = {
    product_info_id?: boolean
    crowdfunding_id?: boolean
    link_video?: boolean
    product_info?: boolean
  }


  export type product_informationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    crowdfunding?: boolean | crowdfundingDefaultArgs<ExtArgs>
  }


  export type $product_informationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_information"
    objects: {
      crowdfunding: Prisma.$crowdfundingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      product_info_id: number
      crowdfunding_id: string
      link_video: string | null
      product_info: string | null
    }, ExtArgs["result"]["product_information"]>
    composites: {}
  }


  type product_informationGetPayload<S extends boolean | null | undefined | product_informationDefaultArgs> = $Result.GetResult<Prisma.$product_informationPayload, S>

  type product_informationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<product_informationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Product_informationCountAggregateInputType | true
    }

  export interface product_informationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_information'], meta: { name: 'product_information' } }
    /**
     * Find zero or one Product_information that matches the filter.
     * @param {product_informationFindUniqueArgs} args - Arguments to find a Product_information
     * @example
     * // Get one Product_information
     * const product_information = await prisma.product_information.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends product_informationFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, product_informationFindUniqueArgs<ExtArgs>>
    ): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Product_information that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {product_informationFindUniqueOrThrowArgs} args - Arguments to find a Product_information
     * @example
     * // Get one Product_information
     * const product_information = await prisma.product_information.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends product_informationFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, product_informationFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Product_information that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_informationFindFirstArgs} args - Arguments to find a Product_information
     * @example
     * // Get one Product_information
     * const product_information = await prisma.product_information.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends product_informationFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, product_informationFindFirstArgs<ExtArgs>>
    ): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Product_information that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_informationFindFirstOrThrowArgs} args - Arguments to find a Product_information
     * @example
     * // Get one Product_information
     * const product_information = await prisma.product_information.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends product_informationFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, product_informationFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Product_informations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_informationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_informations
     * const product_informations = await prisma.product_information.findMany()
     * 
     * // Get first 10 Product_informations
     * const product_informations = await prisma.product_information.findMany({ take: 10 })
     * 
     * // Only select the `product_info_id`
     * const product_informationWithProduct_info_idOnly = await prisma.product_information.findMany({ select: { product_info_id: true } })
     * 
    **/
    findMany<T extends product_informationFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, product_informationFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Product_information.
     * @param {product_informationCreateArgs} args - Arguments to create a Product_information.
     * @example
     * // Create one Product_information
     * const Product_information = await prisma.product_information.create({
     *   data: {
     *     // ... data to create a Product_information
     *   }
     * })
     * 
    **/
    create<T extends product_informationCreateArgs<ExtArgs>>(
      args: SelectSubset<T, product_informationCreateArgs<ExtArgs>>
    ): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Product_informations.
     * @param {product_informationCreateManyArgs} args - Arguments to create many Product_informations.
     * @example
     * // Create many Product_informations
     * const product_information = await prisma.product_information.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends product_informationCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, product_informationCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Product_informations and returns the data saved in the database.
     * @param {product_informationCreateManyAndReturnArgs} args - Arguments to create many Product_informations.
     * @example
     * // Create many Product_informations
     * const product_information = await prisma.product_information.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Product_informations and only return the `product_info_id`
     * const product_informationWithProduct_info_idOnly = await prisma.product_information.createManyAndReturn({ 
     *   select: { product_info_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends product_informationCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, product_informationCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Product_information.
     * @param {product_informationDeleteArgs} args - Arguments to delete one Product_information.
     * @example
     * // Delete one Product_information
     * const Product_information = await prisma.product_information.delete({
     *   where: {
     *     // ... filter to delete one Product_information
     *   }
     * })
     * 
    **/
    delete<T extends product_informationDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, product_informationDeleteArgs<ExtArgs>>
    ): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Product_information.
     * @param {product_informationUpdateArgs} args - Arguments to update one Product_information.
     * @example
     * // Update one Product_information
     * const product_information = await prisma.product_information.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends product_informationUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, product_informationUpdateArgs<ExtArgs>>
    ): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Product_informations.
     * @param {product_informationDeleteManyArgs} args - Arguments to filter Product_informations to delete.
     * @example
     * // Delete a few Product_informations
     * const { count } = await prisma.product_information.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends product_informationDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, product_informationDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_informations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_informationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_informations
     * const product_information = await prisma.product_information.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends product_informationUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, product_informationUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_information.
     * @param {product_informationUpsertArgs} args - Arguments to update or create a Product_information.
     * @example
     * // Update or create a Product_information
     * const product_information = await prisma.product_information.upsert({
     *   create: {
     *     // ... data to create a Product_information
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_information we want to update
     *   }
     * })
    **/
    upsert<T extends product_informationUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, product_informationUpsertArgs<ExtArgs>>
    ): Prisma__product_informationClient<$Result.GetResult<Prisma.$product_informationPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Product_informations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_informationCountArgs} args - Arguments to filter Product_informations to count.
     * @example
     * // Count the number of Product_informations
     * const count = await prisma.product_information.count({
     *   where: {
     *     // ... the filter for the Product_informations we want to count
     *   }
     * })
    **/
    count<T extends product_informationCountArgs>(
      args?: Subset<T, product_informationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_informationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_information.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_informationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_informationAggregateArgs>(args: Subset<T, Product_informationAggregateArgs>): Prisma.PrismaPromise<GetProduct_informationAggregateType<T>>

    /**
     * Group by Product_information.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_informationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_informationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_informationGroupByArgs['orderBy'] }
        : { orderBy?: product_informationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_informationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_informationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_information model
   */
  readonly fields: product_informationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_information.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_informationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    crowdfunding<T extends crowdfundingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, crowdfundingDefaultArgs<ExtArgs>>): Prisma__crowdfundingClient<$Result.GetResult<Prisma.$crowdfundingPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the product_information model
   */ 
  interface product_informationFieldRefs {
    readonly product_info_id: FieldRef<"product_information", 'Int'>
    readonly crowdfunding_id: FieldRef<"product_information", 'String'>
    readonly link_video: FieldRef<"product_information", 'String'>
    readonly product_info: FieldRef<"product_information", 'String'>
  }
    

  // Custom InputTypes
  /**
   * product_information findUnique
   */
  export type product_informationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * Filter, which product_information to fetch.
     */
    where: product_informationWhereUniqueInput
  }

  /**
   * product_information findUniqueOrThrow
   */
  export type product_informationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * Filter, which product_information to fetch.
     */
    where: product_informationWhereUniqueInput
  }

  /**
   * product_information findFirst
   */
  export type product_informationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * Filter, which product_information to fetch.
     */
    where?: product_informationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_informations to fetch.
     */
    orderBy?: product_informationOrderByWithRelationInput | product_informationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_informations.
     */
    cursor?: product_informationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_informations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_informations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_informations.
     */
    distinct?: Product_informationScalarFieldEnum | Product_informationScalarFieldEnum[]
  }

  /**
   * product_information findFirstOrThrow
   */
  export type product_informationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * Filter, which product_information to fetch.
     */
    where?: product_informationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_informations to fetch.
     */
    orderBy?: product_informationOrderByWithRelationInput | product_informationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_informations.
     */
    cursor?: product_informationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_informations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_informations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_informations.
     */
    distinct?: Product_informationScalarFieldEnum | Product_informationScalarFieldEnum[]
  }

  /**
   * product_information findMany
   */
  export type product_informationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * Filter, which product_informations to fetch.
     */
    where?: product_informationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_informations to fetch.
     */
    orderBy?: product_informationOrderByWithRelationInput | product_informationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_informations.
     */
    cursor?: product_informationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_informations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_informations.
     */
    skip?: number
    distinct?: Product_informationScalarFieldEnum | Product_informationScalarFieldEnum[]
  }

  /**
   * product_information create
   */
  export type product_informationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * The data needed to create a product_information.
     */
    data: XOR<product_informationCreateInput, product_informationUncheckedCreateInput>
  }

  /**
   * product_information createMany
   */
  export type product_informationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_informations.
     */
    data: product_informationCreateManyInput | product_informationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_information createManyAndReturn
   */
  export type product_informationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * The data used to create many product_informations.
     */
    data: product_informationCreateManyInput | product_informationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_information update
   */
  export type product_informationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * The data needed to update a product_information.
     */
    data: XOR<product_informationUpdateInput, product_informationUncheckedUpdateInput>
    /**
     * Choose, which product_information to update.
     */
    where: product_informationWhereUniqueInput
  }

  /**
   * product_information updateMany
   */
  export type product_informationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_informations.
     */
    data: XOR<product_informationUpdateManyMutationInput, product_informationUncheckedUpdateManyInput>
    /**
     * Filter which product_informations to update
     */
    where?: product_informationWhereInput
  }

  /**
   * product_information upsert
   */
  export type product_informationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * The filter to search for the product_information to update in case it exists.
     */
    where: product_informationWhereUniqueInput
    /**
     * In case the product_information found by the `where` argument doesn't exist, create a new product_information with this data.
     */
    create: XOR<product_informationCreateInput, product_informationUncheckedCreateInput>
    /**
     * In case the product_information was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_informationUpdateInput, product_informationUncheckedUpdateInput>
  }

  /**
   * product_information delete
   */
  export type product_informationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
    /**
     * Filter which product_information to delete.
     */
    where: product_informationWhereUniqueInput
  }

  /**
   * product_information deleteMany
   */
  export type product_informationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_informations to delete
     */
    where?: product_informationWhereInput
  }

  /**
   * product_information without action
   */
  export type product_informationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_information
     */
    select?: product_informationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_informationInclude<ExtArgs> | null
  }


  /**
   * Model refund
   */

  export type AggregateRefund = {
    _count: RefundCountAggregateOutputType | null
    _avg: RefundAvgAggregateOutputType | null
    _sum: RefundSumAggregateOutputType | null
    _min: RefundMinAggregateOutputType | null
    _max: RefundMaxAggregateOutputType | null
  }

  export type RefundAvgAggregateOutputType = {
    amount: number | null
    approved_amount: number | null
  }

  export type RefundSumAggregateOutputType = {
    amount: bigint | null
    approved_amount: bigint | null
  }

  export type RefundMinAggregateOutputType = {
    refund_id: string | null
    amount: bigint | null
    nama_bank: string | null
    nomor_bank: string | null
    alasan_refund: string | null
    isAproved: boolean | null
    statusUpdate: string | null
    updatedAt: Date | null
    createdAt: Date | null
    user_id: string | null
    isConfirmed: boolean | null
    approved_amount: bigint | null
    reason_reduce: string | null
  }

  export type RefundMaxAggregateOutputType = {
    refund_id: string | null
    amount: bigint | null
    nama_bank: string | null
    nomor_bank: string | null
    alasan_refund: string | null
    isAproved: boolean | null
    statusUpdate: string | null
    updatedAt: Date | null
    createdAt: Date | null
    user_id: string | null
    isConfirmed: boolean | null
    approved_amount: bigint | null
    reason_reduce: string | null
  }

  export type RefundCountAggregateOutputType = {
    refund_id: number
    amount: number
    nama_bank: number
    nomor_bank: number
    alasan_refund: number
    isAproved: number
    statusUpdate: number
    updatedAt: number
    createdAt: number
    user_id: number
    isConfirmed: number
    approved_amount: number
    reason_reduce: number
    _all: number
  }


  export type RefundAvgAggregateInputType = {
    amount?: true
    approved_amount?: true
  }

  export type RefundSumAggregateInputType = {
    amount?: true
    approved_amount?: true
  }

  export type RefundMinAggregateInputType = {
    refund_id?: true
    amount?: true
    nama_bank?: true
    nomor_bank?: true
    alasan_refund?: true
    isAproved?: true
    statusUpdate?: true
    updatedAt?: true
    createdAt?: true
    user_id?: true
    isConfirmed?: true
    approved_amount?: true
    reason_reduce?: true
  }

  export type RefundMaxAggregateInputType = {
    refund_id?: true
    amount?: true
    nama_bank?: true
    nomor_bank?: true
    alasan_refund?: true
    isAproved?: true
    statusUpdate?: true
    updatedAt?: true
    createdAt?: true
    user_id?: true
    isConfirmed?: true
    approved_amount?: true
    reason_reduce?: true
  }

  export type RefundCountAggregateInputType = {
    refund_id?: true
    amount?: true
    nama_bank?: true
    nomor_bank?: true
    alasan_refund?: true
    isAproved?: true
    statusUpdate?: true
    updatedAt?: true
    createdAt?: true
    user_id?: true
    isConfirmed?: true
    approved_amount?: true
    reason_reduce?: true
    _all?: true
  }

  export type RefundAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refund to aggregate.
     */
    where?: refundWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refunds to fetch.
     */
    orderBy?: refundOrderByWithRelationInput | refundOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: refundWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refunds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refunds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned refunds
    **/
    _count?: true | RefundCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RefundAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RefundSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefundMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefundMaxAggregateInputType
  }

  export type GetRefundAggregateType<T extends RefundAggregateArgs> = {
        [P in keyof T & keyof AggregateRefund]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefund[P]>
      : GetScalarType<T[P], AggregateRefund[P]>
  }




  export type refundGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refundWhereInput
    orderBy?: refundOrderByWithAggregationInput | refundOrderByWithAggregationInput[]
    by: RefundScalarFieldEnum[] | RefundScalarFieldEnum
    having?: refundScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefundCountAggregateInputType | true
    _avg?: RefundAvgAggregateInputType
    _sum?: RefundSumAggregateInputType
    _min?: RefundMinAggregateInputType
    _max?: RefundMaxAggregateInputType
  }

  export type RefundGroupByOutputType = {
    refund_id: string
    amount: bigint
    nama_bank: string | null
    nomor_bank: string | null
    alasan_refund: string | null
    isAproved: boolean | null
    statusUpdate: string | null
    updatedAt: Date
    createdAt: Date | null
    user_id: string
    isConfirmed: boolean
    approved_amount: bigint | null
    reason_reduce: string | null
    _count: RefundCountAggregateOutputType | null
    _avg: RefundAvgAggregateOutputType | null
    _sum: RefundSumAggregateOutputType | null
    _min: RefundMinAggregateOutputType | null
    _max: RefundMaxAggregateOutputType | null
  }

  type GetRefundGroupByPayload<T extends refundGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefundGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefundGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefundGroupByOutputType[P]>
            : GetScalarType<T[P], RefundGroupByOutputType[P]>
        }
      >
    >


  export type refundSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    refund_id?: boolean
    amount?: boolean
    nama_bank?: boolean
    nomor_bank?: boolean
    alasan_refund?: boolean
    isAproved?: boolean
    statusUpdate?: boolean
    updatedAt?: boolean
    createdAt?: boolean
    user_id?: boolean
    isConfirmed?: boolean
    approved_amount?: boolean
    reason_reduce?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refund"]>

  export type refundSelectScalar = {
    refund_id?: boolean
    amount?: boolean
    nama_bank?: boolean
    nomor_bank?: boolean
    alasan_refund?: boolean
    isAproved?: boolean
    statusUpdate?: boolean
    updatedAt?: boolean
    createdAt?: boolean
    user_id?: boolean
    isConfirmed?: boolean
    approved_amount?: boolean
    reason_reduce?: boolean
  }


  export type refundInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $refundPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "refund"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      refund_id: string
      amount: bigint
      nama_bank: string | null
      nomor_bank: string | null
      alasan_refund: string | null
      isAproved: boolean | null
      statusUpdate: string | null
      updatedAt: Date
      createdAt: Date | null
      user_id: string
      isConfirmed: boolean
      approved_amount: bigint | null
      reason_reduce: string | null
    }, ExtArgs["result"]["refund"]>
    composites: {}
  }


  type refundGetPayload<S extends boolean | null | undefined | refundDefaultArgs> = $Result.GetResult<Prisma.$refundPayload, S>

  type refundCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<refundFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RefundCountAggregateInputType | true
    }

  export interface refundDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['refund'], meta: { name: 'refund' } }
    /**
     * Find zero or one Refund that matches the filter.
     * @param {refundFindUniqueArgs} args - Arguments to find a Refund
     * @example
     * // Get one Refund
     * const refund = await prisma.refund.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends refundFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, refundFindUniqueArgs<ExtArgs>>
    ): Prisma__refundClient<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Refund that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {refundFindUniqueOrThrowArgs} args - Arguments to find a Refund
     * @example
     * // Get one Refund
     * const refund = await prisma.refund.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends refundFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, refundFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__refundClient<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Refund that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refundFindFirstArgs} args - Arguments to find a Refund
     * @example
     * // Get one Refund
     * const refund = await prisma.refund.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends refundFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, refundFindFirstArgs<ExtArgs>>
    ): Prisma__refundClient<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Refund that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refundFindFirstOrThrowArgs} args - Arguments to find a Refund
     * @example
     * // Get one Refund
     * const refund = await prisma.refund.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends refundFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, refundFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__refundClient<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Refunds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refundFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Refunds
     * const refunds = await prisma.refund.findMany()
     * 
     * // Get first 10 Refunds
     * const refunds = await prisma.refund.findMany({ take: 10 })
     * 
     * // Only select the `refund_id`
     * const refundWithRefund_idOnly = await prisma.refund.findMany({ select: { refund_id: true } })
     * 
    **/
    findMany<T extends refundFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refundFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Refund.
     * @param {refundCreateArgs} args - Arguments to create a Refund.
     * @example
     * // Create one Refund
     * const Refund = await prisma.refund.create({
     *   data: {
     *     // ... data to create a Refund
     *   }
     * })
     * 
    **/
    create<T extends refundCreateArgs<ExtArgs>>(
      args: SelectSubset<T, refundCreateArgs<ExtArgs>>
    ): Prisma__refundClient<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Refunds.
     * @param {refundCreateManyArgs} args - Arguments to create many Refunds.
     * @example
     * // Create many Refunds
     * const refund = await prisma.refund.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends refundCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refundCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Refunds and returns the data saved in the database.
     * @param {refundCreateManyAndReturnArgs} args - Arguments to create many Refunds.
     * @example
     * // Create many Refunds
     * const refund = await prisma.refund.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Refunds and only return the `refund_id`
     * const refundWithRefund_idOnly = await prisma.refund.createManyAndReturn({ 
     *   select: { refund_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends refundCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, refundCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Refund.
     * @param {refundDeleteArgs} args - Arguments to delete one Refund.
     * @example
     * // Delete one Refund
     * const Refund = await prisma.refund.delete({
     *   where: {
     *     // ... filter to delete one Refund
     *   }
     * })
     * 
    **/
    delete<T extends refundDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, refundDeleteArgs<ExtArgs>>
    ): Prisma__refundClient<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Refund.
     * @param {refundUpdateArgs} args - Arguments to update one Refund.
     * @example
     * // Update one Refund
     * const refund = await prisma.refund.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends refundUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, refundUpdateArgs<ExtArgs>>
    ): Prisma__refundClient<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Refunds.
     * @param {refundDeleteManyArgs} args - Arguments to filter Refunds to delete.
     * @example
     * // Delete a few Refunds
     * const { count } = await prisma.refund.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends refundDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refundDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refunds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refundUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Refunds
     * const refund = await prisma.refund.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends refundUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, refundUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Refund.
     * @param {refundUpsertArgs} args - Arguments to update or create a Refund.
     * @example
     * // Update or create a Refund
     * const refund = await prisma.refund.upsert({
     *   create: {
     *     // ... data to create a Refund
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Refund we want to update
     *   }
     * })
    **/
    upsert<T extends refundUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, refundUpsertArgs<ExtArgs>>
    ): Prisma__refundClient<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Refunds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refundCountArgs} args - Arguments to filter Refunds to count.
     * @example
     * // Count the number of Refunds
     * const count = await prisma.refund.count({
     *   where: {
     *     // ... the filter for the Refunds we want to count
     *   }
     * })
    **/
    count<T extends refundCountArgs>(
      args?: Subset<T, refundCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefundCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Refund.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefundAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefundAggregateArgs>(args: Subset<T, RefundAggregateArgs>): Prisma.PrismaPromise<GetRefundAggregateType<T>>

    /**
     * Group by Refund.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refundGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends refundGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: refundGroupByArgs['orderBy'] }
        : { orderBy?: refundGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, refundGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefundGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the refund model
   */
  readonly fields: refundFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for refund.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__refundClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the refund model
   */ 
  interface refundFieldRefs {
    readonly refund_id: FieldRef<"refund", 'String'>
    readonly amount: FieldRef<"refund", 'BigInt'>
    readonly nama_bank: FieldRef<"refund", 'String'>
    readonly nomor_bank: FieldRef<"refund", 'String'>
    readonly alasan_refund: FieldRef<"refund", 'String'>
    readonly isAproved: FieldRef<"refund", 'Boolean'>
    readonly statusUpdate: FieldRef<"refund", 'String'>
    readonly updatedAt: FieldRef<"refund", 'DateTime'>
    readonly createdAt: FieldRef<"refund", 'DateTime'>
    readonly user_id: FieldRef<"refund", 'String'>
    readonly isConfirmed: FieldRef<"refund", 'Boolean'>
    readonly approved_amount: FieldRef<"refund", 'BigInt'>
    readonly reason_reduce: FieldRef<"refund", 'String'>
  }
    

  // Custom InputTypes
  /**
   * refund findUnique
   */
  export type refundFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * Filter, which refund to fetch.
     */
    where: refundWhereUniqueInput
  }

  /**
   * refund findUniqueOrThrow
   */
  export type refundFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * Filter, which refund to fetch.
     */
    where: refundWhereUniqueInput
  }

  /**
   * refund findFirst
   */
  export type refundFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * Filter, which refund to fetch.
     */
    where?: refundWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refunds to fetch.
     */
    orderBy?: refundOrderByWithRelationInput | refundOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refunds.
     */
    cursor?: refundWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refunds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refunds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refunds.
     */
    distinct?: RefundScalarFieldEnum | RefundScalarFieldEnum[]
  }

  /**
   * refund findFirstOrThrow
   */
  export type refundFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * Filter, which refund to fetch.
     */
    where?: refundWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refunds to fetch.
     */
    orderBy?: refundOrderByWithRelationInput | refundOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refunds.
     */
    cursor?: refundWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refunds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refunds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refunds.
     */
    distinct?: RefundScalarFieldEnum | RefundScalarFieldEnum[]
  }

  /**
   * refund findMany
   */
  export type refundFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * Filter, which refunds to fetch.
     */
    where?: refundWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refunds to fetch.
     */
    orderBy?: refundOrderByWithRelationInput | refundOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing refunds.
     */
    cursor?: refundWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refunds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refunds.
     */
    skip?: number
    distinct?: RefundScalarFieldEnum | RefundScalarFieldEnum[]
  }

  /**
   * refund create
   */
  export type refundCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * The data needed to create a refund.
     */
    data: XOR<refundCreateInput, refundUncheckedCreateInput>
  }

  /**
   * refund createMany
   */
  export type refundCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many refunds.
     */
    data: refundCreateManyInput | refundCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * refund createManyAndReturn
   */
  export type refundCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * The data used to create many refunds.
     */
    data: refundCreateManyInput | refundCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * refund update
   */
  export type refundUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * The data needed to update a refund.
     */
    data: XOR<refundUpdateInput, refundUncheckedUpdateInput>
    /**
     * Choose, which refund to update.
     */
    where: refundWhereUniqueInput
  }

  /**
   * refund updateMany
   */
  export type refundUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update refunds.
     */
    data: XOR<refundUpdateManyMutationInput, refundUncheckedUpdateManyInput>
    /**
     * Filter which refunds to update
     */
    where?: refundWhereInput
  }

  /**
   * refund upsert
   */
  export type refundUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * The filter to search for the refund to update in case it exists.
     */
    where: refundWhereUniqueInput
    /**
     * In case the refund found by the `where` argument doesn't exist, create a new refund with this data.
     */
    create: XOR<refundCreateInput, refundUncheckedCreateInput>
    /**
     * In case the refund was found with the provided `where` argument, update it with this data.
     */
    update: XOR<refundUpdateInput, refundUncheckedUpdateInput>
  }

  /**
   * refund delete
   */
  export type refundDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    /**
     * Filter which refund to delete.
     */
    where: refundWhereUniqueInput
  }

  /**
   * refund deleteMany
   */
  export type refundDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refunds to delete
     */
    where?: refundWhereInput
  }

  /**
   * refund without action
   */
  export type refundDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
  }


  /**
   * Model replies_discussion
   */

  export type AggregateReplies_discussion = {
    _count: Replies_discussionCountAggregateOutputType | null
    _avg: Replies_discussionAvgAggregateOutputType | null
    _sum: Replies_discussionSumAggregateOutputType | null
    _min: Replies_discussionMinAggregateOutputType | null
    _max: Replies_discussionMaxAggregateOutputType | null
  }

  export type Replies_discussionAvgAggregateOutputType = {
    like: number | null
  }

  export type Replies_discussionSumAggregateOutputType = {
    like: number | null
  }

  export type Replies_discussionMinAggregateOutputType = {
    replie_id: string | null
    discussion_id: string | null
    createdAt: Date | null
    message: string | null
    like: number | null
  }

  export type Replies_discussionMaxAggregateOutputType = {
    replie_id: string | null
    discussion_id: string | null
    createdAt: Date | null
    message: string | null
    like: number | null
  }

  export type Replies_discussionCountAggregateOutputType = {
    replie_id: number
    discussion_id: number
    createdAt: number
    message: number
    like: number
    _all: number
  }


  export type Replies_discussionAvgAggregateInputType = {
    like?: true
  }

  export type Replies_discussionSumAggregateInputType = {
    like?: true
  }

  export type Replies_discussionMinAggregateInputType = {
    replie_id?: true
    discussion_id?: true
    createdAt?: true
    message?: true
    like?: true
  }

  export type Replies_discussionMaxAggregateInputType = {
    replie_id?: true
    discussion_id?: true
    createdAt?: true
    message?: true
    like?: true
  }

  export type Replies_discussionCountAggregateInputType = {
    replie_id?: true
    discussion_id?: true
    createdAt?: true
    message?: true
    like?: true
    _all?: true
  }

  export type Replies_discussionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which replies_discussion to aggregate.
     */
    where?: replies_discussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of replies_discussions to fetch.
     */
    orderBy?: replies_discussionOrderByWithRelationInput | replies_discussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: replies_discussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` replies_discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` replies_discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned replies_discussions
    **/
    _count?: true | Replies_discussionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Replies_discussionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Replies_discussionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Replies_discussionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Replies_discussionMaxAggregateInputType
  }

  export type GetReplies_discussionAggregateType<T extends Replies_discussionAggregateArgs> = {
        [P in keyof T & keyof AggregateReplies_discussion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReplies_discussion[P]>
      : GetScalarType<T[P], AggregateReplies_discussion[P]>
  }




  export type replies_discussionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: replies_discussionWhereInput
    orderBy?: replies_discussionOrderByWithAggregationInput | replies_discussionOrderByWithAggregationInput[]
    by: Replies_discussionScalarFieldEnum[] | Replies_discussionScalarFieldEnum
    having?: replies_discussionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Replies_discussionCountAggregateInputType | true
    _avg?: Replies_discussionAvgAggregateInputType
    _sum?: Replies_discussionSumAggregateInputType
    _min?: Replies_discussionMinAggregateInputType
    _max?: Replies_discussionMaxAggregateInputType
  }

  export type Replies_discussionGroupByOutputType = {
    replie_id: string
    discussion_id: string
    createdAt: Date
    message: string
    like: number | null
    _count: Replies_discussionCountAggregateOutputType | null
    _avg: Replies_discussionAvgAggregateOutputType | null
    _sum: Replies_discussionSumAggregateOutputType | null
    _min: Replies_discussionMinAggregateOutputType | null
    _max: Replies_discussionMaxAggregateOutputType | null
  }

  type GetReplies_discussionGroupByPayload<T extends replies_discussionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Replies_discussionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Replies_discussionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Replies_discussionGroupByOutputType[P]>
            : GetScalarType<T[P], Replies_discussionGroupByOutputType[P]>
        }
      >
    >


  export type replies_discussionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    replie_id?: boolean
    discussion_id?: boolean
    createdAt?: boolean
    message?: boolean
    like?: boolean
    discussion?: boolean | discussionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["replies_discussion"]>

  export type replies_discussionSelectScalar = {
    replie_id?: boolean
    discussion_id?: boolean
    createdAt?: boolean
    message?: boolean
    like?: boolean
  }


  export type replies_discussionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discussion?: boolean | discussionDefaultArgs<ExtArgs>
  }


  export type $replies_discussionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "replies_discussion"
    objects: {
      discussion: Prisma.$discussionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      replie_id: string
      discussion_id: string
      createdAt: Date
      message: string
      like: number | null
    }, ExtArgs["result"]["replies_discussion"]>
    composites: {}
  }


  type replies_discussionGetPayload<S extends boolean | null | undefined | replies_discussionDefaultArgs> = $Result.GetResult<Prisma.$replies_discussionPayload, S>

  type replies_discussionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<replies_discussionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Replies_discussionCountAggregateInputType | true
    }

  export interface replies_discussionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['replies_discussion'], meta: { name: 'replies_discussion' } }
    /**
     * Find zero or one Replies_discussion that matches the filter.
     * @param {replies_discussionFindUniqueArgs} args - Arguments to find a Replies_discussion
     * @example
     * // Get one Replies_discussion
     * const replies_discussion = await prisma.replies_discussion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends replies_discussionFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, replies_discussionFindUniqueArgs<ExtArgs>>
    ): Prisma__replies_discussionClient<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Replies_discussion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {replies_discussionFindUniqueOrThrowArgs} args - Arguments to find a Replies_discussion
     * @example
     * // Get one Replies_discussion
     * const replies_discussion = await prisma.replies_discussion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends replies_discussionFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, replies_discussionFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__replies_discussionClient<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Replies_discussion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {replies_discussionFindFirstArgs} args - Arguments to find a Replies_discussion
     * @example
     * // Get one Replies_discussion
     * const replies_discussion = await prisma.replies_discussion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends replies_discussionFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, replies_discussionFindFirstArgs<ExtArgs>>
    ): Prisma__replies_discussionClient<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Replies_discussion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {replies_discussionFindFirstOrThrowArgs} args - Arguments to find a Replies_discussion
     * @example
     * // Get one Replies_discussion
     * const replies_discussion = await prisma.replies_discussion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends replies_discussionFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, replies_discussionFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__replies_discussionClient<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Replies_discussions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {replies_discussionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Replies_discussions
     * const replies_discussions = await prisma.replies_discussion.findMany()
     * 
     * // Get first 10 Replies_discussions
     * const replies_discussions = await prisma.replies_discussion.findMany({ take: 10 })
     * 
     * // Only select the `replie_id`
     * const replies_discussionWithReplie_idOnly = await prisma.replies_discussion.findMany({ select: { replie_id: true } })
     * 
    **/
    findMany<T extends replies_discussionFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, replies_discussionFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Replies_discussion.
     * @param {replies_discussionCreateArgs} args - Arguments to create a Replies_discussion.
     * @example
     * // Create one Replies_discussion
     * const Replies_discussion = await prisma.replies_discussion.create({
     *   data: {
     *     // ... data to create a Replies_discussion
     *   }
     * })
     * 
    **/
    create<T extends replies_discussionCreateArgs<ExtArgs>>(
      args: SelectSubset<T, replies_discussionCreateArgs<ExtArgs>>
    ): Prisma__replies_discussionClient<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Replies_discussions.
     * @param {replies_discussionCreateManyArgs} args - Arguments to create many Replies_discussions.
     * @example
     * // Create many Replies_discussions
     * const replies_discussion = await prisma.replies_discussion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends replies_discussionCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, replies_discussionCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Replies_discussions and returns the data saved in the database.
     * @param {replies_discussionCreateManyAndReturnArgs} args - Arguments to create many Replies_discussions.
     * @example
     * // Create many Replies_discussions
     * const replies_discussion = await prisma.replies_discussion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Replies_discussions and only return the `replie_id`
     * const replies_discussionWithReplie_idOnly = await prisma.replies_discussion.createManyAndReturn({ 
     *   select: { replie_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends replies_discussionCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, replies_discussionCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Replies_discussion.
     * @param {replies_discussionDeleteArgs} args - Arguments to delete one Replies_discussion.
     * @example
     * // Delete one Replies_discussion
     * const Replies_discussion = await prisma.replies_discussion.delete({
     *   where: {
     *     // ... filter to delete one Replies_discussion
     *   }
     * })
     * 
    **/
    delete<T extends replies_discussionDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, replies_discussionDeleteArgs<ExtArgs>>
    ): Prisma__replies_discussionClient<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Replies_discussion.
     * @param {replies_discussionUpdateArgs} args - Arguments to update one Replies_discussion.
     * @example
     * // Update one Replies_discussion
     * const replies_discussion = await prisma.replies_discussion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends replies_discussionUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, replies_discussionUpdateArgs<ExtArgs>>
    ): Prisma__replies_discussionClient<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Replies_discussions.
     * @param {replies_discussionDeleteManyArgs} args - Arguments to filter Replies_discussions to delete.
     * @example
     * // Delete a few Replies_discussions
     * const { count } = await prisma.replies_discussion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends replies_discussionDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, replies_discussionDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Replies_discussions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {replies_discussionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Replies_discussions
     * const replies_discussion = await prisma.replies_discussion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends replies_discussionUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, replies_discussionUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Replies_discussion.
     * @param {replies_discussionUpsertArgs} args - Arguments to update or create a Replies_discussion.
     * @example
     * // Update or create a Replies_discussion
     * const replies_discussion = await prisma.replies_discussion.upsert({
     *   create: {
     *     // ... data to create a Replies_discussion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Replies_discussion we want to update
     *   }
     * })
    **/
    upsert<T extends replies_discussionUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, replies_discussionUpsertArgs<ExtArgs>>
    ): Prisma__replies_discussionClient<$Result.GetResult<Prisma.$replies_discussionPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Replies_discussions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {replies_discussionCountArgs} args - Arguments to filter Replies_discussions to count.
     * @example
     * // Count the number of Replies_discussions
     * const count = await prisma.replies_discussion.count({
     *   where: {
     *     // ... the filter for the Replies_discussions we want to count
     *   }
     * })
    **/
    count<T extends replies_discussionCountArgs>(
      args?: Subset<T, replies_discussionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Replies_discussionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Replies_discussion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Replies_discussionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Replies_discussionAggregateArgs>(args: Subset<T, Replies_discussionAggregateArgs>): Prisma.PrismaPromise<GetReplies_discussionAggregateType<T>>

    /**
     * Group by Replies_discussion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {replies_discussionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends replies_discussionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: replies_discussionGroupByArgs['orderBy'] }
        : { orderBy?: replies_discussionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, replies_discussionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReplies_discussionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the replies_discussion model
   */
  readonly fields: replies_discussionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for replies_discussion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__replies_discussionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    discussion<T extends discussionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionDefaultArgs<ExtArgs>>): Prisma__discussionClient<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the replies_discussion model
   */ 
  interface replies_discussionFieldRefs {
    readonly replie_id: FieldRef<"replies_discussion", 'String'>
    readonly discussion_id: FieldRef<"replies_discussion", 'String'>
    readonly createdAt: FieldRef<"replies_discussion", 'DateTime'>
    readonly message: FieldRef<"replies_discussion", 'String'>
    readonly like: FieldRef<"replies_discussion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * replies_discussion findUnique
   */
  export type replies_discussionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * Filter, which replies_discussion to fetch.
     */
    where: replies_discussionWhereUniqueInput
  }

  /**
   * replies_discussion findUniqueOrThrow
   */
  export type replies_discussionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * Filter, which replies_discussion to fetch.
     */
    where: replies_discussionWhereUniqueInput
  }

  /**
   * replies_discussion findFirst
   */
  export type replies_discussionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * Filter, which replies_discussion to fetch.
     */
    where?: replies_discussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of replies_discussions to fetch.
     */
    orderBy?: replies_discussionOrderByWithRelationInput | replies_discussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for replies_discussions.
     */
    cursor?: replies_discussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` replies_discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` replies_discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of replies_discussions.
     */
    distinct?: Replies_discussionScalarFieldEnum | Replies_discussionScalarFieldEnum[]
  }

  /**
   * replies_discussion findFirstOrThrow
   */
  export type replies_discussionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * Filter, which replies_discussion to fetch.
     */
    where?: replies_discussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of replies_discussions to fetch.
     */
    orderBy?: replies_discussionOrderByWithRelationInput | replies_discussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for replies_discussions.
     */
    cursor?: replies_discussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` replies_discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` replies_discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of replies_discussions.
     */
    distinct?: Replies_discussionScalarFieldEnum | Replies_discussionScalarFieldEnum[]
  }

  /**
   * replies_discussion findMany
   */
  export type replies_discussionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * Filter, which replies_discussions to fetch.
     */
    where?: replies_discussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of replies_discussions to fetch.
     */
    orderBy?: replies_discussionOrderByWithRelationInput | replies_discussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing replies_discussions.
     */
    cursor?: replies_discussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` replies_discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` replies_discussions.
     */
    skip?: number
    distinct?: Replies_discussionScalarFieldEnum | Replies_discussionScalarFieldEnum[]
  }

  /**
   * replies_discussion create
   */
  export type replies_discussionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * The data needed to create a replies_discussion.
     */
    data: XOR<replies_discussionCreateInput, replies_discussionUncheckedCreateInput>
  }

  /**
   * replies_discussion createMany
   */
  export type replies_discussionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many replies_discussions.
     */
    data: replies_discussionCreateManyInput | replies_discussionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * replies_discussion createManyAndReturn
   */
  export type replies_discussionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * The data used to create many replies_discussions.
     */
    data: replies_discussionCreateManyInput | replies_discussionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * replies_discussion update
   */
  export type replies_discussionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * The data needed to update a replies_discussion.
     */
    data: XOR<replies_discussionUpdateInput, replies_discussionUncheckedUpdateInput>
    /**
     * Choose, which replies_discussion to update.
     */
    where: replies_discussionWhereUniqueInput
  }

  /**
   * replies_discussion updateMany
   */
  export type replies_discussionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update replies_discussions.
     */
    data: XOR<replies_discussionUpdateManyMutationInput, replies_discussionUncheckedUpdateManyInput>
    /**
     * Filter which replies_discussions to update
     */
    where?: replies_discussionWhereInput
  }

  /**
   * replies_discussion upsert
   */
  export type replies_discussionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * The filter to search for the replies_discussion to update in case it exists.
     */
    where: replies_discussionWhereUniqueInput
    /**
     * In case the replies_discussion found by the `where` argument doesn't exist, create a new replies_discussion with this data.
     */
    create: XOR<replies_discussionCreateInput, replies_discussionUncheckedCreateInput>
    /**
     * In case the replies_discussion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<replies_discussionUpdateInput, replies_discussionUncheckedUpdateInput>
  }

  /**
   * replies_discussion delete
   */
  export type replies_discussionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
    /**
     * Filter which replies_discussion to delete.
     */
    where: replies_discussionWhereUniqueInput
  }

  /**
   * replies_discussion deleteMany
   */
  export type replies_discussionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which replies_discussions to delete
     */
    where?: replies_discussionWhereInput
  }

  /**
   * replies_discussion without action
   */
  export type replies_discussionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the replies_discussion
     */
    select?: replies_discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: replies_discussionInclude<ExtArgs> | null
  }


  /**
   * Model social_media_usaha
   */

  export type AggregateSocial_media_usaha = {
    _count: Social_media_usahaCountAggregateOutputType | null
    _min: Social_media_usahaMinAggregateOutputType | null
    _max: Social_media_usahaMaxAggregateOutputType | null
  }

  export type Social_media_usahaMinAggregateOutputType = {
    social_media_id: string | null
    campaign_id: string | null
    team_id: string | null
    facebook: string | null
    instagram: string | null
    twitter: string | null
    telegram: string | null
    tiktok: string | null
    linkedin: string | null
  }

  export type Social_media_usahaMaxAggregateOutputType = {
    social_media_id: string | null
    campaign_id: string | null
    team_id: string | null
    facebook: string | null
    instagram: string | null
    twitter: string | null
    telegram: string | null
    tiktok: string | null
    linkedin: string | null
  }

  export type Social_media_usahaCountAggregateOutputType = {
    social_media_id: number
    campaign_id: number
    team_id: number
    facebook: number
    instagram: number
    twitter: number
    telegram: number
    tiktok: number
    linkedin: number
    _all: number
  }


  export type Social_media_usahaMinAggregateInputType = {
    social_media_id?: true
    campaign_id?: true
    team_id?: true
    facebook?: true
    instagram?: true
    twitter?: true
    telegram?: true
    tiktok?: true
    linkedin?: true
  }

  export type Social_media_usahaMaxAggregateInputType = {
    social_media_id?: true
    campaign_id?: true
    team_id?: true
    facebook?: true
    instagram?: true
    twitter?: true
    telegram?: true
    tiktok?: true
    linkedin?: true
  }

  export type Social_media_usahaCountAggregateInputType = {
    social_media_id?: true
    campaign_id?: true
    team_id?: true
    facebook?: true
    instagram?: true
    twitter?: true
    telegram?: true
    tiktok?: true
    linkedin?: true
    _all?: true
  }

  export type Social_media_usahaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which social_media_usaha to aggregate.
     */
    where?: social_media_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of social_media_usahas to fetch.
     */
    orderBy?: social_media_usahaOrderByWithRelationInput | social_media_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: social_media_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` social_media_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` social_media_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned social_media_usahas
    **/
    _count?: true | Social_media_usahaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Social_media_usahaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Social_media_usahaMaxAggregateInputType
  }

  export type GetSocial_media_usahaAggregateType<T extends Social_media_usahaAggregateArgs> = {
        [P in keyof T & keyof AggregateSocial_media_usaha]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSocial_media_usaha[P]>
      : GetScalarType<T[P], AggregateSocial_media_usaha[P]>
  }




  export type social_media_usahaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: social_media_usahaWhereInput
    orderBy?: social_media_usahaOrderByWithAggregationInput | social_media_usahaOrderByWithAggregationInput[]
    by: Social_media_usahaScalarFieldEnum[] | Social_media_usahaScalarFieldEnum
    having?: social_media_usahaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Social_media_usahaCountAggregateInputType | true
    _min?: Social_media_usahaMinAggregateInputType
    _max?: Social_media_usahaMaxAggregateInputType
  }

  export type Social_media_usahaGroupByOutputType = {
    social_media_id: string
    campaign_id: string | null
    team_id: string | null
    facebook: string | null
    instagram: string | null
    twitter: string | null
    telegram: string | null
    tiktok: string | null
    linkedin: string | null
    _count: Social_media_usahaCountAggregateOutputType | null
    _min: Social_media_usahaMinAggregateOutputType | null
    _max: Social_media_usahaMaxAggregateOutputType | null
  }

  type GetSocial_media_usahaGroupByPayload<T extends social_media_usahaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Social_media_usahaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Social_media_usahaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Social_media_usahaGroupByOutputType[P]>
            : GetScalarType<T[P], Social_media_usahaGroupByOutputType[P]>
        }
      >
    >


  export type social_media_usahaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    social_media_id?: boolean
    campaign_id?: boolean
    team_id?: boolean
    facebook?: boolean
    instagram?: boolean
    twitter?: boolean
    telegram?: boolean
    tiktok?: boolean
    linkedin?: boolean
    campaign?: boolean | social_media_usaha$campaignArgs<ExtArgs>
    team_campaign?: boolean | social_media_usaha$team_campaignArgs<ExtArgs>
  }, ExtArgs["result"]["social_media_usaha"]>

  export type social_media_usahaSelectScalar = {
    social_media_id?: boolean
    campaign_id?: boolean
    team_id?: boolean
    facebook?: boolean
    instagram?: boolean
    twitter?: boolean
    telegram?: boolean
    tiktok?: boolean
    linkedin?: boolean
  }


  export type social_media_usahaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | social_media_usaha$campaignArgs<ExtArgs>
    team_campaign?: boolean | social_media_usaha$team_campaignArgs<ExtArgs>
  }


  export type $social_media_usahaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "social_media_usaha"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs> | null
      team_campaign: Prisma.$team_campaignPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      social_media_id: string
      campaign_id: string | null
      team_id: string | null
      facebook: string | null
      instagram: string | null
      twitter: string | null
      telegram: string | null
      tiktok: string | null
      linkedin: string | null
    }, ExtArgs["result"]["social_media_usaha"]>
    composites: {}
  }


  type social_media_usahaGetPayload<S extends boolean | null | undefined | social_media_usahaDefaultArgs> = $Result.GetResult<Prisma.$social_media_usahaPayload, S>

  type social_media_usahaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<social_media_usahaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Social_media_usahaCountAggregateInputType | true
    }

  export interface social_media_usahaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['social_media_usaha'], meta: { name: 'social_media_usaha' } }
    /**
     * Find zero or one Social_media_usaha that matches the filter.
     * @param {social_media_usahaFindUniqueArgs} args - Arguments to find a Social_media_usaha
     * @example
     * // Get one Social_media_usaha
     * const social_media_usaha = await prisma.social_media_usaha.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends social_media_usahaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, social_media_usahaFindUniqueArgs<ExtArgs>>
    ): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Social_media_usaha that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {social_media_usahaFindUniqueOrThrowArgs} args - Arguments to find a Social_media_usaha
     * @example
     * // Get one Social_media_usaha
     * const social_media_usaha = await prisma.social_media_usaha.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends social_media_usahaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, social_media_usahaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Social_media_usaha that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_media_usahaFindFirstArgs} args - Arguments to find a Social_media_usaha
     * @example
     * // Get one Social_media_usaha
     * const social_media_usaha = await prisma.social_media_usaha.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends social_media_usahaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, social_media_usahaFindFirstArgs<ExtArgs>>
    ): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Social_media_usaha that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_media_usahaFindFirstOrThrowArgs} args - Arguments to find a Social_media_usaha
     * @example
     * // Get one Social_media_usaha
     * const social_media_usaha = await prisma.social_media_usaha.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends social_media_usahaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, social_media_usahaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Social_media_usahas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_media_usahaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Social_media_usahas
     * const social_media_usahas = await prisma.social_media_usaha.findMany()
     * 
     * // Get first 10 Social_media_usahas
     * const social_media_usahas = await prisma.social_media_usaha.findMany({ take: 10 })
     * 
     * // Only select the `social_media_id`
     * const social_media_usahaWithSocial_media_idOnly = await prisma.social_media_usaha.findMany({ select: { social_media_id: true } })
     * 
    **/
    findMany<T extends social_media_usahaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, social_media_usahaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Social_media_usaha.
     * @param {social_media_usahaCreateArgs} args - Arguments to create a Social_media_usaha.
     * @example
     * // Create one Social_media_usaha
     * const Social_media_usaha = await prisma.social_media_usaha.create({
     *   data: {
     *     // ... data to create a Social_media_usaha
     *   }
     * })
     * 
    **/
    create<T extends social_media_usahaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, social_media_usahaCreateArgs<ExtArgs>>
    ): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Social_media_usahas.
     * @param {social_media_usahaCreateManyArgs} args - Arguments to create many Social_media_usahas.
     * @example
     * // Create many Social_media_usahas
     * const social_media_usaha = await prisma.social_media_usaha.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends social_media_usahaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, social_media_usahaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Social_media_usahas and returns the data saved in the database.
     * @param {social_media_usahaCreateManyAndReturnArgs} args - Arguments to create many Social_media_usahas.
     * @example
     * // Create many Social_media_usahas
     * const social_media_usaha = await prisma.social_media_usaha.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Social_media_usahas and only return the `social_media_id`
     * const social_media_usahaWithSocial_media_idOnly = await prisma.social_media_usaha.createManyAndReturn({ 
     *   select: { social_media_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends social_media_usahaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, social_media_usahaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Social_media_usaha.
     * @param {social_media_usahaDeleteArgs} args - Arguments to delete one Social_media_usaha.
     * @example
     * // Delete one Social_media_usaha
     * const Social_media_usaha = await prisma.social_media_usaha.delete({
     *   where: {
     *     // ... filter to delete one Social_media_usaha
     *   }
     * })
     * 
    **/
    delete<T extends social_media_usahaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, social_media_usahaDeleteArgs<ExtArgs>>
    ): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Social_media_usaha.
     * @param {social_media_usahaUpdateArgs} args - Arguments to update one Social_media_usaha.
     * @example
     * // Update one Social_media_usaha
     * const social_media_usaha = await prisma.social_media_usaha.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends social_media_usahaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, social_media_usahaUpdateArgs<ExtArgs>>
    ): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Social_media_usahas.
     * @param {social_media_usahaDeleteManyArgs} args - Arguments to filter Social_media_usahas to delete.
     * @example
     * // Delete a few Social_media_usahas
     * const { count } = await prisma.social_media_usaha.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends social_media_usahaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, social_media_usahaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Social_media_usahas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_media_usahaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Social_media_usahas
     * const social_media_usaha = await prisma.social_media_usaha.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends social_media_usahaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, social_media_usahaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Social_media_usaha.
     * @param {social_media_usahaUpsertArgs} args - Arguments to update or create a Social_media_usaha.
     * @example
     * // Update or create a Social_media_usaha
     * const social_media_usaha = await prisma.social_media_usaha.upsert({
     *   create: {
     *     // ... data to create a Social_media_usaha
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Social_media_usaha we want to update
     *   }
     * })
    **/
    upsert<T extends social_media_usahaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, social_media_usahaUpsertArgs<ExtArgs>>
    ): Prisma__social_media_usahaClient<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Social_media_usahas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_media_usahaCountArgs} args - Arguments to filter Social_media_usahas to count.
     * @example
     * // Count the number of Social_media_usahas
     * const count = await prisma.social_media_usaha.count({
     *   where: {
     *     // ... the filter for the Social_media_usahas we want to count
     *   }
     * })
    **/
    count<T extends social_media_usahaCountArgs>(
      args?: Subset<T, social_media_usahaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Social_media_usahaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Social_media_usaha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Social_media_usahaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Social_media_usahaAggregateArgs>(args: Subset<T, Social_media_usahaAggregateArgs>): Prisma.PrismaPromise<GetSocial_media_usahaAggregateType<T>>

    /**
     * Group by Social_media_usaha.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_media_usahaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends social_media_usahaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: social_media_usahaGroupByArgs['orderBy'] }
        : { orderBy?: social_media_usahaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, social_media_usahaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSocial_media_usahaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the social_media_usaha model
   */
  readonly fields: social_media_usahaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for social_media_usaha.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__social_media_usahaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends social_media_usaha$campaignArgs<ExtArgs> = {}>(args?: Subset<T, social_media_usaha$campaignArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    team_campaign<T extends social_media_usaha$team_campaignArgs<ExtArgs> = {}>(args?: Subset<T, social_media_usaha$team_campaignArgs<ExtArgs>>): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the social_media_usaha model
   */ 
  interface social_media_usahaFieldRefs {
    readonly social_media_id: FieldRef<"social_media_usaha", 'String'>
    readonly campaign_id: FieldRef<"social_media_usaha", 'String'>
    readonly team_id: FieldRef<"social_media_usaha", 'String'>
    readonly facebook: FieldRef<"social_media_usaha", 'String'>
    readonly instagram: FieldRef<"social_media_usaha", 'String'>
    readonly twitter: FieldRef<"social_media_usaha", 'String'>
    readonly telegram: FieldRef<"social_media_usaha", 'String'>
    readonly tiktok: FieldRef<"social_media_usaha", 'String'>
    readonly linkedin: FieldRef<"social_media_usaha", 'String'>
  }
    

  // Custom InputTypes
  /**
   * social_media_usaha findUnique
   */
  export type social_media_usahaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * Filter, which social_media_usaha to fetch.
     */
    where: social_media_usahaWhereUniqueInput
  }

  /**
   * social_media_usaha findUniqueOrThrow
   */
  export type social_media_usahaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * Filter, which social_media_usaha to fetch.
     */
    where: social_media_usahaWhereUniqueInput
  }

  /**
   * social_media_usaha findFirst
   */
  export type social_media_usahaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * Filter, which social_media_usaha to fetch.
     */
    where?: social_media_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of social_media_usahas to fetch.
     */
    orderBy?: social_media_usahaOrderByWithRelationInput | social_media_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for social_media_usahas.
     */
    cursor?: social_media_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` social_media_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` social_media_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of social_media_usahas.
     */
    distinct?: Social_media_usahaScalarFieldEnum | Social_media_usahaScalarFieldEnum[]
  }

  /**
   * social_media_usaha findFirstOrThrow
   */
  export type social_media_usahaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * Filter, which social_media_usaha to fetch.
     */
    where?: social_media_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of social_media_usahas to fetch.
     */
    orderBy?: social_media_usahaOrderByWithRelationInput | social_media_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for social_media_usahas.
     */
    cursor?: social_media_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` social_media_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` social_media_usahas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of social_media_usahas.
     */
    distinct?: Social_media_usahaScalarFieldEnum | Social_media_usahaScalarFieldEnum[]
  }

  /**
   * social_media_usaha findMany
   */
  export type social_media_usahaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * Filter, which social_media_usahas to fetch.
     */
    where?: social_media_usahaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of social_media_usahas to fetch.
     */
    orderBy?: social_media_usahaOrderByWithRelationInput | social_media_usahaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing social_media_usahas.
     */
    cursor?: social_media_usahaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` social_media_usahas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` social_media_usahas.
     */
    skip?: number
    distinct?: Social_media_usahaScalarFieldEnum | Social_media_usahaScalarFieldEnum[]
  }

  /**
   * social_media_usaha create
   */
  export type social_media_usahaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * The data needed to create a social_media_usaha.
     */
    data: XOR<social_media_usahaCreateInput, social_media_usahaUncheckedCreateInput>
  }

  /**
   * social_media_usaha createMany
   */
  export type social_media_usahaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many social_media_usahas.
     */
    data: social_media_usahaCreateManyInput | social_media_usahaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * social_media_usaha createManyAndReturn
   */
  export type social_media_usahaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * The data used to create many social_media_usahas.
     */
    data: social_media_usahaCreateManyInput | social_media_usahaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * social_media_usaha update
   */
  export type social_media_usahaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * The data needed to update a social_media_usaha.
     */
    data: XOR<social_media_usahaUpdateInput, social_media_usahaUncheckedUpdateInput>
    /**
     * Choose, which social_media_usaha to update.
     */
    where: social_media_usahaWhereUniqueInput
  }

  /**
   * social_media_usaha updateMany
   */
  export type social_media_usahaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update social_media_usahas.
     */
    data: XOR<social_media_usahaUpdateManyMutationInput, social_media_usahaUncheckedUpdateManyInput>
    /**
     * Filter which social_media_usahas to update
     */
    where?: social_media_usahaWhereInput
  }

  /**
   * social_media_usaha upsert
   */
  export type social_media_usahaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * The filter to search for the social_media_usaha to update in case it exists.
     */
    where: social_media_usahaWhereUniqueInput
    /**
     * In case the social_media_usaha found by the `where` argument doesn't exist, create a new social_media_usaha with this data.
     */
    create: XOR<social_media_usahaCreateInput, social_media_usahaUncheckedCreateInput>
    /**
     * In case the social_media_usaha was found with the provided `where` argument, update it with this data.
     */
    update: XOR<social_media_usahaUpdateInput, social_media_usahaUncheckedUpdateInput>
  }

  /**
   * social_media_usaha delete
   */
  export type social_media_usahaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    /**
     * Filter which social_media_usaha to delete.
     */
    where: social_media_usahaWhereUniqueInput
  }

  /**
   * social_media_usaha deleteMany
   */
  export type social_media_usahaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which social_media_usahas to delete
     */
    where?: social_media_usahaWhereInput
  }

  /**
   * social_media_usaha.campaign
   */
  export type social_media_usaha$campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    where?: campaignWhereInput
  }

  /**
   * social_media_usaha.team_campaign
   */
  export type social_media_usaha$team_campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    where?: team_campaignWhereInput
  }

  /**
   * social_media_usaha without action
   */
  export type social_media_usahaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
  }


  /**
   * Model team_campaign
   */

  export type AggregateTeam_campaign = {
    _count: Team_campaignCountAggregateOutputType | null
    _min: Team_campaignMinAggregateOutputType | null
    _max: Team_campaignMaxAggregateOutputType | null
  }

  export type Team_campaignMinAggregateOutputType = {
    team_id: string | null
    campaign_id: string | null
    nama_lengkap: string | null
    jabatan: string | null
  }

  export type Team_campaignMaxAggregateOutputType = {
    team_id: string | null
    campaign_id: string | null
    nama_lengkap: string | null
    jabatan: string | null
  }

  export type Team_campaignCountAggregateOutputType = {
    team_id: number
    campaign_id: number
    nama_lengkap: number
    jabatan: number
    _all: number
  }


  export type Team_campaignMinAggregateInputType = {
    team_id?: true
    campaign_id?: true
    nama_lengkap?: true
    jabatan?: true
  }

  export type Team_campaignMaxAggregateInputType = {
    team_id?: true
    campaign_id?: true
    nama_lengkap?: true
    jabatan?: true
  }

  export type Team_campaignCountAggregateInputType = {
    team_id?: true
    campaign_id?: true
    nama_lengkap?: true
    jabatan?: true
    _all?: true
  }

  export type Team_campaignAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team_campaign to aggregate.
     */
    where?: team_campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_campaigns to fetch.
     */
    orderBy?: team_campaignOrderByWithRelationInput | team_campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: team_campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned team_campaigns
    **/
    _count?: true | Team_campaignCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Team_campaignMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Team_campaignMaxAggregateInputType
  }

  export type GetTeam_campaignAggregateType<T extends Team_campaignAggregateArgs> = {
        [P in keyof T & keyof AggregateTeam_campaign]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTeam_campaign[P]>
      : GetScalarType<T[P], AggregateTeam_campaign[P]>
  }




  export type team_campaignGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_campaignWhereInput
    orderBy?: team_campaignOrderByWithAggregationInput | team_campaignOrderByWithAggregationInput[]
    by: Team_campaignScalarFieldEnum[] | Team_campaignScalarFieldEnum
    having?: team_campaignScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Team_campaignCountAggregateInputType | true
    _min?: Team_campaignMinAggregateInputType
    _max?: Team_campaignMaxAggregateInputType
  }

  export type Team_campaignGroupByOutputType = {
    team_id: string
    campaign_id: string
    nama_lengkap: string
    jabatan: string
    _count: Team_campaignCountAggregateOutputType | null
    _min: Team_campaignMinAggregateOutputType | null
    _max: Team_campaignMaxAggregateOutputType | null
  }

  type GetTeam_campaignGroupByPayload<T extends team_campaignGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Team_campaignGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Team_campaignGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Team_campaignGroupByOutputType[P]>
            : GetScalarType<T[P], Team_campaignGroupByOutputType[P]>
        }
      >
    >


  export type team_campaignSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    team_id?: boolean
    campaign_id?: boolean
    nama_lengkap?: boolean
    jabatan?: boolean
    social_media_usaha?: boolean | team_campaign$social_media_usahaArgs<ExtArgs>
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    _count?: boolean | Team_campaignCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_campaign"]>

  export type team_campaignSelectScalar = {
    team_id?: boolean
    campaign_id?: boolean
    nama_lengkap?: boolean
    jabatan?: boolean
  }


  export type team_campaignInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    social_media_usaha?: boolean | team_campaign$social_media_usahaArgs<ExtArgs>
    campaign?: boolean | campaignDefaultArgs<ExtArgs>
    _count?: boolean | Team_campaignCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $team_campaignPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "team_campaign"
    objects: {
      social_media_usaha: Prisma.$social_media_usahaPayload<ExtArgs>[]
      campaign: Prisma.$campaignPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      team_id: string
      campaign_id: string
      nama_lengkap: string
      jabatan: string
    }, ExtArgs["result"]["team_campaign"]>
    composites: {}
  }


  type team_campaignGetPayload<S extends boolean | null | undefined | team_campaignDefaultArgs> = $Result.GetResult<Prisma.$team_campaignPayload, S>

  type team_campaignCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<team_campaignFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Team_campaignCountAggregateInputType | true
    }

  export interface team_campaignDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['team_campaign'], meta: { name: 'team_campaign' } }
    /**
     * Find zero or one Team_campaign that matches the filter.
     * @param {team_campaignFindUniqueArgs} args - Arguments to find a Team_campaign
     * @example
     * // Get one Team_campaign
     * const team_campaign = await prisma.team_campaign.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends team_campaignFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, team_campaignFindUniqueArgs<ExtArgs>>
    ): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Team_campaign that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {team_campaignFindUniqueOrThrowArgs} args - Arguments to find a Team_campaign
     * @example
     * // Get one Team_campaign
     * const team_campaign = await prisma.team_campaign.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends team_campaignFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, team_campaignFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Team_campaign that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_campaignFindFirstArgs} args - Arguments to find a Team_campaign
     * @example
     * // Get one Team_campaign
     * const team_campaign = await prisma.team_campaign.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends team_campaignFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, team_campaignFindFirstArgs<ExtArgs>>
    ): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Team_campaign that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_campaignFindFirstOrThrowArgs} args - Arguments to find a Team_campaign
     * @example
     * // Get one Team_campaign
     * const team_campaign = await prisma.team_campaign.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends team_campaignFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, team_campaignFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Team_campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_campaignFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Team_campaigns
     * const team_campaigns = await prisma.team_campaign.findMany()
     * 
     * // Get first 10 Team_campaigns
     * const team_campaigns = await prisma.team_campaign.findMany({ take: 10 })
     * 
     * // Only select the `team_id`
     * const team_campaignWithTeam_idOnly = await prisma.team_campaign.findMany({ select: { team_id: true } })
     * 
    **/
    findMany<T extends team_campaignFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, team_campaignFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Team_campaign.
     * @param {team_campaignCreateArgs} args - Arguments to create a Team_campaign.
     * @example
     * // Create one Team_campaign
     * const Team_campaign = await prisma.team_campaign.create({
     *   data: {
     *     // ... data to create a Team_campaign
     *   }
     * })
     * 
    **/
    create<T extends team_campaignCreateArgs<ExtArgs>>(
      args: SelectSubset<T, team_campaignCreateArgs<ExtArgs>>
    ): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Team_campaigns.
     * @param {team_campaignCreateManyArgs} args - Arguments to create many Team_campaigns.
     * @example
     * // Create many Team_campaigns
     * const team_campaign = await prisma.team_campaign.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends team_campaignCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, team_campaignCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Team_campaigns and returns the data saved in the database.
     * @param {team_campaignCreateManyAndReturnArgs} args - Arguments to create many Team_campaigns.
     * @example
     * // Create many Team_campaigns
     * const team_campaign = await prisma.team_campaign.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Team_campaigns and only return the `team_id`
     * const team_campaignWithTeam_idOnly = await prisma.team_campaign.createManyAndReturn({ 
     *   select: { team_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends team_campaignCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, team_campaignCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Team_campaign.
     * @param {team_campaignDeleteArgs} args - Arguments to delete one Team_campaign.
     * @example
     * // Delete one Team_campaign
     * const Team_campaign = await prisma.team_campaign.delete({
     *   where: {
     *     // ... filter to delete one Team_campaign
     *   }
     * })
     * 
    **/
    delete<T extends team_campaignDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, team_campaignDeleteArgs<ExtArgs>>
    ): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Team_campaign.
     * @param {team_campaignUpdateArgs} args - Arguments to update one Team_campaign.
     * @example
     * // Update one Team_campaign
     * const team_campaign = await prisma.team_campaign.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends team_campaignUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, team_campaignUpdateArgs<ExtArgs>>
    ): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Team_campaigns.
     * @param {team_campaignDeleteManyArgs} args - Arguments to filter Team_campaigns to delete.
     * @example
     * // Delete a few Team_campaigns
     * const { count } = await prisma.team_campaign.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends team_campaignDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, team_campaignDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_campaignUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Team_campaigns
     * const team_campaign = await prisma.team_campaign.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends team_campaignUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, team_campaignUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Team_campaign.
     * @param {team_campaignUpsertArgs} args - Arguments to update or create a Team_campaign.
     * @example
     * // Update or create a Team_campaign
     * const team_campaign = await prisma.team_campaign.upsert({
     *   create: {
     *     // ... data to create a Team_campaign
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Team_campaign we want to update
     *   }
     * })
    **/
    upsert<T extends team_campaignUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, team_campaignUpsertArgs<ExtArgs>>
    ): Prisma__team_campaignClient<$Result.GetResult<Prisma.$team_campaignPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Team_campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_campaignCountArgs} args - Arguments to filter Team_campaigns to count.
     * @example
     * // Count the number of Team_campaigns
     * const count = await prisma.team_campaign.count({
     *   where: {
     *     // ... the filter for the Team_campaigns we want to count
     *   }
     * })
    **/
    count<T extends team_campaignCountArgs>(
      args?: Subset<T, team_campaignCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Team_campaignCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Team_campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_campaignAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Team_campaignAggregateArgs>(args: Subset<T, Team_campaignAggregateArgs>): Prisma.PrismaPromise<GetTeam_campaignAggregateType<T>>

    /**
     * Group by Team_campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_campaignGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends team_campaignGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: team_campaignGroupByArgs['orderBy'] }
        : { orderBy?: team_campaignGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, team_campaignGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTeam_campaignGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the team_campaign model
   */
  readonly fields: team_campaignFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for team_campaign.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__team_campaignClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    social_media_usaha<T extends team_campaign$social_media_usahaArgs<ExtArgs> = {}>(args?: Subset<T, team_campaign$social_media_usahaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$social_media_usahaPayload<ExtArgs>, T, 'findMany'> | Null>;

    campaign<T extends campaignDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignDefaultArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the team_campaign model
   */ 
  interface team_campaignFieldRefs {
    readonly team_id: FieldRef<"team_campaign", 'String'>
    readonly campaign_id: FieldRef<"team_campaign", 'String'>
    readonly nama_lengkap: FieldRef<"team_campaign", 'String'>
    readonly jabatan: FieldRef<"team_campaign", 'String'>
  }
    

  // Custom InputTypes
  /**
   * team_campaign findUnique
   */
  export type team_campaignFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * Filter, which team_campaign to fetch.
     */
    where: team_campaignWhereUniqueInput
  }

  /**
   * team_campaign findUniqueOrThrow
   */
  export type team_campaignFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * Filter, which team_campaign to fetch.
     */
    where: team_campaignWhereUniqueInput
  }

  /**
   * team_campaign findFirst
   */
  export type team_campaignFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * Filter, which team_campaign to fetch.
     */
    where?: team_campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_campaigns to fetch.
     */
    orderBy?: team_campaignOrderByWithRelationInput | team_campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for team_campaigns.
     */
    cursor?: team_campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of team_campaigns.
     */
    distinct?: Team_campaignScalarFieldEnum | Team_campaignScalarFieldEnum[]
  }

  /**
   * team_campaign findFirstOrThrow
   */
  export type team_campaignFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * Filter, which team_campaign to fetch.
     */
    where?: team_campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_campaigns to fetch.
     */
    orderBy?: team_campaignOrderByWithRelationInput | team_campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for team_campaigns.
     */
    cursor?: team_campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of team_campaigns.
     */
    distinct?: Team_campaignScalarFieldEnum | Team_campaignScalarFieldEnum[]
  }

  /**
   * team_campaign findMany
   */
  export type team_campaignFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * Filter, which team_campaigns to fetch.
     */
    where?: team_campaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_campaigns to fetch.
     */
    orderBy?: team_campaignOrderByWithRelationInput | team_campaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing team_campaigns.
     */
    cursor?: team_campaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_campaigns.
     */
    skip?: number
    distinct?: Team_campaignScalarFieldEnum | Team_campaignScalarFieldEnum[]
  }

  /**
   * team_campaign create
   */
  export type team_campaignCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * The data needed to create a team_campaign.
     */
    data: XOR<team_campaignCreateInput, team_campaignUncheckedCreateInput>
  }

  /**
   * team_campaign createMany
   */
  export type team_campaignCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many team_campaigns.
     */
    data: team_campaignCreateManyInput | team_campaignCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * team_campaign createManyAndReturn
   */
  export type team_campaignCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * The data used to create many team_campaigns.
     */
    data: team_campaignCreateManyInput | team_campaignCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * team_campaign update
   */
  export type team_campaignUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * The data needed to update a team_campaign.
     */
    data: XOR<team_campaignUpdateInput, team_campaignUncheckedUpdateInput>
    /**
     * Choose, which team_campaign to update.
     */
    where: team_campaignWhereUniqueInput
  }

  /**
   * team_campaign updateMany
   */
  export type team_campaignUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update team_campaigns.
     */
    data: XOR<team_campaignUpdateManyMutationInput, team_campaignUncheckedUpdateManyInput>
    /**
     * Filter which team_campaigns to update
     */
    where?: team_campaignWhereInput
  }

  /**
   * team_campaign upsert
   */
  export type team_campaignUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * The filter to search for the team_campaign to update in case it exists.
     */
    where: team_campaignWhereUniqueInput
    /**
     * In case the team_campaign found by the `where` argument doesn't exist, create a new team_campaign with this data.
     */
    create: XOR<team_campaignCreateInput, team_campaignUncheckedCreateInput>
    /**
     * In case the team_campaign was found with the provided `where` argument, update it with this data.
     */
    update: XOR<team_campaignUpdateInput, team_campaignUncheckedUpdateInput>
  }

  /**
   * team_campaign delete
   */
  export type team_campaignDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
    /**
     * Filter which team_campaign to delete.
     */
    where: team_campaignWhereUniqueInput
  }

  /**
   * team_campaign deleteMany
   */
  export type team_campaignDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team_campaigns to delete
     */
    where?: team_campaignWhereInput
  }

  /**
   * team_campaign.social_media_usaha
   */
  export type team_campaign$social_media_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_media_usaha
     */
    select?: social_media_usahaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_media_usahaInclude<ExtArgs> | null
    where?: social_media_usahaWhereInput
    orderBy?: social_media_usahaOrderByWithRelationInput | social_media_usahaOrderByWithRelationInput[]
    cursor?: social_media_usahaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Social_media_usahaScalarFieldEnum | Social_media_usahaScalarFieldEnum[]
  }

  /**
   * team_campaign without action
   */
  export type team_campaignDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_campaign
     */
    select?: team_campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_campaignInclude<ExtArgs> | null
  }


  /**
   * Model transaction
   */

  export type AggregateTransaction = {
    _count: TransactionCountAggregateOutputType | null
    _avg: TransactionAvgAggregateOutputType | null
    _sum: TransactionSumAggregateOutputType | null
    _min: TransactionMinAggregateOutputType | null
    _max: TransactionMaxAggregateOutputType | null
  }

  export type TransactionAvgAggregateOutputType = {
    amount: number | null
  }

  export type TransactionSumAggregateOutputType = {
    amount: bigint | null
  }

  export type TransactionMinAggregateOutputType = {
    transaction_id: string | null
    transaction_type: $Enums.transaction_type_enum | null
    transaction_status: $Enums.transaction_status_enum | null
    trans_date: Date | null
    payment: string | null
    amount: bigint | null
    campaign_id: string | null
    user_id: string | null
  }

  export type TransactionMaxAggregateOutputType = {
    transaction_id: string | null
    transaction_type: $Enums.transaction_type_enum | null
    transaction_status: $Enums.transaction_status_enum | null
    trans_date: Date | null
    payment: string | null
    amount: bigint | null
    campaign_id: string | null
    user_id: string | null
  }

  export type TransactionCountAggregateOutputType = {
    transaction_id: number
    transaction_type: number
    transaction_status: number
    trans_date: number
    payment: number
    amount: number
    campaign_id: number
    user_id: number
    _all: number
  }


  export type TransactionAvgAggregateInputType = {
    amount?: true
  }

  export type TransactionSumAggregateInputType = {
    amount?: true
  }

  export type TransactionMinAggregateInputType = {
    transaction_id?: true
    transaction_type?: true
    transaction_status?: true
    trans_date?: true
    payment?: true
    amount?: true
    campaign_id?: true
    user_id?: true
  }

  export type TransactionMaxAggregateInputType = {
    transaction_id?: true
    transaction_type?: true
    transaction_status?: true
    trans_date?: true
    payment?: true
    amount?: true
    campaign_id?: true
    user_id?: true
  }

  export type TransactionCountAggregateInputType = {
    transaction_id?: true
    transaction_type?: true
    transaction_status?: true
    trans_date?: true
    payment?: true
    amount?: true
    campaign_id?: true
    user_id?: true
    _all?: true
  }

  export type TransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaction to aggregate.
     */
    where?: transactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionOrderByWithRelationInput | transactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transactions
    **/
    _count?: true | TransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionMaxAggregateInputType
  }

  export type GetTransactionAggregateType<T extends TransactionAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaction[P]>
      : GetScalarType<T[P], AggregateTransaction[P]>
  }




  export type transactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionWhereInput
    orderBy?: transactionOrderByWithAggregationInput | transactionOrderByWithAggregationInput[]
    by: TransactionScalarFieldEnum[] | TransactionScalarFieldEnum
    having?: transactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionCountAggregateInputType | true
    _avg?: TransactionAvgAggregateInputType
    _sum?: TransactionSumAggregateInputType
    _min?: TransactionMinAggregateInputType
    _max?: TransactionMaxAggregateInputType
  }

  export type TransactionGroupByOutputType = {
    transaction_id: string
    transaction_type: $Enums.transaction_type_enum | null
    transaction_status: $Enums.transaction_status_enum | null
    trans_date: Date | null
    payment: string | null
    amount: bigint | null
    campaign_id: string | null
    user_id: string | null
    _count: TransactionCountAggregateOutputType | null
    _avg: TransactionAvgAggregateOutputType | null
    _sum: TransactionSumAggregateOutputType | null
    _min: TransactionMinAggregateOutputType | null
    _max: TransactionMaxAggregateOutputType | null
  }

  type GetTransactionGroupByPayload<T extends transactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionGroupByOutputType[P]>
        }
      >
    >


  export type transactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transaction_id?: boolean
    transaction_type?: boolean
    transaction_status?: boolean
    trans_date?: boolean
    payment?: boolean
    amount?: boolean
    campaign_id?: boolean
    user_id?: boolean
    campaign?: boolean | transaction$campaignArgs<ExtArgs>
    user?: boolean | transaction$userArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type transactionSelectScalar = {
    transaction_id?: boolean
    transaction_type?: boolean
    transaction_status?: boolean
    trans_date?: boolean
    payment?: boolean
    amount?: boolean
    campaign_id?: boolean
    user_id?: boolean
  }


  export type transactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | transaction$campaignArgs<ExtArgs>
    user?: boolean | transaction$userArgs<ExtArgs>
  }


  export type $transactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transaction"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      transaction_id: string
      transaction_type: $Enums.transaction_type_enum | null
      transaction_status: $Enums.transaction_status_enum | null
      trans_date: Date | null
      payment: string | null
      amount: bigint | null
      campaign_id: string | null
      user_id: string | null
    }, ExtArgs["result"]["transaction"]>
    composites: {}
  }


  type transactionGetPayload<S extends boolean | null | undefined | transactionDefaultArgs> = $Result.GetResult<Prisma.$transactionPayload, S>

  type transactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<transactionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TransactionCountAggregateInputType | true
    }

  export interface transactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transaction'], meta: { name: 'transaction' } }
    /**
     * Find zero or one Transaction that matches the filter.
     * @param {transactionFindUniqueArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends transactionFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, transactionFindUniqueArgs<ExtArgs>>
    ): Prisma__transactionClient<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Transaction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {transactionFindUniqueOrThrowArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends transactionFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, transactionFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__transactionClient<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Transaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionFindFirstArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends transactionFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, transactionFindFirstArgs<ExtArgs>>
    ): Prisma__transactionClient<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Transaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionFindFirstOrThrowArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends transactionFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, transactionFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__transactionClient<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transactions
     * const transactions = await prisma.transaction.findMany()
     * 
     * // Get first 10 Transactions
     * const transactions = await prisma.transaction.findMany({ take: 10 })
     * 
     * // Only select the `transaction_id`
     * const transactionWithTransaction_idOnly = await prisma.transaction.findMany({ select: { transaction_id: true } })
     * 
    **/
    findMany<T extends transactionFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, transactionFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Transaction.
     * @param {transactionCreateArgs} args - Arguments to create a Transaction.
     * @example
     * // Create one Transaction
     * const Transaction = await prisma.transaction.create({
     *   data: {
     *     // ... data to create a Transaction
     *   }
     * })
     * 
    **/
    create<T extends transactionCreateArgs<ExtArgs>>(
      args: SelectSubset<T, transactionCreateArgs<ExtArgs>>
    ): Prisma__transactionClient<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Transactions.
     * @param {transactionCreateManyArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transaction = await prisma.transaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends transactionCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, transactionCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transactions and returns the data saved in the database.
     * @param {transactionCreateManyAndReturnArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transaction = await prisma.transaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transactions and only return the `transaction_id`
     * const transactionWithTransaction_idOnly = await prisma.transaction.createManyAndReturn({ 
     *   select: { transaction_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends transactionCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, transactionCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Transaction.
     * @param {transactionDeleteArgs} args - Arguments to delete one Transaction.
     * @example
     * // Delete one Transaction
     * const Transaction = await prisma.transaction.delete({
     *   where: {
     *     // ... filter to delete one Transaction
     *   }
     * })
     * 
    **/
    delete<T extends transactionDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, transactionDeleteArgs<ExtArgs>>
    ): Prisma__transactionClient<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Transaction.
     * @param {transactionUpdateArgs} args - Arguments to update one Transaction.
     * @example
     * // Update one Transaction
     * const transaction = await prisma.transaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends transactionUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, transactionUpdateArgs<ExtArgs>>
    ): Prisma__transactionClient<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Transactions.
     * @param {transactionDeleteManyArgs} args - Arguments to filter Transactions to delete.
     * @example
     * // Delete a few Transactions
     * const { count } = await prisma.transaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends transactionDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, transactionDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transactions
     * const transaction = await prisma.transaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends transactionUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, transactionUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Transaction.
     * @param {transactionUpsertArgs} args - Arguments to update or create a Transaction.
     * @example
     * // Update or create a Transaction
     * const transaction = await prisma.transaction.upsert({
     *   create: {
     *     // ... data to create a Transaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaction we want to update
     *   }
     * })
    **/
    upsert<T extends transactionUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, transactionUpsertArgs<ExtArgs>>
    ): Prisma__transactionClient<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionCountArgs} args - Arguments to filter Transactions to count.
     * @example
     * // Count the number of Transactions
     * const count = await prisma.transaction.count({
     *   where: {
     *     // ... the filter for the Transactions we want to count
     *   }
     * })
    **/
    count<T extends transactionCountArgs>(
      args?: Subset<T, transactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionAggregateArgs>(args: Subset<T, TransactionAggregateArgs>): Prisma.PrismaPromise<GetTransactionAggregateType<T>>

    /**
     * Group by Transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transactionGroupByArgs['orderBy'] }
        : { orderBy?: transactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transaction model
   */
  readonly fields: transactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends transaction$campaignArgs<ExtArgs> = {}>(args?: Subset<T, transaction$campaignArgs<ExtArgs>>): Prisma__campaignClient<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    user<T extends transaction$userArgs<ExtArgs> = {}>(args?: Subset<T, transaction$userArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the transaction model
   */ 
  interface transactionFieldRefs {
    readonly transaction_id: FieldRef<"transaction", 'String'>
    readonly transaction_type: FieldRef<"transaction", 'transaction_type_enum'>
    readonly transaction_status: FieldRef<"transaction", 'transaction_status_enum'>
    readonly trans_date: FieldRef<"transaction", 'DateTime'>
    readonly payment: FieldRef<"transaction", 'String'>
    readonly amount: FieldRef<"transaction", 'BigInt'>
    readonly campaign_id: FieldRef<"transaction", 'String'>
    readonly user_id: FieldRef<"transaction", 'String'>
  }
    

  // Custom InputTypes
  /**
   * transaction findUnique
   */
  export type transactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * Filter, which transaction to fetch.
     */
    where: transactionWhereUniqueInput
  }

  /**
   * transaction findUniqueOrThrow
   */
  export type transactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * Filter, which transaction to fetch.
     */
    where: transactionWhereUniqueInput
  }

  /**
   * transaction findFirst
   */
  export type transactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * Filter, which transaction to fetch.
     */
    where?: transactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionOrderByWithRelationInput | transactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transactions.
     */
    cursor?: transactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transactions.
     */
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * transaction findFirstOrThrow
   */
  export type transactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * Filter, which transaction to fetch.
     */
    where?: transactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionOrderByWithRelationInput | transactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transactions.
     */
    cursor?: transactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transactions.
     */
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * transaction findMany
   */
  export type transactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where?: transactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionOrderByWithRelationInput | transactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transactions.
     */
    cursor?: transactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * transaction create
   */
  export type transactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * The data needed to create a transaction.
     */
    data: XOR<transactionCreateInput, transactionUncheckedCreateInput>
  }

  /**
   * transaction createMany
   */
  export type transactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transactions.
     */
    data: transactionCreateManyInput | transactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transaction createManyAndReturn
   */
  export type transactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * The data used to create many transactions.
     */
    data: transactionCreateManyInput | transactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transaction update
   */
  export type transactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * The data needed to update a transaction.
     */
    data: XOR<transactionUpdateInput, transactionUncheckedUpdateInput>
    /**
     * Choose, which transaction to update.
     */
    where: transactionWhereUniqueInput
  }

  /**
   * transaction updateMany
   */
  export type transactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transactions.
     */
    data: XOR<transactionUpdateManyMutationInput, transactionUncheckedUpdateManyInput>
    /**
     * Filter which transactions to update
     */
    where?: transactionWhereInput
  }

  /**
   * transaction upsert
   */
  export type transactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * The filter to search for the transaction to update in case it exists.
     */
    where: transactionWhereUniqueInput
    /**
     * In case the transaction found by the `where` argument doesn't exist, create a new transaction with this data.
     */
    create: XOR<transactionCreateInput, transactionUncheckedCreateInput>
    /**
     * In case the transaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transactionUpdateInput, transactionUncheckedUpdateInput>
  }

  /**
   * transaction delete
   */
  export type transactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    /**
     * Filter which transaction to delete.
     */
    where: transactionWhereUniqueInput
  }

  /**
   * transaction deleteMany
   */
  export type transactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transactions to delete
     */
    where?: transactionWhereInput
  }

  /**
   * transaction.campaign
   */
  export type transaction$campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    where?: campaignWhereInput
  }

  /**
   * transaction.user
   */
  export type transaction$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * transaction without action
   */
  export type transactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
  }


  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    user_id: string | null
    email: string | null
    phone: string | null
    password: string | null
    roles: $Enums.user_roles | null
    isPublic: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    username: string | null
    avatar: Buffer | null
    isverified: boolean | null
  }

  export type UserMaxAggregateOutputType = {
    user_id: string | null
    email: string | null
    phone: string | null
    password: string | null
    roles: $Enums.user_roles | null
    isPublic: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    username: string | null
    avatar: Buffer | null
    isverified: boolean | null
  }

  export type UserCountAggregateOutputType = {
    user_id: number
    email: number
    phone: number
    password: number
    roles: number
    isPublic: number
    createdAt: number
    updatedAt: number
    username: number
    avatar: number
    isverified: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    user_id?: true
    email?: true
    phone?: true
    password?: true
    roles?: true
    isPublic?: true
    createdAt?: true
    updatedAt?: true
    username?: true
    avatar?: true
    isverified?: true
  }

  export type UserMaxAggregateInputType = {
    user_id?: true
    email?: true
    phone?: true
    password?: true
    roles?: true
    isPublic?: true
    createdAt?: true
    updatedAt?: true
    username?: true
    avatar?: true
    isverified?: true
  }

  export type UserCountAggregateInputType = {
    user_id?: true
    email?: true
    phone?: true
    password?: true
    roles?: true
    isPublic?: true
    createdAt?: true
    updatedAt?: true
    username?: true
    avatar?: true
    isverified?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    user_id: string
    email: string
    phone: string | null
    password: string
    roles: $Enums.user_roles
    isPublic: boolean
    createdAt: Date
    updatedAt: Date | null
    username: string | null
    avatar: Buffer | null
    isverified: boolean | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    email?: boolean
    phone?: boolean
    password?: boolean
    roles?: boolean
    isPublic?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    username?: boolean
    avatar?: boolean
    isverified?: boolean
    campaign?: boolean | user$campaignArgs<ExtArgs>
    community_chat?: boolean | user$community_chatArgs<ExtArgs>
    community_membership?: boolean | user$community_membershipArgs<ExtArgs>
    discussion?: boolean | user$discussionArgs<ExtArgs>
    investment?: boolean | user$investmentArgs<ExtArgs>
    kyc_level_1?: boolean | user$kyc_level_1Args<ExtArgs>
    kyc_level_2?: boolean | user$kyc_level_2Args<ExtArgs>
    refund?: boolean | user$refundArgs<ExtArgs>
    transaction?: boolean | user$transactionArgs<ExtArgs>
    user_voted?: boolean | user$user_votedArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectScalar = {
    user_id?: boolean
    email?: boolean
    phone?: boolean
    password?: boolean
    roles?: boolean
    isPublic?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    username?: boolean
    avatar?: boolean
    isverified?: boolean
  }


  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaign?: boolean | user$campaignArgs<ExtArgs>
    community_chat?: boolean | user$community_chatArgs<ExtArgs>
    community_membership?: boolean | user$community_membershipArgs<ExtArgs>
    discussion?: boolean | user$discussionArgs<ExtArgs>
    investment?: boolean | user$investmentArgs<ExtArgs>
    kyc_level_1?: boolean | user$kyc_level_1Args<ExtArgs>
    kyc_level_2?: boolean | user$kyc_level_2Args<ExtArgs>
    refund?: boolean | user$refundArgs<ExtArgs>
    transaction?: boolean | user$transactionArgs<ExtArgs>
    user_voted?: boolean | user$user_votedArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      campaign: Prisma.$campaignPayload<ExtArgs>[]
      community_chat: Prisma.$community_chatPayload<ExtArgs>[]
      community_membership: Prisma.$community_membershipPayload<ExtArgs>[]
      discussion: Prisma.$discussionPayload<ExtArgs>[]
      investment: Prisma.$investmentPayload<ExtArgs>[]
      kyc_level_1: Prisma.$kyc_level_1Payload<ExtArgs> | null
      kyc_level_2: Prisma.$kyc_level_2Payload<ExtArgs> | null
      refund: Prisma.$refundPayload<ExtArgs>[]
      transaction: Prisma.$transactionPayload<ExtArgs>[]
      user_voted: Prisma.$user_votedPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: string
      email: string
      phone: string | null
      password: string
      roles: $Enums.user_roles
      isPublic: boolean
      createdAt: Date
      updatedAt: Date | null
      username: string | null
      avatar: Buffer | null
      isverified: boolean | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }


  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends userFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends userFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends userFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const userWithUser_idOnly = await prisma.user.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends userFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends userCreateArgs<ExtArgs>>(
      args: SelectSubset<T, userCreateArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends userCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {userCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `user_id`
     * const userWithUser_idOnly = await prisma.user.createManyAndReturn({ 
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends userCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, userCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends userDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, userDeleteArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends userUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, userUpdateArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends userDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends userUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends userUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, userUpsertArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaign<T extends user$campaignArgs<ExtArgs> = {}>(args?: Subset<T, user$campaignArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$campaignPayload<ExtArgs>, T, 'findMany'> | Null>;

    community_chat<T extends user$community_chatArgs<ExtArgs> = {}>(args?: Subset<T, user$community_chatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_chatPayload<ExtArgs>, T, 'findMany'> | Null>;

    community_membership<T extends user$community_membershipArgs<ExtArgs> = {}>(args?: Subset<T, user$community_membershipArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_membershipPayload<ExtArgs>, T, 'findMany'> | Null>;

    discussion<T extends user$discussionArgs<ExtArgs> = {}>(args?: Subset<T, user$discussionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionPayload<ExtArgs>, T, 'findMany'> | Null>;

    investment<T extends user$investmentArgs<ExtArgs> = {}>(args?: Subset<T, user$investmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$investmentPayload<ExtArgs>, T, 'findMany'> | Null>;

    kyc_level_1<T extends user$kyc_level_1Args<ExtArgs> = {}>(args?: Subset<T, user$kyc_level_1Args<ExtArgs>>): Prisma__kyc_level_1Client<$Result.GetResult<Prisma.$kyc_level_1Payload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    kyc_level_2<T extends user$kyc_level_2Args<ExtArgs> = {}>(args?: Subset<T, user$kyc_level_2Args<ExtArgs>>): Prisma__kyc_level_2Client<$Result.GetResult<Prisma.$kyc_level_2Payload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    refund<T extends user$refundArgs<ExtArgs> = {}>(args?: Subset<T, user$refundArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refundPayload<ExtArgs>, T, 'findMany'> | Null>;

    transaction<T extends user$transactionArgs<ExtArgs> = {}>(args?: Subset<T, user$transactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionPayload<ExtArgs>, T, 'findMany'> | Null>;

    user_voted<T extends user$user_votedArgs<ExtArgs> = {}>(args?: Subset<T, user$user_votedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the user model
   */ 
  interface userFieldRefs {
    readonly user_id: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly phone: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly roles: FieldRef<"user", 'user_roles'>
    readonly isPublic: FieldRef<"user", 'Boolean'>
    readonly createdAt: FieldRef<"user", 'DateTime'>
    readonly updatedAt: FieldRef<"user", 'DateTime'>
    readonly username: FieldRef<"user", 'String'>
    readonly avatar: FieldRef<"user", 'Bytes'>
    readonly isverified: FieldRef<"user", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user createManyAndReturn
   */
  export type userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
  }

  /**
   * user.campaign
   */
  export type user$campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaign
     */
    select?: campaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignInclude<ExtArgs> | null
    where?: campaignWhereInput
    orderBy?: campaignOrderByWithRelationInput | campaignOrderByWithRelationInput[]
    cursor?: campaignWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }

  /**
   * user.community_chat
   */
  export type user$community_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_chat
     */
    select?: community_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_chatInclude<ExtArgs> | null
    where?: community_chatWhereInput
    orderBy?: community_chatOrderByWithRelationInput | community_chatOrderByWithRelationInput[]
    cursor?: community_chatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_chatScalarFieldEnum | Community_chatScalarFieldEnum[]
  }

  /**
   * user.community_membership
   */
  export type user$community_membershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_membership
     */
    select?: community_membershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_membershipInclude<ExtArgs> | null
    where?: community_membershipWhereInput
    orderBy?: community_membershipOrderByWithRelationInput | community_membershipOrderByWithRelationInput[]
    cursor?: community_membershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_membershipScalarFieldEnum | Community_membershipScalarFieldEnum[]
  }

  /**
   * user.discussion
   */
  export type user$discussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discussion
     */
    select?: discussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discussionInclude<ExtArgs> | null
    where?: discussionWhereInput
    orderBy?: discussionOrderByWithRelationInput | discussionOrderByWithRelationInput[]
    cursor?: discussionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * user.investment
   */
  export type user$investmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the investment
     */
    select?: investmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: investmentInclude<ExtArgs> | null
    where?: investmentWhereInput
    orderBy?: investmentOrderByWithRelationInput | investmentOrderByWithRelationInput[]
    cursor?: investmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvestmentScalarFieldEnum | InvestmentScalarFieldEnum[]
  }

  /**
   * user.kyc_level_1
   */
  export type user$kyc_level_1Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_1
     */
    select?: kyc_level_1Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_1Include<ExtArgs> | null
    where?: kyc_level_1WhereInput
  }

  /**
   * user.kyc_level_2
   */
  export type user$kyc_level_2Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kyc_level_2
     */
    select?: kyc_level_2Select<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kyc_level_2Include<ExtArgs> | null
    where?: kyc_level_2WhereInput
  }

  /**
   * user.refund
   */
  export type user$refundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refund
     */
    select?: refundSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refundInclude<ExtArgs> | null
    where?: refundWhereInput
    orderBy?: refundOrderByWithRelationInput | refundOrderByWithRelationInput[]
    cursor?: refundWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefundScalarFieldEnum | RefundScalarFieldEnum[]
  }

  /**
   * user.transaction
   */
  export type user$transactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaction
     */
    select?: transactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionInclude<ExtArgs> | null
    where?: transactionWhereInput
    orderBy?: transactionOrderByWithRelationInput | transactionOrderByWithRelationInput[]
    cursor?: transactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * user.user_voted
   */
  export type user$user_votedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    where?: user_votedWhereInput
    orderBy?: user_votedOrderByWithRelationInput | user_votedOrderByWithRelationInput[]
    cursor?: user_votedWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_votedScalarFieldEnum | User_votedScalarFieldEnum[]
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Model user_voted
   */

  export type AggregateUser_voted = {
    _count: User_votedCountAggregateOutputType | null
    _min: User_votedMinAggregateOutputType | null
    _max: User_votedMaxAggregateOutputType | null
  }

  export type User_votedMinAggregateOutputType = {
    user_voted_id: string | null
    community_proposal_id: string | null
    user_id: string | null
  }

  export type User_votedMaxAggregateOutputType = {
    user_voted_id: string | null
    community_proposal_id: string | null
    user_id: string | null
  }

  export type User_votedCountAggregateOutputType = {
    user_voted_id: number
    community_proposal_id: number
    user_id: number
    _all: number
  }


  export type User_votedMinAggregateInputType = {
    user_voted_id?: true
    community_proposal_id?: true
    user_id?: true
  }

  export type User_votedMaxAggregateInputType = {
    user_voted_id?: true
    community_proposal_id?: true
    user_id?: true
  }

  export type User_votedCountAggregateInputType = {
    user_voted_id?: true
    community_proposal_id?: true
    user_id?: true
    _all?: true
  }

  export type User_votedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_voted to aggregate.
     */
    where?: user_votedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_voteds to fetch.
     */
    orderBy?: user_votedOrderByWithRelationInput | user_votedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_votedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_voteds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_voteds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_voteds
    **/
    _count?: true | User_votedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_votedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_votedMaxAggregateInputType
  }

  export type GetUser_votedAggregateType<T extends User_votedAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_voted]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_voted[P]>
      : GetScalarType<T[P], AggregateUser_voted[P]>
  }




  export type user_votedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_votedWhereInput
    orderBy?: user_votedOrderByWithAggregationInput | user_votedOrderByWithAggregationInput[]
    by: User_votedScalarFieldEnum[] | User_votedScalarFieldEnum
    having?: user_votedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_votedCountAggregateInputType | true
    _min?: User_votedMinAggregateInputType
    _max?: User_votedMaxAggregateInputType
  }

  export type User_votedGroupByOutputType = {
    user_voted_id: string
    community_proposal_id: string
    user_id: string
    _count: User_votedCountAggregateOutputType | null
    _min: User_votedMinAggregateOutputType | null
    _max: User_votedMaxAggregateOutputType | null
  }

  type GetUser_votedGroupByPayload<T extends user_votedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_votedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_votedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_votedGroupByOutputType[P]>
            : GetScalarType<T[P], User_votedGroupByOutputType[P]>
        }
      >
    >


  export type user_votedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_voted_id?: boolean
    community_proposal_id?: boolean
    user_id?: boolean
    community_proposal?: boolean | community_proposalDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_voted"]>

  export type user_votedSelectScalar = {
    user_voted_id?: boolean
    community_proposal_id?: boolean
    user_id?: boolean
  }


  export type user_votedInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_proposal?: boolean | community_proposalDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $user_votedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_voted"
    objects: {
      community_proposal: Prisma.$community_proposalPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_voted_id: string
      community_proposal_id: string
      user_id: string
    }, ExtArgs["result"]["user_voted"]>
    composites: {}
  }


  type user_votedGetPayload<S extends boolean | null | undefined | user_votedDefaultArgs> = $Result.GetResult<Prisma.$user_votedPayload, S>

  type user_votedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<user_votedFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: User_votedCountAggregateInputType | true
    }

  export interface user_votedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_voted'], meta: { name: 'user_voted' } }
    /**
     * Find zero or one User_voted that matches the filter.
     * @param {user_votedFindUniqueArgs} args - Arguments to find a User_voted
     * @example
     * // Get one User_voted
     * const user_voted = await prisma.user_voted.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends user_votedFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, user_votedFindUniqueArgs<ExtArgs>>
    ): Prisma__user_votedClient<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User_voted that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {user_votedFindUniqueOrThrowArgs} args - Arguments to find a User_voted
     * @example
     * // Get one User_voted
     * const user_voted = await prisma.user_voted.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends user_votedFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, user_votedFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__user_votedClient<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User_voted that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_votedFindFirstArgs} args - Arguments to find a User_voted
     * @example
     * // Get one User_voted
     * const user_voted = await prisma.user_voted.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends user_votedFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, user_votedFindFirstArgs<ExtArgs>>
    ): Prisma__user_votedClient<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User_voted that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_votedFindFirstOrThrowArgs} args - Arguments to find a User_voted
     * @example
     * // Get one User_voted
     * const user_voted = await prisma.user_voted.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends user_votedFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, user_votedFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__user_votedClient<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more User_voteds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_votedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_voteds
     * const user_voteds = await prisma.user_voted.findMany()
     * 
     * // Get first 10 User_voteds
     * const user_voteds = await prisma.user_voted.findMany({ take: 10 })
     * 
     * // Only select the `user_voted_id`
     * const user_votedWithUser_voted_idOnly = await prisma.user_voted.findMany({ select: { user_voted_id: true } })
     * 
    **/
    findMany<T extends user_votedFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_votedFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User_voted.
     * @param {user_votedCreateArgs} args - Arguments to create a User_voted.
     * @example
     * // Create one User_voted
     * const User_voted = await prisma.user_voted.create({
     *   data: {
     *     // ... data to create a User_voted
     *   }
     * })
     * 
    **/
    create<T extends user_votedCreateArgs<ExtArgs>>(
      args: SelectSubset<T, user_votedCreateArgs<ExtArgs>>
    ): Prisma__user_votedClient<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many User_voteds.
     * @param {user_votedCreateManyArgs} args - Arguments to create many User_voteds.
     * @example
     * // Create many User_voteds
     * const user_voted = await prisma.user_voted.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends user_votedCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_votedCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_voteds and returns the data saved in the database.
     * @param {user_votedCreateManyAndReturnArgs} args - Arguments to create many User_voteds.
     * @example
     * // Create many User_voteds
     * const user_voted = await prisma.user_voted.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_voteds and only return the `user_voted_id`
     * const user_votedWithUser_voted_idOnly = await prisma.user_voted.createManyAndReturn({ 
     *   select: { user_voted_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends user_votedCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, user_votedCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a User_voted.
     * @param {user_votedDeleteArgs} args - Arguments to delete one User_voted.
     * @example
     * // Delete one User_voted
     * const User_voted = await prisma.user_voted.delete({
     *   where: {
     *     // ... filter to delete one User_voted
     *   }
     * })
     * 
    **/
    delete<T extends user_votedDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, user_votedDeleteArgs<ExtArgs>>
    ): Prisma__user_votedClient<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User_voted.
     * @param {user_votedUpdateArgs} args - Arguments to update one User_voted.
     * @example
     * // Update one User_voted
     * const user_voted = await prisma.user_voted.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends user_votedUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, user_votedUpdateArgs<ExtArgs>>
    ): Prisma__user_votedClient<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more User_voteds.
     * @param {user_votedDeleteManyArgs} args - Arguments to filter User_voteds to delete.
     * @example
     * // Delete a few User_voteds
     * const { count } = await prisma.user_voted.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends user_votedDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_votedDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_voteds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_votedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_voteds
     * const user_voted = await prisma.user_voted.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends user_votedUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, user_votedUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_voted.
     * @param {user_votedUpsertArgs} args - Arguments to update or create a User_voted.
     * @example
     * // Update or create a User_voted
     * const user_voted = await prisma.user_voted.upsert({
     *   create: {
     *     // ... data to create a User_voted
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_voted we want to update
     *   }
     * })
    **/
    upsert<T extends user_votedUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, user_votedUpsertArgs<ExtArgs>>
    ): Prisma__user_votedClient<$Result.GetResult<Prisma.$user_votedPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of User_voteds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_votedCountArgs} args - Arguments to filter User_voteds to count.
     * @example
     * // Count the number of User_voteds
     * const count = await prisma.user_voted.count({
     *   where: {
     *     // ... the filter for the User_voteds we want to count
     *   }
     * })
    **/
    count<T extends user_votedCountArgs>(
      args?: Subset<T, user_votedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_votedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_voted.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_votedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_votedAggregateArgs>(args: Subset<T, User_votedAggregateArgs>): Prisma.PrismaPromise<GetUser_votedAggregateType<T>>

    /**
     * Group by User_voted.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_votedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_votedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_votedGroupByArgs['orderBy'] }
        : { orderBy?: user_votedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_votedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_votedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_voted model
   */
  readonly fields: user_votedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_voted.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_votedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    community_proposal<T extends community_proposalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_proposalDefaultArgs<ExtArgs>>): Prisma__community_proposalClient<$Result.GetResult<Prisma.$community_proposalPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the user_voted model
   */ 
  interface user_votedFieldRefs {
    readonly user_voted_id: FieldRef<"user_voted", 'String'>
    readonly community_proposal_id: FieldRef<"user_voted", 'String'>
    readonly user_id: FieldRef<"user_voted", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_voted findUnique
   */
  export type user_votedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * Filter, which user_voted to fetch.
     */
    where: user_votedWhereUniqueInput
  }

  /**
   * user_voted findUniqueOrThrow
   */
  export type user_votedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * Filter, which user_voted to fetch.
     */
    where: user_votedWhereUniqueInput
  }

  /**
   * user_voted findFirst
   */
  export type user_votedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * Filter, which user_voted to fetch.
     */
    where?: user_votedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_voteds to fetch.
     */
    orderBy?: user_votedOrderByWithRelationInput | user_votedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_voteds.
     */
    cursor?: user_votedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_voteds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_voteds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_voteds.
     */
    distinct?: User_votedScalarFieldEnum | User_votedScalarFieldEnum[]
  }

  /**
   * user_voted findFirstOrThrow
   */
  export type user_votedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * Filter, which user_voted to fetch.
     */
    where?: user_votedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_voteds to fetch.
     */
    orderBy?: user_votedOrderByWithRelationInput | user_votedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_voteds.
     */
    cursor?: user_votedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_voteds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_voteds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_voteds.
     */
    distinct?: User_votedScalarFieldEnum | User_votedScalarFieldEnum[]
  }

  /**
   * user_voted findMany
   */
  export type user_votedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * Filter, which user_voteds to fetch.
     */
    where?: user_votedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_voteds to fetch.
     */
    orderBy?: user_votedOrderByWithRelationInput | user_votedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_voteds.
     */
    cursor?: user_votedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_voteds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_voteds.
     */
    skip?: number
    distinct?: User_votedScalarFieldEnum | User_votedScalarFieldEnum[]
  }

  /**
   * user_voted create
   */
  export type user_votedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * The data needed to create a user_voted.
     */
    data: XOR<user_votedCreateInput, user_votedUncheckedCreateInput>
  }

  /**
   * user_voted createMany
   */
  export type user_votedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_voteds.
     */
    data: user_votedCreateManyInput | user_votedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_voted createManyAndReturn
   */
  export type user_votedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * The data used to create many user_voteds.
     */
    data: user_votedCreateManyInput | user_votedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_voted update
   */
  export type user_votedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * The data needed to update a user_voted.
     */
    data: XOR<user_votedUpdateInput, user_votedUncheckedUpdateInput>
    /**
     * Choose, which user_voted to update.
     */
    where: user_votedWhereUniqueInput
  }

  /**
   * user_voted updateMany
   */
  export type user_votedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_voteds.
     */
    data: XOR<user_votedUpdateManyMutationInput, user_votedUncheckedUpdateManyInput>
    /**
     * Filter which user_voteds to update
     */
    where?: user_votedWhereInput
  }

  /**
   * user_voted upsert
   */
  export type user_votedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * The filter to search for the user_voted to update in case it exists.
     */
    where: user_votedWhereUniqueInput
    /**
     * In case the user_voted found by the `where` argument doesn't exist, create a new user_voted with this data.
     */
    create: XOR<user_votedCreateInput, user_votedUncheckedCreateInput>
    /**
     * In case the user_voted was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_votedUpdateInput, user_votedUncheckedUpdateInput>
  }

  /**
   * user_voted delete
   */
  export type user_votedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
    /**
     * Filter which user_voted to delete.
     */
    where: user_votedWhereUniqueInput
  }

  /**
   * user_voted deleteMany
   */
  export type user_votedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_voteds to delete
     */
    where?: user_votedWhereInput
  }

  /**
   * user_voted without action
   */
  export type user_votedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_voted
     */
    select?: user_votedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_votedInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AddressScalarFieldEnum: {
    address_id: 'address_id',
    address: 'address',
    kecamatan: 'kecamatan',
    kota: 'kota',
    provinsi: 'provinsi',
    kode_pos: 'kode_pos',
    kyc_level_1_id: 'kyc_level_1_id'
  };

  export type AddressScalarFieldEnum = (typeof AddressScalarFieldEnum)[keyof typeof AddressScalarFieldEnum]


  export const Alamat_usahaScalarFieldEnum: {
    alamat_usaha_id: 'alamat_usaha_id',
    campaign_id: 'campaign_id',
    address: 'address',
    kecamatan: 'kecamatan',
    kota: 'kota',
    provinsi: 'provinsi',
    kode_pos: 'kode_pos',
    lat: 'lat',
    lgn: 'lgn'
  };

  export type Alamat_usahaScalarFieldEnum = (typeof Alamat_usahaScalarFieldEnum)[keyof typeof Alamat_usahaScalarFieldEnum]


  export const CampaignScalarFieldEnum: {
    campaign_id: 'campaign_id',
    user_id: 'user_id',
    nama_usaha: 'nama_usaha',
    deskripsi_usaha: 'deskripsi_usaha',
    logo: 'logo',
    isApproved: 'isApproved',
    isPublished: 'isPublished',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    tipe_usaha: 'tipe_usaha',
    jenis_usaha: 'jenis_usaha'
  };

  export type CampaignScalarFieldEnum = (typeof CampaignScalarFieldEnum)[keyof typeof CampaignScalarFieldEnum]


  export const Campaign_updateScalarFieldEnum: {
    update_id: 'update_id',
    campaign_id: 'campaign_id',
    update_title: 'update_title',
    update_detail: 'update_detail',
    published_at: 'published_at'
  };

  export type Campaign_updateScalarFieldEnum = (typeof Campaign_updateScalarFieldEnum)[keyof typeof Campaign_updateScalarFieldEnum]


  export const CommunityScalarFieldEnum: {
    community_id: 'community_id',
    campaign_id: 'campaign_id'
  };

  export type CommunityScalarFieldEnum = (typeof CommunityScalarFieldEnum)[keyof typeof CommunityScalarFieldEnum]


  export const Community_chatScalarFieldEnum: {
    chat_id: 'chat_id',
    community_proposal_id: 'community_proposal_id',
    chat: 'chat',
    user_id: 'user_id',
    created_at: 'created_at'
  };

  export type Community_chatScalarFieldEnum = (typeof Community_chatScalarFieldEnum)[keyof typeof Community_chatScalarFieldEnum]


  export const Community_membershipScalarFieldEnum: {
    community_membership_id: 'community_membership_id',
    community_id: 'community_id',
    user_id: 'user_id',
    joinedDate: 'joinedDate',
    exited_date: 'exited_date'
  };

  export type Community_membershipScalarFieldEnum = (typeof Community_membershipScalarFieldEnum)[keyof typeof Community_membershipScalarFieldEnum]


  export const Community_proposalScalarFieldEnum: {
    proposal_com_id: 'proposal_com_id',
    setuju: 'setuju',
    tidak_setuju: 'tidak_setuju',
    abstain: 'abstain',
    title: 'title',
    deskripsi: 'deskripsi',
    file_tambahan: 'file_tambahan',
    amount: 'amount',
    community_id: 'community_id'
  };

  export type Community_proposalScalarFieldEnum = (typeof Community_proposalScalarFieldEnum)[keyof typeof Community_proposalScalarFieldEnum]


  export const Contact_usahaScalarFieldEnum: {
    contact_id: 'contact_id',
    campaign_id: 'campaign_id',
    telepon_wa: 'telepon_wa',
    fax: 'fax',
    email: 'email',
    website: 'website'
  };

  export type Contact_usahaScalarFieldEnum = (typeof Contact_usahaScalarFieldEnum)[keyof typeof Contact_usahaScalarFieldEnum]


  export const CrowdfundingScalarFieldEnum: {
    crowdfunding_id: 'crowdfunding_id',
    campaign_id: 'campaign_id',
    target_raise: 'target_raise',
    equity_dijual: 'equity_dijual',
    start_date: 'start_date',
    end_date: 'end_date',
    fund_raised: 'fund_raised'
  };

  export type CrowdfundingScalarFieldEnum = (typeof CrowdfundingScalarFieldEnum)[keyof typeof CrowdfundingScalarFieldEnum]


  export const Data_rekeningScalarFieldEnum: {
    rekening_id: 'rekening_id',
    nama_rekening: 'nama_rekening',
    nama_bank: 'nama_bank',
    nomor_rekening: 'nomor_rekening',
    crowdfunding_id: 'crowdfunding_id'
  };

  export type Data_rekeningScalarFieldEnum = (typeof Data_rekeningScalarFieldEnum)[keyof typeof Data_rekeningScalarFieldEnum]


  export const DiscussionScalarFieldEnum: {
    discussion_id: 'discussion_id',
    campaign_id: 'campaign_id',
    user_id: 'user_id',
    createdAt: 'createdAt',
    lastActivity: 'lastActivity',
    message: 'message',
    like: 'like'
  };

  export type DiscussionScalarFieldEnum = (typeof DiscussionScalarFieldEnum)[keyof typeof DiscussionScalarFieldEnum]


  export const DocumentScalarFieldEnum: {
    document_id: 'document_id',
    campaign_id: 'campaign_id'
  };

  export type DocumentScalarFieldEnum = (typeof DocumentScalarFieldEnum)[keyof typeof DocumentScalarFieldEnum]


  export const Document_legalScalarFieldEnum: {
    document_legal_id: 'document_legal_id',
    document_id: 'document_id',
    nama_dokumen: 'nama_dokumen',
    file: 'file'
  };

  export type Document_legalScalarFieldEnum = (typeof Document_legalScalarFieldEnum)[keyof typeof Document_legalScalarFieldEnum]


  export const Document_proposalScalarFieldEnum: {
    document_proposal_id: 'document_proposal_id',
    document_id: 'document_id',
    nama_dokumen: 'nama_dokumen',
    file: 'file'
  };

  export type Document_proposalScalarFieldEnum = (typeof Document_proposalScalarFieldEnum)[keyof typeof Document_proposalScalarFieldEnum]


  export const Foto_dokumenScalarFieldEnum: {
    foto_dokumen_id: 'foto_dokumen_id',
    foto_ktp_depan: 'foto_ktp_depan',
    foto_ktp_belakang: 'foto_ktp_belakang',
    foto_selfie: 'foto_selfie',
    kyc_level_1_id: 'kyc_level_1_id'
  };

  export type Foto_dokumenScalarFieldEnum = (typeof Foto_dokumenScalarFieldEnum)[keyof typeof Foto_dokumenScalarFieldEnum]


  export const Highlight_productScalarFieldEnum: {
    highlight_product_id: 'highlight_product_id',
    crowdfunding_id: 'crowdfunding_id',
    highlight: 'highlight'
  };

  export type Highlight_productScalarFieldEnum = (typeof Highlight_productScalarFieldEnum)[keyof typeof Highlight_productScalarFieldEnum]


  export const InvestmentScalarFieldEnum: {
    investment_id: 'investment_id',
    campaign_id: 'campaign_id',
    user_id: 'user_id',
    amount: 'amount',
    investment_date: 'investment_date'
  };

  export type InvestmentScalarFieldEnum = (typeof InvestmentScalarFieldEnum)[keyof typeof InvestmentScalarFieldEnum]


  export const Kyc_level_1ScalarFieldEnum: {
    kyc_level_1_id: 'kyc_level_1_id',
    user_id: 'user_id',
    full_name: 'full_name',
    nik: 'nik',
    tanggal_lahir: 'tanggal_lahir',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    statusUpdate: 'statusUpdate',
    jenis_kelamin: 'jenis_kelamin',
    isaproved: 'isaproved'
  };

  export type Kyc_level_1ScalarFieldEnum = (typeof Kyc_level_1ScalarFieldEnum)[keyof typeof Kyc_level_1ScalarFieldEnum]


  export const Kyc_level_2ScalarFieldEnum: {
    kyc_level_2_id: 'kyc_level_2_id',
    user_id: 'user_id',
    surat_skck: 'surat_skck',
    surat_domisili: 'surat_domisili',
    surat_keterangan_bank: 'surat_keterangan_bank',
    status: 'status',
    isApproved: 'isApproved',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    updateStatus: 'updateStatus'
  };

  export type Kyc_level_2ScalarFieldEnum = (typeof Kyc_level_2ScalarFieldEnum)[keyof typeof Kyc_level_2ScalarFieldEnum]


  export const Legalitas_usahaScalarFieldEnum: {
    legalitas_id: 'legalitas_id',
    campaign_id: 'campaign_id',
    tanggal_dibentuk: 'tanggal_dibentuk',
    pemilik: 'pemilik',
    nib: 'nib',
    nik_pic: 'nik_pic',
    file_perizinan: 'file_perizinan'
  };

  export type Legalitas_usahaScalarFieldEnum = (typeof Legalitas_usahaScalarFieldEnum)[keyof typeof Legalitas_usahaScalarFieldEnum]


  export const Pesan_campaignScalarFieldEnum: {
    pesan_id: 'pesan_id',
    campaign_id: 'campaign_id',
    pesan: 'pesan',
    createdAt: 'createdAt',
    createdBy: 'createdBy'
  };

  export type Pesan_campaignScalarFieldEnum = (typeof Pesan_campaignScalarFieldEnum)[keyof typeof Pesan_campaignScalarFieldEnum]


  export const Product_informationScalarFieldEnum: {
    product_info_id: 'product_info_id',
    crowdfunding_id: 'crowdfunding_id',
    link_video: 'link_video',
    product_info: 'product_info'
  };

  export type Product_informationScalarFieldEnum = (typeof Product_informationScalarFieldEnum)[keyof typeof Product_informationScalarFieldEnum]


  export const RefundScalarFieldEnum: {
    refund_id: 'refund_id',
    amount: 'amount',
    nama_bank: 'nama_bank',
    nomor_bank: 'nomor_bank',
    alasan_refund: 'alasan_refund',
    isAproved: 'isAproved',
    statusUpdate: 'statusUpdate',
    updatedAt: 'updatedAt',
    createdAt: 'createdAt',
    user_id: 'user_id',
    isConfirmed: 'isConfirmed',
    approved_amount: 'approved_amount',
    reason_reduce: 'reason_reduce'
  };

  export type RefundScalarFieldEnum = (typeof RefundScalarFieldEnum)[keyof typeof RefundScalarFieldEnum]


  export const Replies_discussionScalarFieldEnum: {
    replie_id: 'replie_id',
    discussion_id: 'discussion_id',
    createdAt: 'createdAt',
    message: 'message',
    like: 'like'
  };

  export type Replies_discussionScalarFieldEnum = (typeof Replies_discussionScalarFieldEnum)[keyof typeof Replies_discussionScalarFieldEnum]


  export const Social_media_usahaScalarFieldEnum: {
    social_media_id: 'social_media_id',
    campaign_id: 'campaign_id',
    team_id: 'team_id',
    facebook: 'facebook',
    instagram: 'instagram',
    twitter: 'twitter',
    telegram: 'telegram',
    tiktok: 'tiktok',
    linkedin: 'linkedin'
  };

  export type Social_media_usahaScalarFieldEnum = (typeof Social_media_usahaScalarFieldEnum)[keyof typeof Social_media_usahaScalarFieldEnum]


  export const Team_campaignScalarFieldEnum: {
    team_id: 'team_id',
    campaign_id: 'campaign_id',
    nama_lengkap: 'nama_lengkap',
    jabatan: 'jabatan'
  };

  export type Team_campaignScalarFieldEnum = (typeof Team_campaignScalarFieldEnum)[keyof typeof Team_campaignScalarFieldEnum]


  export const TransactionScalarFieldEnum: {
    transaction_id: 'transaction_id',
    transaction_type: 'transaction_type',
    transaction_status: 'transaction_status',
    trans_date: 'trans_date',
    payment: 'payment',
    amount: 'amount',
    campaign_id: 'campaign_id',
    user_id: 'user_id'
  };

  export type TransactionScalarFieldEnum = (typeof TransactionScalarFieldEnum)[keyof typeof TransactionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    user_id: 'user_id',
    email: 'email',
    phone: 'phone',
    password: 'password',
    roles: 'roles',
    isPublic: 'isPublic',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    username: 'username',
    avatar: 'avatar',
    isverified: 'isverified'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const User_votedScalarFieldEnum: {
    user_voted_id: 'user_voted_id',
    community_proposal_id: 'community_proposal_id',
    user_id: 'user_id'
  };

  export type User_votedScalarFieldEnum = (typeof User_votedScalarFieldEnum)[keyof typeof User_votedScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Bytes[]'
   */
  export type ListBytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'tipe_usaha_enum'
   */
  export type Enumtipe_usaha_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tipe_usaha_enum'>
    


  /**
   * Reference to a field of type 'tipe_usaha_enum[]'
   */
  export type ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tipe_usaha_enum[]'>
    


  /**
   * Reference to a field of type 'jenis_usaha_enum'
   */
  export type Enumjenis_usaha_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'jenis_usaha_enum'>
    


  /**
   * Reference to a field of type 'jenis_usaha_enum[]'
   */
  export type ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'jenis_usaha_enum[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'kyc_status_enum'
   */
  export type Enumkyc_status_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'kyc_status_enum'>
    


  /**
   * Reference to a field of type 'kyc_status_enum[]'
   */
  export type ListEnumkyc_status_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'kyc_status_enum[]'>
    


  /**
   * Reference to a field of type 'transaction_type_enum'
   */
  export type Enumtransaction_type_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'transaction_type_enum'>
    


  /**
   * Reference to a field of type 'transaction_type_enum[]'
   */
  export type ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'transaction_type_enum[]'>
    


  /**
   * Reference to a field of type 'transaction_status_enum'
   */
  export type Enumtransaction_status_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'transaction_status_enum'>
    


  /**
   * Reference to a field of type 'transaction_status_enum[]'
   */
  export type ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'transaction_status_enum[]'>
    


  /**
   * Reference to a field of type 'user_roles'
   */
  export type Enumuser_rolesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_roles'>
    


  /**
   * Reference to a field of type 'user_roles[]'
   */
  export type ListEnumuser_rolesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_roles[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type addressWhereInput = {
    AND?: addressWhereInput | addressWhereInput[]
    OR?: addressWhereInput[]
    NOT?: addressWhereInput | addressWhereInput[]
    address_id?: UuidFilter<"address"> | string
    address?: StringFilter<"address"> | string
    kecamatan?: StringFilter<"address"> | string
    kota?: StringFilter<"address"> | string
    provinsi?: StringFilter<"address"> | string
    kode_pos?: StringFilter<"address"> | string
    kyc_level_1_id?: UuidFilter<"address"> | string
    kyc_level_1?: XOR<Kyc_level_1RelationFilter, kyc_level_1WhereInput>
  }

  export type addressOrderByWithRelationInput = {
    address_id?: SortOrder
    address?: SortOrder
    kecamatan?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    kyc_level_1_id?: SortOrder
    kyc_level_1?: kyc_level_1OrderByWithRelationInput
  }

  export type addressWhereUniqueInput = Prisma.AtLeast<{
    address_id?: string
    kyc_level_1_id?: string
    AND?: addressWhereInput | addressWhereInput[]
    OR?: addressWhereInput[]
    NOT?: addressWhereInput | addressWhereInput[]
    address?: StringFilter<"address"> | string
    kecamatan?: StringFilter<"address"> | string
    kota?: StringFilter<"address"> | string
    provinsi?: StringFilter<"address"> | string
    kode_pos?: StringFilter<"address"> | string
    kyc_level_1?: XOR<Kyc_level_1RelationFilter, kyc_level_1WhereInput>
  }, "address_id" | "kyc_level_1_id">

  export type addressOrderByWithAggregationInput = {
    address_id?: SortOrder
    address?: SortOrder
    kecamatan?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    kyc_level_1_id?: SortOrder
    _count?: addressCountOrderByAggregateInput
    _max?: addressMaxOrderByAggregateInput
    _min?: addressMinOrderByAggregateInput
  }

  export type addressScalarWhereWithAggregatesInput = {
    AND?: addressScalarWhereWithAggregatesInput | addressScalarWhereWithAggregatesInput[]
    OR?: addressScalarWhereWithAggregatesInput[]
    NOT?: addressScalarWhereWithAggregatesInput | addressScalarWhereWithAggregatesInput[]
    address_id?: UuidWithAggregatesFilter<"address"> | string
    address?: StringWithAggregatesFilter<"address"> | string
    kecamatan?: StringWithAggregatesFilter<"address"> | string
    kota?: StringWithAggregatesFilter<"address"> | string
    provinsi?: StringWithAggregatesFilter<"address"> | string
    kode_pos?: StringWithAggregatesFilter<"address"> | string
    kyc_level_1_id?: UuidWithAggregatesFilter<"address"> | string
  }

  export type alamat_usahaWhereInput = {
    AND?: alamat_usahaWhereInput | alamat_usahaWhereInput[]
    OR?: alamat_usahaWhereInput[]
    NOT?: alamat_usahaWhereInput | alamat_usahaWhereInput[]
    alamat_usaha_id?: UuidFilter<"alamat_usaha"> | string
    campaign_id?: UuidFilter<"alamat_usaha"> | string
    address?: StringNullableFilter<"alamat_usaha"> | string | null
    kecamatan?: StringNullableFilter<"alamat_usaha"> | string | null
    kota?: StringNullableFilter<"alamat_usaha"> | string | null
    provinsi?: StringNullableFilter<"alamat_usaha"> | string | null
    kode_pos?: StringNullableFilter<"alamat_usaha"> | string | null
    lat?: DecimalNullableFilter<"alamat_usaha"> | Decimal | DecimalJsLike | number | string | null
    lgn?: DecimalNullableFilter<"alamat_usaha"> | Decimal | DecimalJsLike | number | string | null
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }

  export type alamat_usahaOrderByWithRelationInput = {
    alamat_usaha_id?: SortOrder
    campaign_id?: SortOrder
    address?: SortOrderInput | SortOrder
    kecamatan?: SortOrderInput | SortOrder
    kota?: SortOrderInput | SortOrder
    provinsi?: SortOrderInput | SortOrder
    kode_pos?: SortOrderInput | SortOrder
    lat?: SortOrderInput | SortOrder
    lgn?: SortOrderInput | SortOrder
    campaign?: campaignOrderByWithRelationInput
  }

  export type alamat_usahaWhereUniqueInput = Prisma.AtLeast<{
    alamat_usaha_id?: string
    campaign_id?: string
    AND?: alamat_usahaWhereInput | alamat_usahaWhereInput[]
    OR?: alamat_usahaWhereInput[]
    NOT?: alamat_usahaWhereInput | alamat_usahaWhereInput[]
    address?: StringNullableFilter<"alamat_usaha"> | string | null
    kecamatan?: StringNullableFilter<"alamat_usaha"> | string | null
    kota?: StringNullableFilter<"alamat_usaha"> | string | null
    provinsi?: StringNullableFilter<"alamat_usaha"> | string | null
    kode_pos?: StringNullableFilter<"alamat_usaha"> | string | null
    lat?: DecimalNullableFilter<"alamat_usaha"> | Decimal | DecimalJsLike | number | string | null
    lgn?: DecimalNullableFilter<"alamat_usaha"> | Decimal | DecimalJsLike | number | string | null
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }, "alamat_usaha_id" | "campaign_id">

  export type alamat_usahaOrderByWithAggregationInput = {
    alamat_usaha_id?: SortOrder
    campaign_id?: SortOrder
    address?: SortOrderInput | SortOrder
    kecamatan?: SortOrderInput | SortOrder
    kota?: SortOrderInput | SortOrder
    provinsi?: SortOrderInput | SortOrder
    kode_pos?: SortOrderInput | SortOrder
    lat?: SortOrderInput | SortOrder
    lgn?: SortOrderInput | SortOrder
    _count?: alamat_usahaCountOrderByAggregateInput
    _avg?: alamat_usahaAvgOrderByAggregateInput
    _max?: alamat_usahaMaxOrderByAggregateInput
    _min?: alamat_usahaMinOrderByAggregateInput
    _sum?: alamat_usahaSumOrderByAggregateInput
  }

  export type alamat_usahaScalarWhereWithAggregatesInput = {
    AND?: alamat_usahaScalarWhereWithAggregatesInput | alamat_usahaScalarWhereWithAggregatesInput[]
    OR?: alamat_usahaScalarWhereWithAggregatesInput[]
    NOT?: alamat_usahaScalarWhereWithAggregatesInput | alamat_usahaScalarWhereWithAggregatesInput[]
    alamat_usaha_id?: UuidWithAggregatesFilter<"alamat_usaha"> | string
    campaign_id?: UuidWithAggregatesFilter<"alamat_usaha"> | string
    address?: StringNullableWithAggregatesFilter<"alamat_usaha"> | string | null
    kecamatan?: StringNullableWithAggregatesFilter<"alamat_usaha"> | string | null
    kota?: StringNullableWithAggregatesFilter<"alamat_usaha"> | string | null
    provinsi?: StringNullableWithAggregatesFilter<"alamat_usaha"> | string | null
    kode_pos?: StringNullableWithAggregatesFilter<"alamat_usaha"> | string | null
    lat?: DecimalNullableWithAggregatesFilter<"alamat_usaha"> | Decimal | DecimalJsLike | number | string | null
    lgn?: DecimalNullableWithAggregatesFilter<"alamat_usaha"> | Decimal | DecimalJsLike | number | string | null
  }

  export type campaignWhereInput = {
    AND?: campaignWhereInput | campaignWhereInput[]
    OR?: campaignWhereInput[]
    NOT?: campaignWhereInput | campaignWhereInput[]
    campaign_id?: UuidFilter<"campaign"> | string
    user_id?: UuidFilter<"campaign"> | string
    nama_usaha?: StringFilter<"campaign"> | string
    deskripsi_usaha?: StringFilter<"campaign"> | string
    logo?: BytesNullableFilter<"campaign"> | Buffer | null
    isApproved?: BoolFilter<"campaign"> | boolean
    isPublished?: BoolFilter<"campaign"> | boolean
    createdAt?: DateTimeFilter<"campaign"> | Date | string
    updatedAt?: DateTimeNullableFilter<"campaign"> | Date | string | null
    tipe_usaha?: Enumtipe_usaha_enumNullableFilter<"campaign"> | $Enums.tipe_usaha_enum | null
    jenis_usaha?: Enumjenis_usaha_enumNullableFilter<"campaign"> | $Enums.jenis_usaha_enum | null
    alamat_usaha?: XOR<Alamat_usahaNullableRelationFilter, alamat_usahaWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
    campaign_update?: Campaign_updateListRelationFilter
    contact_usaha?: XOR<Contact_usahaNullableRelationFilter, contact_usahaWhereInput> | null
    crowdfunding?: XOR<CrowdfundingNullableRelationFilter, crowdfundingWhereInput> | null
    discussion?: DiscussionListRelationFilter
    document?: XOR<DocumentNullableRelationFilter, documentWhereInput> | null
    investment?: InvestmentListRelationFilter
    legalitas_usaha?: XOR<Legalitas_usahaNullableRelationFilter, legalitas_usahaWhereInput> | null
    pesan_campaign?: Pesan_campaignListRelationFilter
    social_media_usaha?: XOR<Social_media_usahaNullableRelationFilter, social_media_usahaWhereInput> | null
    team_campaign?: Team_campaignListRelationFilter
    transaction?: TransactionListRelationFilter
  }

  export type campaignOrderByWithRelationInput = {
    campaign_id?: SortOrder
    user_id?: SortOrder
    nama_usaha?: SortOrder
    deskripsi_usaha?: SortOrder
    logo?: SortOrderInput | SortOrder
    isApproved?: SortOrder
    isPublished?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    tipe_usaha?: SortOrderInput | SortOrder
    jenis_usaha?: SortOrderInput | SortOrder
    alamat_usaha?: alamat_usahaOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    campaign_update?: campaign_updateOrderByRelationAggregateInput
    contact_usaha?: contact_usahaOrderByWithRelationInput
    crowdfunding?: crowdfundingOrderByWithRelationInput
    discussion?: discussionOrderByRelationAggregateInput
    document?: documentOrderByWithRelationInput
    investment?: investmentOrderByRelationAggregateInput
    legalitas_usaha?: legalitas_usahaOrderByWithRelationInput
    pesan_campaign?: pesan_campaignOrderByRelationAggregateInput
    social_media_usaha?: social_media_usahaOrderByWithRelationInput
    team_campaign?: team_campaignOrderByRelationAggregateInput
    transaction?: transactionOrderByRelationAggregateInput
  }

  export type campaignWhereUniqueInput = Prisma.AtLeast<{
    campaign_id?: string
    AND?: campaignWhereInput | campaignWhereInput[]
    OR?: campaignWhereInput[]
    NOT?: campaignWhereInput | campaignWhereInput[]
    user_id?: UuidFilter<"campaign"> | string
    nama_usaha?: StringFilter<"campaign"> | string
    deskripsi_usaha?: StringFilter<"campaign"> | string
    logo?: BytesNullableFilter<"campaign"> | Buffer | null
    isApproved?: BoolFilter<"campaign"> | boolean
    isPublished?: BoolFilter<"campaign"> | boolean
    createdAt?: DateTimeFilter<"campaign"> | Date | string
    updatedAt?: DateTimeNullableFilter<"campaign"> | Date | string | null
    tipe_usaha?: Enumtipe_usaha_enumNullableFilter<"campaign"> | $Enums.tipe_usaha_enum | null
    jenis_usaha?: Enumjenis_usaha_enumNullableFilter<"campaign"> | $Enums.jenis_usaha_enum | null
    alamat_usaha?: XOR<Alamat_usahaNullableRelationFilter, alamat_usahaWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
    campaign_update?: Campaign_updateListRelationFilter
    contact_usaha?: XOR<Contact_usahaNullableRelationFilter, contact_usahaWhereInput> | null
    crowdfunding?: XOR<CrowdfundingNullableRelationFilter, crowdfundingWhereInput> | null
    discussion?: DiscussionListRelationFilter
    document?: XOR<DocumentNullableRelationFilter, documentWhereInput> | null
    investment?: InvestmentListRelationFilter
    legalitas_usaha?: XOR<Legalitas_usahaNullableRelationFilter, legalitas_usahaWhereInput> | null
    pesan_campaign?: Pesan_campaignListRelationFilter
    social_media_usaha?: XOR<Social_media_usahaNullableRelationFilter, social_media_usahaWhereInput> | null
    team_campaign?: Team_campaignListRelationFilter
    transaction?: TransactionListRelationFilter
  }, "campaign_id">

  export type campaignOrderByWithAggregationInput = {
    campaign_id?: SortOrder
    user_id?: SortOrder
    nama_usaha?: SortOrder
    deskripsi_usaha?: SortOrder
    logo?: SortOrderInput | SortOrder
    isApproved?: SortOrder
    isPublished?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    tipe_usaha?: SortOrderInput | SortOrder
    jenis_usaha?: SortOrderInput | SortOrder
    _count?: campaignCountOrderByAggregateInput
    _max?: campaignMaxOrderByAggregateInput
    _min?: campaignMinOrderByAggregateInput
  }

  export type campaignScalarWhereWithAggregatesInput = {
    AND?: campaignScalarWhereWithAggregatesInput | campaignScalarWhereWithAggregatesInput[]
    OR?: campaignScalarWhereWithAggregatesInput[]
    NOT?: campaignScalarWhereWithAggregatesInput | campaignScalarWhereWithAggregatesInput[]
    campaign_id?: UuidWithAggregatesFilter<"campaign"> | string
    user_id?: UuidWithAggregatesFilter<"campaign"> | string
    nama_usaha?: StringWithAggregatesFilter<"campaign"> | string
    deskripsi_usaha?: StringWithAggregatesFilter<"campaign"> | string
    logo?: BytesNullableWithAggregatesFilter<"campaign"> | Buffer | null
    isApproved?: BoolWithAggregatesFilter<"campaign"> | boolean
    isPublished?: BoolWithAggregatesFilter<"campaign"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"campaign"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"campaign"> | Date | string | null
    tipe_usaha?: Enumtipe_usaha_enumNullableWithAggregatesFilter<"campaign"> | $Enums.tipe_usaha_enum | null
    jenis_usaha?: Enumjenis_usaha_enumNullableWithAggregatesFilter<"campaign"> | $Enums.jenis_usaha_enum | null
  }

  export type campaign_updateWhereInput = {
    AND?: campaign_updateWhereInput | campaign_updateWhereInput[]
    OR?: campaign_updateWhereInput[]
    NOT?: campaign_updateWhereInput | campaign_updateWhereInput[]
    update_id?: UuidFilter<"campaign_update"> | string
    campaign_id?: UuidFilter<"campaign_update"> | string
    update_title?: StringNullableFilter<"campaign_update"> | string | null
    update_detail?: StringNullableFilter<"campaign_update"> | string | null
    published_at?: DateTimeFilter<"campaign_update"> | Date | string
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }

  export type campaign_updateOrderByWithRelationInput = {
    update_id?: SortOrder
    campaign_id?: SortOrder
    update_title?: SortOrderInput | SortOrder
    update_detail?: SortOrderInput | SortOrder
    published_at?: SortOrder
    campaign?: campaignOrderByWithRelationInput
  }

  export type campaign_updateWhereUniqueInput = Prisma.AtLeast<{
    update_id?: string
    AND?: campaign_updateWhereInput | campaign_updateWhereInput[]
    OR?: campaign_updateWhereInput[]
    NOT?: campaign_updateWhereInput | campaign_updateWhereInput[]
    campaign_id?: UuidFilter<"campaign_update"> | string
    update_title?: StringNullableFilter<"campaign_update"> | string | null
    update_detail?: StringNullableFilter<"campaign_update"> | string | null
    published_at?: DateTimeFilter<"campaign_update"> | Date | string
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }, "update_id">

  export type campaign_updateOrderByWithAggregationInput = {
    update_id?: SortOrder
    campaign_id?: SortOrder
    update_title?: SortOrderInput | SortOrder
    update_detail?: SortOrderInput | SortOrder
    published_at?: SortOrder
    _count?: campaign_updateCountOrderByAggregateInput
    _max?: campaign_updateMaxOrderByAggregateInput
    _min?: campaign_updateMinOrderByAggregateInput
  }

  export type campaign_updateScalarWhereWithAggregatesInput = {
    AND?: campaign_updateScalarWhereWithAggregatesInput | campaign_updateScalarWhereWithAggregatesInput[]
    OR?: campaign_updateScalarWhereWithAggregatesInput[]
    NOT?: campaign_updateScalarWhereWithAggregatesInput | campaign_updateScalarWhereWithAggregatesInput[]
    update_id?: UuidWithAggregatesFilter<"campaign_update"> | string
    campaign_id?: UuidWithAggregatesFilter<"campaign_update"> | string
    update_title?: StringNullableWithAggregatesFilter<"campaign_update"> | string | null
    update_detail?: StringNullableWithAggregatesFilter<"campaign_update"> | string | null
    published_at?: DateTimeWithAggregatesFilter<"campaign_update"> | Date | string
  }

  export type communityWhereInput = {
    AND?: communityWhereInput | communityWhereInput[]
    OR?: communityWhereInput[]
    NOT?: communityWhereInput | communityWhereInput[]
    community_id?: UuidFilter<"community"> | string
    campaign_id?: UuidFilter<"community"> | string
    community_membership?: XOR<Community_membershipNullableRelationFilter, community_membershipWhereInput> | null
    community_proposal?: Community_proposalListRelationFilter
  }

  export type communityOrderByWithRelationInput = {
    community_id?: SortOrder
    campaign_id?: SortOrder
    community_membership?: community_membershipOrderByWithRelationInput
    community_proposal?: community_proposalOrderByRelationAggregateInput
  }

  export type communityWhereUniqueInput = Prisma.AtLeast<{
    community_id?: string
    AND?: communityWhereInput | communityWhereInput[]
    OR?: communityWhereInput[]
    NOT?: communityWhereInput | communityWhereInput[]
    campaign_id?: UuidFilter<"community"> | string
    community_membership?: XOR<Community_membershipNullableRelationFilter, community_membershipWhereInput> | null
    community_proposal?: Community_proposalListRelationFilter
  }, "community_id">

  export type communityOrderByWithAggregationInput = {
    community_id?: SortOrder
    campaign_id?: SortOrder
    _count?: communityCountOrderByAggregateInput
    _max?: communityMaxOrderByAggregateInput
    _min?: communityMinOrderByAggregateInput
  }

  export type communityScalarWhereWithAggregatesInput = {
    AND?: communityScalarWhereWithAggregatesInput | communityScalarWhereWithAggregatesInput[]
    OR?: communityScalarWhereWithAggregatesInput[]
    NOT?: communityScalarWhereWithAggregatesInput | communityScalarWhereWithAggregatesInput[]
    community_id?: UuidWithAggregatesFilter<"community"> | string
    campaign_id?: UuidWithAggregatesFilter<"community"> | string
  }

  export type community_chatWhereInput = {
    AND?: community_chatWhereInput | community_chatWhereInput[]
    OR?: community_chatWhereInput[]
    NOT?: community_chatWhereInput | community_chatWhereInput[]
    chat_id?: UuidFilter<"community_chat"> | string
    community_proposal_id?: UuidFilter<"community_chat"> | string
    chat?: StringFilter<"community_chat"> | string
    user_id?: UuidFilter<"community_chat"> | string
    created_at?: DateTimeFilter<"community_chat"> | Date | string
    community_proposal?: XOR<Community_proposalRelationFilter, community_proposalWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type community_chatOrderByWithRelationInput = {
    chat_id?: SortOrder
    community_proposal_id?: SortOrder
    chat?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    community_proposal?: community_proposalOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type community_chatWhereUniqueInput = Prisma.AtLeast<{
    chat_id?: string
    AND?: community_chatWhereInput | community_chatWhereInput[]
    OR?: community_chatWhereInput[]
    NOT?: community_chatWhereInput | community_chatWhereInput[]
    community_proposal_id?: UuidFilter<"community_chat"> | string
    chat?: StringFilter<"community_chat"> | string
    user_id?: UuidFilter<"community_chat"> | string
    created_at?: DateTimeFilter<"community_chat"> | Date | string
    community_proposal?: XOR<Community_proposalRelationFilter, community_proposalWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "chat_id">

  export type community_chatOrderByWithAggregationInput = {
    chat_id?: SortOrder
    community_proposal_id?: SortOrder
    chat?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    _count?: community_chatCountOrderByAggregateInput
    _max?: community_chatMaxOrderByAggregateInput
    _min?: community_chatMinOrderByAggregateInput
  }

  export type community_chatScalarWhereWithAggregatesInput = {
    AND?: community_chatScalarWhereWithAggregatesInput | community_chatScalarWhereWithAggregatesInput[]
    OR?: community_chatScalarWhereWithAggregatesInput[]
    NOT?: community_chatScalarWhereWithAggregatesInput | community_chatScalarWhereWithAggregatesInput[]
    chat_id?: UuidWithAggregatesFilter<"community_chat"> | string
    community_proposal_id?: UuidWithAggregatesFilter<"community_chat"> | string
    chat?: StringWithAggregatesFilter<"community_chat"> | string
    user_id?: UuidWithAggregatesFilter<"community_chat"> | string
    created_at?: DateTimeWithAggregatesFilter<"community_chat"> | Date | string
  }

  export type community_membershipWhereInput = {
    AND?: community_membershipWhereInput | community_membershipWhereInput[]
    OR?: community_membershipWhereInput[]
    NOT?: community_membershipWhereInput | community_membershipWhereInput[]
    community_membership_id?: UuidFilter<"community_membership"> | string
    community_id?: UuidFilter<"community_membership"> | string
    user_id?: UuidFilter<"community_membership"> | string
    joinedDate?: DateTimeFilter<"community_membership"> | Date | string
    exited_date?: DateTimeNullableFilter<"community_membership"> | Date | string | null
    community?: XOR<CommunityRelationFilter, communityWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type community_membershipOrderByWithRelationInput = {
    community_membership_id?: SortOrder
    community_id?: SortOrder
    user_id?: SortOrder
    joinedDate?: SortOrder
    exited_date?: SortOrderInput | SortOrder
    community?: communityOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type community_membershipWhereUniqueInput = Prisma.AtLeast<{
    community_membership_id?: string
    community_id?: string
    AND?: community_membershipWhereInput | community_membershipWhereInput[]
    OR?: community_membershipWhereInput[]
    NOT?: community_membershipWhereInput | community_membershipWhereInput[]
    user_id?: UuidFilter<"community_membership"> | string
    joinedDate?: DateTimeFilter<"community_membership"> | Date | string
    exited_date?: DateTimeNullableFilter<"community_membership"> | Date | string | null
    community?: XOR<CommunityRelationFilter, communityWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "community_membership_id" | "community_id">

  export type community_membershipOrderByWithAggregationInput = {
    community_membership_id?: SortOrder
    community_id?: SortOrder
    user_id?: SortOrder
    joinedDate?: SortOrder
    exited_date?: SortOrderInput | SortOrder
    _count?: community_membershipCountOrderByAggregateInput
    _max?: community_membershipMaxOrderByAggregateInput
    _min?: community_membershipMinOrderByAggregateInput
  }

  export type community_membershipScalarWhereWithAggregatesInput = {
    AND?: community_membershipScalarWhereWithAggregatesInput | community_membershipScalarWhereWithAggregatesInput[]
    OR?: community_membershipScalarWhereWithAggregatesInput[]
    NOT?: community_membershipScalarWhereWithAggregatesInput | community_membershipScalarWhereWithAggregatesInput[]
    community_membership_id?: UuidWithAggregatesFilter<"community_membership"> | string
    community_id?: UuidWithAggregatesFilter<"community_membership"> | string
    user_id?: UuidWithAggregatesFilter<"community_membership"> | string
    joinedDate?: DateTimeWithAggregatesFilter<"community_membership"> | Date | string
    exited_date?: DateTimeNullableWithAggregatesFilter<"community_membership"> | Date | string | null
  }

  export type community_proposalWhereInput = {
    AND?: community_proposalWhereInput | community_proposalWhereInput[]
    OR?: community_proposalWhereInput[]
    NOT?: community_proposalWhereInput | community_proposalWhereInput[]
    proposal_com_id?: UuidFilter<"community_proposal"> | string
    setuju?: IntFilter<"community_proposal"> | number
    tidak_setuju?: IntFilter<"community_proposal"> | number
    abstain?: IntFilter<"community_proposal"> | number
    title?: StringFilter<"community_proposal"> | string
    deskripsi?: StringNullableFilter<"community_proposal"> | string | null
    file_tambahan?: BytesNullableFilter<"community_proposal"> | Buffer | null
    amount?: BigIntFilter<"community_proposal"> | bigint | number
    community_id?: UuidFilter<"community_proposal"> | string
    community_chat?: Community_chatListRelationFilter
    community?: XOR<CommunityRelationFilter, communityWhereInput>
    user_voted?: User_votedListRelationFilter
  }

  export type community_proposalOrderByWithRelationInput = {
    proposal_com_id?: SortOrder
    setuju?: SortOrder
    tidak_setuju?: SortOrder
    abstain?: SortOrder
    title?: SortOrder
    deskripsi?: SortOrderInput | SortOrder
    file_tambahan?: SortOrderInput | SortOrder
    amount?: SortOrder
    community_id?: SortOrder
    community_chat?: community_chatOrderByRelationAggregateInput
    community?: communityOrderByWithRelationInput
    user_voted?: user_votedOrderByRelationAggregateInput
  }

  export type community_proposalWhereUniqueInput = Prisma.AtLeast<{
    proposal_com_id?: string
    AND?: community_proposalWhereInput | community_proposalWhereInput[]
    OR?: community_proposalWhereInput[]
    NOT?: community_proposalWhereInput | community_proposalWhereInput[]
    setuju?: IntFilter<"community_proposal"> | number
    tidak_setuju?: IntFilter<"community_proposal"> | number
    abstain?: IntFilter<"community_proposal"> | number
    title?: StringFilter<"community_proposal"> | string
    deskripsi?: StringNullableFilter<"community_proposal"> | string | null
    file_tambahan?: BytesNullableFilter<"community_proposal"> | Buffer | null
    amount?: BigIntFilter<"community_proposal"> | bigint | number
    community_id?: UuidFilter<"community_proposal"> | string
    community_chat?: Community_chatListRelationFilter
    community?: XOR<CommunityRelationFilter, communityWhereInput>
    user_voted?: User_votedListRelationFilter
  }, "proposal_com_id">

  export type community_proposalOrderByWithAggregationInput = {
    proposal_com_id?: SortOrder
    setuju?: SortOrder
    tidak_setuju?: SortOrder
    abstain?: SortOrder
    title?: SortOrder
    deskripsi?: SortOrderInput | SortOrder
    file_tambahan?: SortOrderInput | SortOrder
    amount?: SortOrder
    community_id?: SortOrder
    _count?: community_proposalCountOrderByAggregateInput
    _avg?: community_proposalAvgOrderByAggregateInput
    _max?: community_proposalMaxOrderByAggregateInput
    _min?: community_proposalMinOrderByAggregateInput
    _sum?: community_proposalSumOrderByAggregateInput
  }

  export type community_proposalScalarWhereWithAggregatesInput = {
    AND?: community_proposalScalarWhereWithAggregatesInput | community_proposalScalarWhereWithAggregatesInput[]
    OR?: community_proposalScalarWhereWithAggregatesInput[]
    NOT?: community_proposalScalarWhereWithAggregatesInput | community_proposalScalarWhereWithAggregatesInput[]
    proposal_com_id?: UuidWithAggregatesFilter<"community_proposal"> | string
    setuju?: IntWithAggregatesFilter<"community_proposal"> | number
    tidak_setuju?: IntWithAggregatesFilter<"community_proposal"> | number
    abstain?: IntWithAggregatesFilter<"community_proposal"> | number
    title?: StringWithAggregatesFilter<"community_proposal"> | string
    deskripsi?: StringNullableWithAggregatesFilter<"community_proposal"> | string | null
    file_tambahan?: BytesNullableWithAggregatesFilter<"community_proposal"> | Buffer | null
    amount?: BigIntWithAggregatesFilter<"community_proposal"> | bigint | number
    community_id?: UuidWithAggregatesFilter<"community_proposal"> | string
  }

  export type contact_usahaWhereInput = {
    AND?: contact_usahaWhereInput | contact_usahaWhereInput[]
    OR?: contact_usahaWhereInput[]
    NOT?: contact_usahaWhereInput | contact_usahaWhereInput[]
    contact_id?: UuidFilter<"contact_usaha"> | string
    campaign_id?: UuidFilter<"contact_usaha"> | string
    telepon_wa?: StringNullableFilter<"contact_usaha"> | string | null
    fax?: StringNullableFilter<"contact_usaha"> | string | null
    email?: StringNullableFilter<"contact_usaha"> | string | null
    website?: StringNullableFilter<"contact_usaha"> | string | null
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }

  export type contact_usahaOrderByWithRelationInput = {
    contact_id?: SortOrder
    campaign_id?: SortOrder
    telepon_wa?: SortOrderInput | SortOrder
    fax?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    campaign?: campaignOrderByWithRelationInput
  }

  export type contact_usahaWhereUniqueInput = Prisma.AtLeast<{
    contact_id?: string
    campaign_id?: string
    AND?: contact_usahaWhereInput | contact_usahaWhereInput[]
    OR?: contact_usahaWhereInput[]
    NOT?: contact_usahaWhereInput | contact_usahaWhereInput[]
    telepon_wa?: StringNullableFilter<"contact_usaha"> | string | null
    fax?: StringNullableFilter<"contact_usaha"> | string | null
    email?: StringNullableFilter<"contact_usaha"> | string | null
    website?: StringNullableFilter<"contact_usaha"> | string | null
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }, "contact_id" | "campaign_id">

  export type contact_usahaOrderByWithAggregationInput = {
    contact_id?: SortOrder
    campaign_id?: SortOrder
    telepon_wa?: SortOrderInput | SortOrder
    fax?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    _count?: contact_usahaCountOrderByAggregateInput
    _max?: contact_usahaMaxOrderByAggregateInput
    _min?: contact_usahaMinOrderByAggregateInput
  }

  export type contact_usahaScalarWhereWithAggregatesInput = {
    AND?: contact_usahaScalarWhereWithAggregatesInput | contact_usahaScalarWhereWithAggregatesInput[]
    OR?: contact_usahaScalarWhereWithAggregatesInput[]
    NOT?: contact_usahaScalarWhereWithAggregatesInput | contact_usahaScalarWhereWithAggregatesInput[]
    contact_id?: UuidWithAggregatesFilter<"contact_usaha"> | string
    campaign_id?: UuidWithAggregatesFilter<"contact_usaha"> | string
    telepon_wa?: StringNullableWithAggregatesFilter<"contact_usaha"> | string | null
    fax?: StringNullableWithAggregatesFilter<"contact_usaha"> | string | null
    email?: StringNullableWithAggregatesFilter<"contact_usaha"> | string | null
    website?: StringNullableWithAggregatesFilter<"contact_usaha"> | string | null
  }

  export type crowdfundingWhereInput = {
    AND?: crowdfundingWhereInput | crowdfundingWhereInput[]
    OR?: crowdfundingWhereInput[]
    NOT?: crowdfundingWhereInput | crowdfundingWhereInput[]
    crowdfunding_id?: UuidFilter<"crowdfunding"> | string
    campaign_id?: UuidFilter<"crowdfunding"> | string
    target_raise?: BigIntNullableFilter<"crowdfunding"> | bigint | number | null
    equity_dijual?: DecimalNullableFilter<"crowdfunding"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeNullableFilter<"crowdfunding"> | Date | string | null
    end_date?: DateTimeNullableFilter<"crowdfunding"> | Date | string | null
    fund_raised?: BigIntFilter<"crowdfunding"> | bigint | number
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
    data_rekening?: XOR<Data_rekeningNullableRelationFilter, data_rekeningWhereInput> | null
    highlight_product?: XOR<Highlight_productNullableRelationFilter, highlight_productWhereInput> | null
    product_information?: XOR<Product_informationNullableRelationFilter, product_informationWhereInput> | null
  }

  export type crowdfundingOrderByWithRelationInput = {
    crowdfunding_id?: SortOrder
    campaign_id?: SortOrder
    target_raise?: SortOrderInput | SortOrder
    equity_dijual?: SortOrderInput | SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    fund_raised?: SortOrder
    campaign?: campaignOrderByWithRelationInput
    data_rekening?: data_rekeningOrderByWithRelationInput
    highlight_product?: highlight_productOrderByWithRelationInput
    product_information?: product_informationOrderByWithRelationInput
  }

  export type crowdfundingWhereUniqueInput = Prisma.AtLeast<{
    crowdfunding_id?: string
    campaign_id?: string
    AND?: crowdfundingWhereInput | crowdfundingWhereInput[]
    OR?: crowdfundingWhereInput[]
    NOT?: crowdfundingWhereInput | crowdfundingWhereInput[]
    target_raise?: BigIntNullableFilter<"crowdfunding"> | bigint | number | null
    equity_dijual?: DecimalNullableFilter<"crowdfunding"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeNullableFilter<"crowdfunding"> | Date | string | null
    end_date?: DateTimeNullableFilter<"crowdfunding"> | Date | string | null
    fund_raised?: BigIntFilter<"crowdfunding"> | bigint | number
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
    data_rekening?: XOR<Data_rekeningNullableRelationFilter, data_rekeningWhereInput> | null
    highlight_product?: XOR<Highlight_productNullableRelationFilter, highlight_productWhereInput> | null
    product_information?: XOR<Product_informationNullableRelationFilter, product_informationWhereInput> | null
  }, "crowdfunding_id" | "campaign_id">

  export type crowdfundingOrderByWithAggregationInput = {
    crowdfunding_id?: SortOrder
    campaign_id?: SortOrder
    target_raise?: SortOrderInput | SortOrder
    equity_dijual?: SortOrderInput | SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    fund_raised?: SortOrder
    _count?: crowdfundingCountOrderByAggregateInput
    _avg?: crowdfundingAvgOrderByAggregateInput
    _max?: crowdfundingMaxOrderByAggregateInput
    _min?: crowdfundingMinOrderByAggregateInput
    _sum?: crowdfundingSumOrderByAggregateInput
  }

  export type crowdfundingScalarWhereWithAggregatesInput = {
    AND?: crowdfundingScalarWhereWithAggregatesInput | crowdfundingScalarWhereWithAggregatesInput[]
    OR?: crowdfundingScalarWhereWithAggregatesInput[]
    NOT?: crowdfundingScalarWhereWithAggregatesInput | crowdfundingScalarWhereWithAggregatesInput[]
    crowdfunding_id?: UuidWithAggregatesFilter<"crowdfunding"> | string
    campaign_id?: UuidWithAggregatesFilter<"crowdfunding"> | string
    target_raise?: BigIntNullableWithAggregatesFilter<"crowdfunding"> | bigint | number | null
    equity_dijual?: DecimalNullableWithAggregatesFilter<"crowdfunding"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeNullableWithAggregatesFilter<"crowdfunding"> | Date | string | null
    end_date?: DateTimeNullableWithAggregatesFilter<"crowdfunding"> | Date | string | null
    fund_raised?: BigIntWithAggregatesFilter<"crowdfunding"> | bigint | number
  }

  export type data_rekeningWhereInput = {
    AND?: data_rekeningWhereInput | data_rekeningWhereInput[]
    OR?: data_rekeningWhereInput[]
    NOT?: data_rekeningWhereInput | data_rekeningWhereInput[]
    rekening_id?: UuidFilter<"data_rekening"> | string
    nama_rekening?: StringNullableFilter<"data_rekening"> | string | null
    nama_bank?: StringNullableFilter<"data_rekening"> | string | null
    nomor_rekening?: StringNullableFilter<"data_rekening"> | string | null
    crowdfunding_id?: UuidFilter<"data_rekening"> | string
    crowdfunding?: XOR<CrowdfundingRelationFilter, crowdfundingWhereInput>
  }

  export type data_rekeningOrderByWithRelationInput = {
    rekening_id?: SortOrder
    nama_rekening?: SortOrderInput | SortOrder
    nama_bank?: SortOrderInput | SortOrder
    nomor_rekening?: SortOrderInput | SortOrder
    crowdfunding_id?: SortOrder
    crowdfunding?: crowdfundingOrderByWithRelationInput
  }

  export type data_rekeningWhereUniqueInput = Prisma.AtLeast<{
    rekening_id?: string
    crowdfunding_id?: string
    AND?: data_rekeningWhereInput | data_rekeningWhereInput[]
    OR?: data_rekeningWhereInput[]
    NOT?: data_rekeningWhereInput | data_rekeningWhereInput[]
    nama_rekening?: StringNullableFilter<"data_rekening"> | string | null
    nama_bank?: StringNullableFilter<"data_rekening"> | string | null
    nomor_rekening?: StringNullableFilter<"data_rekening"> | string | null
    crowdfunding?: XOR<CrowdfundingRelationFilter, crowdfundingWhereInput>
  }, "rekening_id" | "crowdfunding_id">

  export type data_rekeningOrderByWithAggregationInput = {
    rekening_id?: SortOrder
    nama_rekening?: SortOrderInput | SortOrder
    nama_bank?: SortOrderInput | SortOrder
    nomor_rekening?: SortOrderInput | SortOrder
    crowdfunding_id?: SortOrder
    _count?: data_rekeningCountOrderByAggregateInput
    _max?: data_rekeningMaxOrderByAggregateInput
    _min?: data_rekeningMinOrderByAggregateInput
  }

  export type data_rekeningScalarWhereWithAggregatesInput = {
    AND?: data_rekeningScalarWhereWithAggregatesInput | data_rekeningScalarWhereWithAggregatesInput[]
    OR?: data_rekeningScalarWhereWithAggregatesInput[]
    NOT?: data_rekeningScalarWhereWithAggregatesInput | data_rekeningScalarWhereWithAggregatesInput[]
    rekening_id?: UuidWithAggregatesFilter<"data_rekening"> | string
    nama_rekening?: StringNullableWithAggregatesFilter<"data_rekening"> | string | null
    nama_bank?: StringNullableWithAggregatesFilter<"data_rekening"> | string | null
    nomor_rekening?: StringNullableWithAggregatesFilter<"data_rekening"> | string | null
    crowdfunding_id?: UuidWithAggregatesFilter<"data_rekening"> | string
  }

  export type discussionWhereInput = {
    AND?: discussionWhereInput | discussionWhereInput[]
    OR?: discussionWhereInput[]
    NOT?: discussionWhereInput | discussionWhereInput[]
    discussion_id?: UuidFilter<"discussion"> | string
    campaign_id?: UuidFilter<"discussion"> | string
    user_id?: UuidFilter<"discussion"> | string
    createdAt?: DateTimeFilter<"discussion"> | Date | string
    lastActivity?: DateTimeNullableFilter<"discussion"> | Date | string | null
    message?: StringFilter<"discussion"> | string
    like?: IntNullableFilter<"discussion"> | number | null
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
    replies_discussion?: Replies_discussionListRelationFilter
  }

  export type discussionOrderByWithRelationInput = {
    discussion_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    lastActivity?: SortOrderInput | SortOrder
    message?: SortOrder
    like?: SortOrderInput | SortOrder
    campaign?: campaignOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    replies_discussion?: replies_discussionOrderByRelationAggregateInput
  }

  export type discussionWhereUniqueInput = Prisma.AtLeast<{
    discussion_id?: string
    AND?: discussionWhereInput | discussionWhereInput[]
    OR?: discussionWhereInput[]
    NOT?: discussionWhereInput | discussionWhereInput[]
    campaign_id?: UuidFilter<"discussion"> | string
    user_id?: UuidFilter<"discussion"> | string
    createdAt?: DateTimeFilter<"discussion"> | Date | string
    lastActivity?: DateTimeNullableFilter<"discussion"> | Date | string | null
    message?: StringFilter<"discussion"> | string
    like?: IntNullableFilter<"discussion"> | number | null
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
    replies_discussion?: Replies_discussionListRelationFilter
  }, "discussion_id">

  export type discussionOrderByWithAggregationInput = {
    discussion_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    lastActivity?: SortOrderInput | SortOrder
    message?: SortOrder
    like?: SortOrderInput | SortOrder
    _count?: discussionCountOrderByAggregateInput
    _avg?: discussionAvgOrderByAggregateInput
    _max?: discussionMaxOrderByAggregateInput
    _min?: discussionMinOrderByAggregateInput
    _sum?: discussionSumOrderByAggregateInput
  }

  export type discussionScalarWhereWithAggregatesInput = {
    AND?: discussionScalarWhereWithAggregatesInput | discussionScalarWhereWithAggregatesInput[]
    OR?: discussionScalarWhereWithAggregatesInput[]
    NOT?: discussionScalarWhereWithAggregatesInput | discussionScalarWhereWithAggregatesInput[]
    discussion_id?: UuidWithAggregatesFilter<"discussion"> | string
    campaign_id?: UuidWithAggregatesFilter<"discussion"> | string
    user_id?: UuidWithAggregatesFilter<"discussion"> | string
    createdAt?: DateTimeWithAggregatesFilter<"discussion"> | Date | string
    lastActivity?: DateTimeNullableWithAggregatesFilter<"discussion"> | Date | string | null
    message?: StringWithAggregatesFilter<"discussion"> | string
    like?: IntNullableWithAggregatesFilter<"discussion"> | number | null
  }

  export type documentWhereInput = {
    AND?: documentWhereInput | documentWhereInput[]
    OR?: documentWhereInput[]
    NOT?: documentWhereInput | documentWhereInput[]
    document_id?: UuidFilter<"document"> | string
    campaign_id?: UuidFilter<"document"> | string
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
    document_legal?: Document_legalListRelationFilter
    document_proposal?: Document_proposalListRelationFilter
  }

  export type documentOrderByWithRelationInput = {
    document_id?: SortOrder
    campaign_id?: SortOrder
    campaign?: campaignOrderByWithRelationInput
    document_legal?: document_legalOrderByRelationAggregateInput
    document_proposal?: document_proposalOrderByRelationAggregateInput
  }

  export type documentWhereUniqueInput = Prisma.AtLeast<{
    document_id?: string
    campaign_id?: string
    AND?: documentWhereInput | documentWhereInput[]
    OR?: documentWhereInput[]
    NOT?: documentWhereInput | documentWhereInput[]
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
    document_legal?: Document_legalListRelationFilter
    document_proposal?: Document_proposalListRelationFilter
  }, "document_id" | "campaign_id">

  export type documentOrderByWithAggregationInput = {
    document_id?: SortOrder
    campaign_id?: SortOrder
    _count?: documentCountOrderByAggregateInput
    _max?: documentMaxOrderByAggregateInput
    _min?: documentMinOrderByAggregateInput
  }

  export type documentScalarWhereWithAggregatesInput = {
    AND?: documentScalarWhereWithAggregatesInput | documentScalarWhereWithAggregatesInput[]
    OR?: documentScalarWhereWithAggregatesInput[]
    NOT?: documentScalarWhereWithAggregatesInput | documentScalarWhereWithAggregatesInput[]
    document_id?: UuidWithAggregatesFilter<"document"> | string
    campaign_id?: UuidWithAggregatesFilter<"document"> | string
  }

  export type document_legalWhereInput = {
    AND?: document_legalWhereInput | document_legalWhereInput[]
    OR?: document_legalWhereInput[]
    NOT?: document_legalWhereInput | document_legalWhereInput[]
    document_legal_id?: UuidFilter<"document_legal"> | string
    document_id?: UuidFilter<"document_legal"> | string
    nama_dokumen?: StringNullableFilter<"document_legal"> | string | null
    file?: BytesNullableFilter<"document_legal"> | Buffer | null
    document?: XOR<DocumentRelationFilter, documentWhereInput>
  }

  export type document_legalOrderByWithRelationInput = {
    document_legal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrderInput | SortOrder
    file?: SortOrderInput | SortOrder
    document?: documentOrderByWithRelationInput
  }

  export type document_legalWhereUniqueInput = Prisma.AtLeast<{
    document_legal_id?: string
    AND?: document_legalWhereInput | document_legalWhereInput[]
    OR?: document_legalWhereInput[]
    NOT?: document_legalWhereInput | document_legalWhereInput[]
    document_id?: UuidFilter<"document_legal"> | string
    nama_dokumen?: StringNullableFilter<"document_legal"> | string | null
    file?: BytesNullableFilter<"document_legal"> | Buffer | null
    document?: XOR<DocumentRelationFilter, documentWhereInput>
  }, "document_legal_id">

  export type document_legalOrderByWithAggregationInput = {
    document_legal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrderInput | SortOrder
    file?: SortOrderInput | SortOrder
    _count?: document_legalCountOrderByAggregateInput
    _max?: document_legalMaxOrderByAggregateInput
    _min?: document_legalMinOrderByAggregateInput
  }

  export type document_legalScalarWhereWithAggregatesInput = {
    AND?: document_legalScalarWhereWithAggregatesInput | document_legalScalarWhereWithAggregatesInput[]
    OR?: document_legalScalarWhereWithAggregatesInput[]
    NOT?: document_legalScalarWhereWithAggregatesInput | document_legalScalarWhereWithAggregatesInput[]
    document_legal_id?: UuidWithAggregatesFilter<"document_legal"> | string
    document_id?: UuidWithAggregatesFilter<"document_legal"> | string
    nama_dokumen?: StringNullableWithAggregatesFilter<"document_legal"> | string | null
    file?: BytesNullableWithAggregatesFilter<"document_legal"> | Buffer | null
  }

  export type document_proposalWhereInput = {
    AND?: document_proposalWhereInput | document_proposalWhereInput[]
    OR?: document_proposalWhereInput[]
    NOT?: document_proposalWhereInput | document_proposalWhereInput[]
    document_proposal_id?: UuidFilter<"document_proposal"> | string
    document_id?: UuidFilter<"document_proposal"> | string
    nama_dokumen?: StringNullableFilter<"document_proposal"> | string | null
    file?: BytesNullableFilter<"document_proposal"> | Buffer | null
    document?: XOR<DocumentRelationFilter, documentWhereInput>
  }

  export type document_proposalOrderByWithRelationInput = {
    document_proposal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrderInput | SortOrder
    file?: SortOrderInput | SortOrder
    document?: documentOrderByWithRelationInput
  }

  export type document_proposalWhereUniqueInput = Prisma.AtLeast<{
    document_proposal_id?: string
    AND?: document_proposalWhereInput | document_proposalWhereInput[]
    OR?: document_proposalWhereInput[]
    NOT?: document_proposalWhereInput | document_proposalWhereInput[]
    document_id?: UuidFilter<"document_proposal"> | string
    nama_dokumen?: StringNullableFilter<"document_proposal"> | string | null
    file?: BytesNullableFilter<"document_proposal"> | Buffer | null
    document?: XOR<DocumentRelationFilter, documentWhereInput>
  }, "document_proposal_id">

  export type document_proposalOrderByWithAggregationInput = {
    document_proposal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrderInput | SortOrder
    file?: SortOrderInput | SortOrder
    _count?: document_proposalCountOrderByAggregateInput
    _max?: document_proposalMaxOrderByAggregateInput
    _min?: document_proposalMinOrderByAggregateInput
  }

  export type document_proposalScalarWhereWithAggregatesInput = {
    AND?: document_proposalScalarWhereWithAggregatesInput | document_proposalScalarWhereWithAggregatesInput[]
    OR?: document_proposalScalarWhereWithAggregatesInput[]
    NOT?: document_proposalScalarWhereWithAggregatesInput | document_proposalScalarWhereWithAggregatesInput[]
    document_proposal_id?: UuidWithAggregatesFilter<"document_proposal"> | string
    document_id?: UuidWithAggregatesFilter<"document_proposal"> | string
    nama_dokumen?: StringNullableWithAggregatesFilter<"document_proposal"> | string | null
    file?: BytesNullableWithAggregatesFilter<"document_proposal"> | Buffer | null
  }

  export type foto_dokumenWhereInput = {
    AND?: foto_dokumenWhereInput | foto_dokumenWhereInput[]
    OR?: foto_dokumenWhereInput[]
    NOT?: foto_dokumenWhereInput | foto_dokumenWhereInput[]
    foto_dokumen_id?: UuidFilter<"foto_dokumen"> | string
    foto_ktp_depan?: BytesFilter<"foto_dokumen"> | Buffer
    foto_ktp_belakang?: BytesFilter<"foto_dokumen"> | Buffer
    foto_selfie?: BytesFilter<"foto_dokumen"> | Buffer
    kyc_level_1_id?: UuidFilter<"foto_dokumen"> | string
    kyc_level_1?: XOR<Kyc_level_1RelationFilter, kyc_level_1WhereInput>
  }

  export type foto_dokumenOrderByWithRelationInput = {
    foto_dokumen_id?: SortOrder
    foto_ktp_depan?: SortOrder
    foto_ktp_belakang?: SortOrder
    foto_selfie?: SortOrder
    kyc_level_1_id?: SortOrder
    kyc_level_1?: kyc_level_1OrderByWithRelationInput
  }

  export type foto_dokumenWhereUniqueInput = Prisma.AtLeast<{
    foto_dokumen_id?: string
    kyc_level_1_id?: string
    AND?: foto_dokumenWhereInput | foto_dokumenWhereInput[]
    OR?: foto_dokumenWhereInput[]
    NOT?: foto_dokumenWhereInput | foto_dokumenWhereInput[]
    foto_ktp_depan?: BytesFilter<"foto_dokumen"> | Buffer
    foto_ktp_belakang?: BytesFilter<"foto_dokumen"> | Buffer
    foto_selfie?: BytesFilter<"foto_dokumen"> | Buffer
    kyc_level_1?: XOR<Kyc_level_1RelationFilter, kyc_level_1WhereInput>
  }, "foto_dokumen_id" | "kyc_level_1_id">

  export type foto_dokumenOrderByWithAggregationInput = {
    foto_dokumen_id?: SortOrder
    foto_ktp_depan?: SortOrder
    foto_ktp_belakang?: SortOrder
    foto_selfie?: SortOrder
    kyc_level_1_id?: SortOrder
    _count?: foto_dokumenCountOrderByAggregateInput
    _max?: foto_dokumenMaxOrderByAggregateInput
    _min?: foto_dokumenMinOrderByAggregateInput
  }

  export type foto_dokumenScalarWhereWithAggregatesInput = {
    AND?: foto_dokumenScalarWhereWithAggregatesInput | foto_dokumenScalarWhereWithAggregatesInput[]
    OR?: foto_dokumenScalarWhereWithAggregatesInput[]
    NOT?: foto_dokumenScalarWhereWithAggregatesInput | foto_dokumenScalarWhereWithAggregatesInput[]
    foto_dokumen_id?: UuidWithAggregatesFilter<"foto_dokumen"> | string
    foto_ktp_depan?: BytesWithAggregatesFilter<"foto_dokumen"> | Buffer
    foto_ktp_belakang?: BytesWithAggregatesFilter<"foto_dokumen"> | Buffer
    foto_selfie?: BytesWithAggregatesFilter<"foto_dokumen"> | Buffer
    kyc_level_1_id?: UuidWithAggregatesFilter<"foto_dokumen"> | string
  }

  export type highlight_productWhereInput = {
    AND?: highlight_productWhereInput | highlight_productWhereInput[]
    OR?: highlight_productWhereInput[]
    NOT?: highlight_productWhereInput | highlight_productWhereInput[]
    highlight_product_id?: IntFilter<"highlight_product"> | number
    crowdfunding_id?: UuidFilter<"highlight_product"> | string
    highlight?: StringNullableFilter<"highlight_product"> | string | null
    crowdfunding?: XOR<CrowdfundingRelationFilter, crowdfundingWhereInput>
  }

  export type highlight_productOrderByWithRelationInput = {
    highlight_product_id?: SortOrder
    crowdfunding_id?: SortOrder
    highlight?: SortOrderInput | SortOrder
    crowdfunding?: crowdfundingOrderByWithRelationInput
  }

  export type highlight_productWhereUniqueInput = Prisma.AtLeast<{
    highlight_product_id?: number
    crowdfunding_id?: string
    AND?: highlight_productWhereInput | highlight_productWhereInput[]
    OR?: highlight_productWhereInput[]
    NOT?: highlight_productWhereInput | highlight_productWhereInput[]
    highlight?: StringNullableFilter<"highlight_product"> | string | null
    crowdfunding?: XOR<CrowdfundingRelationFilter, crowdfundingWhereInput>
  }, "highlight_product_id" | "crowdfunding_id">

  export type highlight_productOrderByWithAggregationInput = {
    highlight_product_id?: SortOrder
    crowdfunding_id?: SortOrder
    highlight?: SortOrderInput | SortOrder
    _count?: highlight_productCountOrderByAggregateInput
    _avg?: highlight_productAvgOrderByAggregateInput
    _max?: highlight_productMaxOrderByAggregateInput
    _min?: highlight_productMinOrderByAggregateInput
    _sum?: highlight_productSumOrderByAggregateInput
  }

  export type highlight_productScalarWhereWithAggregatesInput = {
    AND?: highlight_productScalarWhereWithAggregatesInput | highlight_productScalarWhereWithAggregatesInput[]
    OR?: highlight_productScalarWhereWithAggregatesInput[]
    NOT?: highlight_productScalarWhereWithAggregatesInput | highlight_productScalarWhereWithAggregatesInput[]
    highlight_product_id?: IntWithAggregatesFilter<"highlight_product"> | number
    crowdfunding_id?: UuidWithAggregatesFilter<"highlight_product"> | string
    highlight?: StringNullableWithAggregatesFilter<"highlight_product"> | string | null
  }

  export type investmentWhereInput = {
    AND?: investmentWhereInput | investmentWhereInput[]
    OR?: investmentWhereInput[]
    NOT?: investmentWhereInput | investmentWhereInput[]
    investment_id?: UuidFilter<"investment"> | string
    campaign_id?: UuidFilter<"investment"> | string
    user_id?: UuidFilter<"investment"> | string
    amount?: BigIntFilter<"investment"> | bigint | number
    investment_date?: DateTimeFilter<"investment"> | Date | string
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type investmentOrderByWithRelationInput = {
    investment_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    investment_date?: SortOrder
    campaign?: campaignOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type investmentWhereUniqueInput = Prisma.AtLeast<{
    investment_id?: string
    AND?: investmentWhereInput | investmentWhereInput[]
    OR?: investmentWhereInput[]
    NOT?: investmentWhereInput | investmentWhereInput[]
    campaign_id?: UuidFilter<"investment"> | string
    user_id?: UuidFilter<"investment"> | string
    amount?: BigIntFilter<"investment"> | bigint | number
    investment_date?: DateTimeFilter<"investment"> | Date | string
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "investment_id">

  export type investmentOrderByWithAggregationInput = {
    investment_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    investment_date?: SortOrder
    _count?: investmentCountOrderByAggregateInput
    _avg?: investmentAvgOrderByAggregateInput
    _max?: investmentMaxOrderByAggregateInput
    _min?: investmentMinOrderByAggregateInput
    _sum?: investmentSumOrderByAggregateInput
  }

  export type investmentScalarWhereWithAggregatesInput = {
    AND?: investmentScalarWhereWithAggregatesInput | investmentScalarWhereWithAggregatesInput[]
    OR?: investmentScalarWhereWithAggregatesInput[]
    NOT?: investmentScalarWhereWithAggregatesInput | investmentScalarWhereWithAggregatesInput[]
    investment_id?: UuidWithAggregatesFilter<"investment"> | string
    campaign_id?: UuidWithAggregatesFilter<"investment"> | string
    user_id?: UuidWithAggregatesFilter<"investment"> | string
    amount?: BigIntWithAggregatesFilter<"investment"> | bigint | number
    investment_date?: DateTimeWithAggregatesFilter<"investment"> | Date | string
  }

  export type kyc_level_1WhereInput = {
    AND?: kyc_level_1WhereInput | kyc_level_1WhereInput[]
    OR?: kyc_level_1WhereInput[]
    NOT?: kyc_level_1WhereInput | kyc_level_1WhereInput[]
    kyc_level_1_id?: UuidFilter<"kyc_level_1"> | string
    user_id?: UuidFilter<"kyc_level_1"> | string
    full_name?: StringFilter<"kyc_level_1"> | string
    nik?: StringFilter<"kyc_level_1"> | string
    tanggal_lahir?: DateTimeFilter<"kyc_level_1"> | Date | string
    status?: Enumkyc_status_enumFilter<"kyc_level_1"> | $Enums.kyc_status_enum
    createdAt?: DateTimeFilter<"kyc_level_1"> | Date | string
    updatedAt?: DateTimeNullableFilter<"kyc_level_1"> | Date | string | null
    statusUpdate?: StringNullableFilter<"kyc_level_1"> | string | null
    jenis_kelamin?: StringFilter<"kyc_level_1"> | string
    isaproved?: BoolNullableFilter<"kyc_level_1"> | boolean | null
    address?: XOR<AddressNullableRelationFilter, addressWhereInput> | null
    foto_dokumen?: XOR<Foto_dokumenNullableRelationFilter, foto_dokumenWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type kyc_level_1OrderByWithRelationInput = {
    kyc_level_1_id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    nik?: SortOrder
    tanggal_lahir?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    statusUpdate?: SortOrderInput | SortOrder
    jenis_kelamin?: SortOrder
    isaproved?: SortOrderInput | SortOrder
    address?: addressOrderByWithRelationInput
    foto_dokumen?: foto_dokumenOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type kyc_level_1WhereUniqueInput = Prisma.AtLeast<{
    kyc_level_1_id?: string
    user_id?: string
    AND?: kyc_level_1WhereInput | kyc_level_1WhereInput[]
    OR?: kyc_level_1WhereInput[]
    NOT?: kyc_level_1WhereInput | kyc_level_1WhereInput[]
    full_name?: StringFilter<"kyc_level_1"> | string
    nik?: StringFilter<"kyc_level_1"> | string
    tanggal_lahir?: DateTimeFilter<"kyc_level_1"> | Date | string
    status?: Enumkyc_status_enumFilter<"kyc_level_1"> | $Enums.kyc_status_enum
    createdAt?: DateTimeFilter<"kyc_level_1"> | Date | string
    updatedAt?: DateTimeNullableFilter<"kyc_level_1"> | Date | string | null
    statusUpdate?: StringNullableFilter<"kyc_level_1"> | string | null
    jenis_kelamin?: StringFilter<"kyc_level_1"> | string
    isaproved?: BoolNullableFilter<"kyc_level_1"> | boolean | null
    address?: XOR<AddressNullableRelationFilter, addressWhereInput> | null
    foto_dokumen?: XOR<Foto_dokumenNullableRelationFilter, foto_dokumenWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "kyc_level_1_id" | "user_id">

  export type kyc_level_1OrderByWithAggregationInput = {
    kyc_level_1_id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    nik?: SortOrder
    tanggal_lahir?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    statusUpdate?: SortOrderInput | SortOrder
    jenis_kelamin?: SortOrder
    isaproved?: SortOrderInput | SortOrder
    _count?: kyc_level_1CountOrderByAggregateInput
    _max?: kyc_level_1MaxOrderByAggregateInput
    _min?: kyc_level_1MinOrderByAggregateInput
  }

  export type kyc_level_1ScalarWhereWithAggregatesInput = {
    AND?: kyc_level_1ScalarWhereWithAggregatesInput | kyc_level_1ScalarWhereWithAggregatesInput[]
    OR?: kyc_level_1ScalarWhereWithAggregatesInput[]
    NOT?: kyc_level_1ScalarWhereWithAggregatesInput | kyc_level_1ScalarWhereWithAggregatesInput[]
    kyc_level_1_id?: UuidWithAggregatesFilter<"kyc_level_1"> | string
    user_id?: UuidWithAggregatesFilter<"kyc_level_1"> | string
    full_name?: StringWithAggregatesFilter<"kyc_level_1"> | string
    nik?: StringWithAggregatesFilter<"kyc_level_1"> | string
    tanggal_lahir?: DateTimeWithAggregatesFilter<"kyc_level_1"> | Date | string
    status?: Enumkyc_status_enumWithAggregatesFilter<"kyc_level_1"> | $Enums.kyc_status_enum
    createdAt?: DateTimeWithAggregatesFilter<"kyc_level_1"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"kyc_level_1"> | Date | string | null
    statusUpdate?: StringNullableWithAggregatesFilter<"kyc_level_1"> | string | null
    jenis_kelamin?: StringWithAggregatesFilter<"kyc_level_1"> | string
    isaproved?: BoolNullableWithAggregatesFilter<"kyc_level_1"> | boolean | null
  }

  export type kyc_level_2WhereInput = {
    AND?: kyc_level_2WhereInput | kyc_level_2WhereInput[]
    OR?: kyc_level_2WhereInput[]
    NOT?: kyc_level_2WhereInput | kyc_level_2WhereInput[]
    kyc_level_2_id?: UuidFilter<"kyc_level_2"> | string
    user_id?: UuidFilter<"kyc_level_2"> | string
    surat_skck?: BytesFilter<"kyc_level_2"> | Buffer
    surat_domisili?: BytesFilter<"kyc_level_2"> | Buffer
    surat_keterangan_bank?: BytesFilter<"kyc_level_2"> | Buffer
    status?: Enumkyc_status_enumFilter<"kyc_level_2"> | $Enums.kyc_status_enum
    isApproved?: BoolFilter<"kyc_level_2"> | boolean
    createdAt?: DateTimeFilter<"kyc_level_2"> | Date | string
    updatedAt?: DateTimeNullableFilter<"kyc_level_2"> | Date | string | null
    updateStatus?: StringNullableFilter<"kyc_level_2"> | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type kyc_level_2OrderByWithRelationInput = {
    kyc_level_2_id?: SortOrder
    user_id?: SortOrder
    surat_skck?: SortOrder
    surat_domisili?: SortOrder
    surat_keterangan_bank?: SortOrder
    status?: SortOrder
    isApproved?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updateStatus?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
  }

  export type kyc_level_2WhereUniqueInput = Prisma.AtLeast<{
    kyc_level_2_id?: string
    user_id?: string
    AND?: kyc_level_2WhereInput | kyc_level_2WhereInput[]
    OR?: kyc_level_2WhereInput[]
    NOT?: kyc_level_2WhereInput | kyc_level_2WhereInput[]
    surat_skck?: BytesFilter<"kyc_level_2"> | Buffer
    surat_domisili?: BytesFilter<"kyc_level_2"> | Buffer
    surat_keterangan_bank?: BytesFilter<"kyc_level_2"> | Buffer
    status?: Enumkyc_status_enumFilter<"kyc_level_2"> | $Enums.kyc_status_enum
    isApproved?: BoolFilter<"kyc_level_2"> | boolean
    createdAt?: DateTimeFilter<"kyc_level_2"> | Date | string
    updatedAt?: DateTimeNullableFilter<"kyc_level_2"> | Date | string | null
    updateStatus?: StringNullableFilter<"kyc_level_2"> | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "kyc_level_2_id" | "user_id">

  export type kyc_level_2OrderByWithAggregationInput = {
    kyc_level_2_id?: SortOrder
    user_id?: SortOrder
    surat_skck?: SortOrder
    surat_domisili?: SortOrder
    surat_keterangan_bank?: SortOrder
    status?: SortOrder
    isApproved?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updateStatus?: SortOrderInput | SortOrder
    _count?: kyc_level_2CountOrderByAggregateInput
    _max?: kyc_level_2MaxOrderByAggregateInput
    _min?: kyc_level_2MinOrderByAggregateInput
  }

  export type kyc_level_2ScalarWhereWithAggregatesInput = {
    AND?: kyc_level_2ScalarWhereWithAggregatesInput | kyc_level_2ScalarWhereWithAggregatesInput[]
    OR?: kyc_level_2ScalarWhereWithAggregatesInput[]
    NOT?: kyc_level_2ScalarWhereWithAggregatesInput | kyc_level_2ScalarWhereWithAggregatesInput[]
    kyc_level_2_id?: UuidWithAggregatesFilter<"kyc_level_2"> | string
    user_id?: UuidWithAggregatesFilter<"kyc_level_2"> | string
    surat_skck?: BytesWithAggregatesFilter<"kyc_level_2"> | Buffer
    surat_domisili?: BytesWithAggregatesFilter<"kyc_level_2"> | Buffer
    surat_keterangan_bank?: BytesWithAggregatesFilter<"kyc_level_2"> | Buffer
    status?: Enumkyc_status_enumWithAggregatesFilter<"kyc_level_2"> | $Enums.kyc_status_enum
    isApproved?: BoolWithAggregatesFilter<"kyc_level_2"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"kyc_level_2"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"kyc_level_2"> | Date | string | null
    updateStatus?: StringNullableWithAggregatesFilter<"kyc_level_2"> | string | null
  }

  export type legalitas_usahaWhereInput = {
    AND?: legalitas_usahaWhereInput | legalitas_usahaWhereInput[]
    OR?: legalitas_usahaWhereInput[]
    NOT?: legalitas_usahaWhereInput | legalitas_usahaWhereInput[]
    legalitas_id?: UuidFilter<"legalitas_usaha"> | string
    campaign_id?: UuidFilter<"legalitas_usaha"> | string
    tanggal_dibentuk?: DateTimeNullableFilter<"legalitas_usaha"> | Date | string | null
    pemilik?: StringNullableFilter<"legalitas_usaha"> | string | null
    nib?: StringNullableFilter<"legalitas_usaha"> | string | null
    nik_pic?: StringNullableFilter<"legalitas_usaha"> | string | null
    file_perizinan?: BytesNullableFilter<"legalitas_usaha"> | Buffer | null
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }

  export type legalitas_usahaOrderByWithRelationInput = {
    legalitas_id?: SortOrder
    campaign_id?: SortOrder
    tanggal_dibentuk?: SortOrderInput | SortOrder
    pemilik?: SortOrderInput | SortOrder
    nib?: SortOrderInput | SortOrder
    nik_pic?: SortOrderInput | SortOrder
    file_perizinan?: SortOrderInput | SortOrder
    campaign?: campaignOrderByWithRelationInput
  }

  export type legalitas_usahaWhereUniqueInput = Prisma.AtLeast<{
    legalitas_id?: string
    campaign_id?: string
    AND?: legalitas_usahaWhereInput | legalitas_usahaWhereInput[]
    OR?: legalitas_usahaWhereInput[]
    NOT?: legalitas_usahaWhereInput | legalitas_usahaWhereInput[]
    tanggal_dibentuk?: DateTimeNullableFilter<"legalitas_usaha"> | Date | string | null
    pemilik?: StringNullableFilter<"legalitas_usaha"> | string | null
    nib?: StringNullableFilter<"legalitas_usaha"> | string | null
    nik_pic?: StringNullableFilter<"legalitas_usaha"> | string | null
    file_perizinan?: BytesNullableFilter<"legalitas_usaha"> | Buffer | null
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }, "legalitas_id" | "campaign_id">

  export type legalitas_usahaOrderByWithAggregationInput = {
    legalitas_id?: SortOrder
    campaign_id?: SortOrder
    tanggal_dibentuk?: SortOrderInput | SortOrder
    pemilik?: SortOrderInput | SortOrder
    nib?: SortOrderInput | SortOrder
    nik_pic?: SortOrderInput | SortOrder
    file_perizinan?: SortOrderInput | SortOrder
    _count?: legalitas_usahaCountOrderByAggregateInput
    _max?: legalitas_usahaMaxOrderByAggregateInput
    _min?: legalitas_usahaMinOrderByAggregateInput
  }

  export type legalitas_usahaScalarWhereWithAggregatesInput = {
    AND?: legalitas_usahaScalarWhereWithAggregatesInput | legalitas_usahaScalarWhereWithAggregatesInput[]
    OR?: legalitas_usahaScalarWhereWithAggregatesInput[]
    NOT?: legalitas_usahaScalarWhereWithAggregatesInput | legalitas_usahaScalarWhereWithAggregatesInput[]
    legalitas_id?: UuidWithAggregatesFilter<"legalitas_usaha"> | string
    campaign_id?: UuidWithAggregatesFilter<"legalitas_usaha"> | string
    tanggal_dibentuk?: DateTimeNullableWithAggregatesFilter<"legalitas_usaha"> | Date | string | null
    pemilik?: StringNullableWithAggregatesFilter<"legalitas_usaha"> | string | null
    nib?: StringNullableWithAggregatesFilter<"legalitas_usaha"> | string | null
    nik_pic?: StringNullableWithAggregatesFilter<"legalitas_usaha"> | string | null
    file_perizinan?: BytesNullableWithAggregatesFilter<"legalitas_usaha"> | Buffer | null
  }

  export type pesan_campaignWhereInput = {
    AND?: pesan_campaignWhereInput | pesan_campaignWhereInput[]
    OR?: pesan_campaignWhereInput[]
    NOT?: pesan_campaignWhereInput | pesan_campaignWhereInput[]
    pesan_id?: UuidFilter<"pesan_campaign"> | string
    campaign_id?: UuidFilter<"pesan_campaign"> | string
    pesan?: StringFilter<"pesan_campaign"> | string
    createdAt?: DateTimeFilter<"pesan_campaign"> | Date | string
    createdBy?: StringFilter<"pesan_campaign"> | string
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }

  export type pesan_campaignOrderByWithRelationInput = {
    pesan_id?: SortOrder
    campaign_id?: SortOrder
    pesan?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    campaign?: campaignOrderByWithRelationInput
  }

  export type pesan_campaignWhereUniqueInput = Prisma.AtLeast<{
    pesan_id?: string
    AND?: pesan_campaignWhereInput | pesan_campaignWhereInput[]
    OR?: pesan_campaignWhereInput[]
    NOT?: pesan_campaignWhereInput | pesan_campaignWhereInput[]
    campaign_id?: UuidFilter<"pesan_campaign"> | string
    pesan?: StringFilter<"pesan_campaign"> | string
    createdAt?: DateTimeFilter<"pesan_campaign"> | Date | string
    createdBy?: StringFilter<"pesan_campaign"> | string
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }, "pesan_id">

  export type pesan_campaignOrderByWithAggregationInput = {
    pesan_id?: SortOrder
    campaign_id?: SortOrder
    pesan?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    _count?: pesan_campaignCountOrderByAggregateInput
    _max?: pesan_campaignMaxOrderByAggregateInput
    _min?: pesan_campaignMinOrderByAggregateInput
  }

  export type pesan_campaignScalarWhereWithAggregatesInput = {
    AND?: pesan_campaignScalarWhereWithAggregatesInput | pesan_campaignScalarWhereWithAggregatesInput[]
    OR?: pesan_campaignScalarWhereWithAggregatesInput[]
    NOT?: pesan_campaignScalarWhereWithAggregatesInput | pesan_campaignScalarWhereWithAggregatesInput[]
    pesan_id?: UuidWithAggregatesFilter<"pesan_campaign"> | string
    campaign_id?: UuidWithAggregatesFilter<"pesan_campaign"> | string
    pesan?: StringWithAggregatesFilter<"pesan_campaign"> | string
    createdAt?: DateTimeWithAggregatesFilter<"pesan_campaign"> | Date | string
    createdBy?: StringWithAggregatesFilter<"pesan_campaign"> | string
  }

  export type product_informationWhereInput = {
    AND?: product_informationWhereInput | product_informationWhereInput[]
    OR?: product_informationWhereInput[]
    NOT?: product_informationWhereInput | product_informationWhereInput[]
    product_info_id?: IntFilter<"product_information"> | number
    crowdfunding_id?: UuidFilter<"product_information"> | string
    link_video?: StringNullableFilter<"product_information"> | string | null
    product_info?: StringNullableFilter<"product_information"> | string | null
    crowdfunding?: XOR<CrowdfundingRelationFilter, crowdfundingWhereInput>
  }

  export type product_informationOrderByWithRelationInput = {
    product_info_id?: SortOrder
    crowdfunding_id?: SortOrder
    link_video?: SortOrderInput | SortOrder
    product_info?: SortOrderInput | SortOrder
    crowdfunding?: crowdfundingOrderByWithRelationInput
  }

  export type product_informationWhereUniqueInput = Prisma.AtLeast<{
    product_info_id?: number
    crowdfunding_id?: string
    AND?: product_informationWhereInput | product_informationWhereInput[]
    OR?: product_informationWhereInput[]
    NOT?: product_informationWhereInput | product_informationWhereInput[]
    link_video?: StringNullableFilter<"product_information"> | string | null
    product_info?: StringNullableFilter<"product_information"> | string | null
    crowdfunding?: XOR<CrowdfundingRelationFilter, crowdfundingWhereInput>
  }, "product_info_id" | "crowdfunding_id">

  export type product_informationOrderByWithAggregationInput = {
    product_info_id?: SortOrder
    crowdfunding_id?: SortOrder
    link_video?: SortOrderInput | SortOrder
    product_info?: SortOrderInput | SortOrder
    _count?: product_informationCountOrderByAggregateInput
    _avg?: product_informationAvgOrderByAggregateInput
    _max?: product_informationMaxOrderByAggregateInput
    _min?: product_informationMinOrderByAggregateInput
    _sum?: product_informationSumOrderByAggregateInput
  }

  export type product_informationScalarWhereWithAggregatesInput = {
    AND?: product_informationScalarWhereWithAggregatesInput | product_informationScalarWhereWithAggregatesInput[]
    OR?: product_informationScalarWhereWithAggregatesInput[]
    NOT?: product_informationScalarWhereWithAggregatesInput | product_informationScalarWhereWithAggregatesInput[]
    product_info_id?: IntWithAggregatesFilter<"product_information"> | number
    crowdfunding_id?: UuidWithAggregatesFilter<"product_information"> | string
    link_video?: StringNullableWithAggregatesFilter<"product_information"> | string | null
    product_info?: StringNullableWithAggregatesFilter<"product_information"> | string | null
  }

  export type refundWhereInput = {
    AND?: refundWhereInput | refundWhereInput[]
    OR?: refundWhereInput[]
    NOT?: refundWhereInput | refundWhereInput[]
    refund_id?: UuidFilter<"refund"> | string
    amount?: BigIntFilter<"refund"> | bigint | number
    nama_bank?: StringNullableFilter<"refund"> | string | null
    nomor_bank?: StringNullableFilter<"refund"> | string | null
    alasan_refund?: StringNullableFilter<"refund"> | string | null
    isAproved?: BoolNullableFilter<"refund"> | boolean | null
    statusUpdate?: StringNullableFilter<"refund"> | string | null
    updatedAt?: DateTimeFilter<"refund"> | Date | string
    createdAt?: DateTimeNullableFilter<"refund"> | Date | string | null
    user_id?: UuidFilter<"refund"> | string
    isConfirmed?: BoolFilter<"refund"> | boolean
    approved_amount?: BigIntNullableFilter<"refund"> | bigint | number | null
    reason_reduce?: StringNullableFilter<"refund"> | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type refundOrderByWithRelationInput = {
    refund_id?: SortOrder
    amount?: SortOrder
    nama_bank?: SortOrderInput | SortOrder
    nomor_bank?: SortOrderInput | SortOrder
    alasan_refund?: SortOrderInput | SortOrder
    isAproved?: SortOrderInput | SortOrder
    statusUpdate?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    user_id?: SortOrder
    isConfirmed?: SortOrder
    approved_amount?: SortOrderInput | SortOrder
    reason_reduce?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
  }

  export type refundWhereUniqueInput = Prisma.AtLeast<{
    refund_id?: string
    AND?: refundWhereInput | refundWhereInput[]
    OR?: refundWhereInput[]
    NOT?: refundWhereInput | refundWhereInput[]
    amount?: BigIntFilter<"refund"> | bigint | number
    nama_bank?: StringNullableFilter<"refund"> | string | null
    nomor_bank?: StringNullableFilter<"refund"> | string | null
    alasan_refund?: StringNullableFilter<"refund"> | string | null
    isAproved?: BoolNullableFilter<"refund"> | boolean | null
    statusUpdate?: StringNullableFilter<"refund"> | string | null
    updatedAt?: DateTimeFilter<"refund"> | Date | string
    createdAt?: DateTimeNullableFilter<"refund"> | Date | string | null
    user_id?: UuidFilter<"refund"> | string
    isConfirmed?: BoolFilter<"refund"> | boolean
    approved_amount?: BigIntNullableFilter<"refund"> | bigint | number | null
    reason_reduce?: StringNullableFilter<"refund"> | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "refund_id">

  export type refundOrderByWithAggregationInput = {
    refund_id?: SortOrder
    amount?: SortOrder
    nama_bank?: SortOrderInput | SortOrder
    nomor_bank?: SortOrderInput | SortOrder
    alasan_refund?: SortOrderInput | SortOrder
    isAproved?: SortOrderInput | SortOrder
    statusUpdate?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    user_id?: SortOrder
    isConfirmed?: SortOrder
    approved_amount?: SortOrderInput | SortOrder
    reason_reduce?: SortOrderInput | SortOrder
    _count?: refundCountOrderByAggregateInput
    _avg?: refundAvgOrderByAggregateInput
    _max?: refundMaxOrderByAggregateInput
    _min?: refundMinOrderByAggregateInput
    _sum?: refundSumOrderByAggregateInput
  }

  export type refundScalarWhereWithAggregatesInput = {
    AND?: refundScalarWhereWithAggregatesInput | refundScalarWhereWithAggregatesInput[]
    OR?: refundScalarWhereWithAggregatesInput[]
    NOT?: refundScalarWhereWithAggregatesInput | refundScalarWhereWithAggregatesInput[]
    refund_id?: UuidWithAggregatesFilter<"refund"> | string
    amount?: BigIntWithAggregatesFilter<"refund"> | bigint | number
    nama_bank?: StringNullableWithAggregatesFilter<"refund"> | string | null
    nomor_bank?: StringNullableWithAggregatesFilter<"refund"> | string | null
    alasan_refund?: StringNullableWithAggregatesFilter<"refund"> | string | null
    isAproved?: BoolNullableWithAggregatesFilter<"refund"> | boolean | null
    statusUpdate?: StringNullableWithAggregatesFilter<"refund"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"refund"> | Date | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"refund"> | Date | string | null
    user_id?: UuidWithAggregatesFilter<"refund"> | string
    isConfirmed?: BoolWithAggregatesFilter<"refund"> | boolean
    approved_amount?: BigIntNullableWithAggregatesFilter<"refund"> | bigint | number | null
    reason_reduce?: StringNullableWithAggregatesFilter<"refund"> | string | null
  }

  export type replies_discussionWhereInput = {
    AND?: replies_discussionWhereInput | replies_discussionWhereInput[]
    OR?: replies_discussionWhereInput[]
    NOT?: replies_discussionWhereInput | replies_discussionWhereInput[]
    replie_id?: UuidFilter<"replies_discussion"> | string
    discussion_id?: UuidFilter<"replies_discussion"> | string
    createdAt?: DateTimeFilter<"replies_discussion"> | Date | string
    message?: StringFilter<"replies_discussion"> | string
    like?: IntNullableFilter<"replies_discussion"> | number | null
    discussion?: XOR<DiscussionRelationFilter, discussionWhereInput>
  }

  export type replies_discussionOrderByWithRelationInput = {
    replie_id?: SortOrder
    discussion_id?: SortOrder
    createdAt?: SortOrder
    message?: SortOrder
    like?: SortOrderInput | SortOrder
    discussion?: discussionOrderByWithRelationInput
  }

  export type replies_discussionWhereUniqueInput = Prisma.AtLeast<{
    replie_id?: string
    AND?: replies_discussionWhereInput | replies_discussionWhereInput[]
    OR?: replies_discussionWhereInput[]
    NOT?: replies_discussionWhereInput | replies_discussionWhereInput[]
    discussion_id?: UuidFilter<"replies_discussion"> | string
    createdAt?: DateTimeFilter<"replies_discussion"> | Date | string
    message?: StringFilter<"replies_discussion"> | string
    like?: IntNullableFilter<"replies_discussion"> | number | null
    discussion?: XOR<DiscussionRelationFilter, discussionWhereInput>
  }, "replie_id">

  export type replies_discussionOrderByWithAggregationInput = {
    replie_id?: SortOrder
    discussion_id?: SortOrder
    createdAt?: SortOrder
    message?: SortOrder
    like?: SortOrderInput | SortOrder
    _count?: replies_discussionCountOrderByAggregateInput
    _avg?: replies_discussionAvgOrderByAggregateInput
    _max?: replies_discussionMaxOrderByAggregateInput
    _min?: replies_discussionMinOrderByAggregateInput
    _sum?: replies_discussionSumOrderByAggregateInput
  }

  export type replies_discussionScalarWhereWithAggregatesInput = {
    AND?: replies_discussionScalarWhereWithAggregatesInput | replies_discussionScalarWhereWithAggregatesInput[]
    OR?: replies_discussionScalarWhereWithAggregatesInput[]
    NOT?: replies_discussionScalarWhereWithAggregatesInput | replies_discussionScalarWhereWithAggregatesInput[]
    replie_id?: UuidWithAggregatesFilter<"replies_discussion"> | string
    discussion_id?: UuidWithAggregatesFilter<"replies_discussion"> | string
    createdAt?: DateTimeWithAggregatesFilter<"replies_discussion"> | Date | string
    message?: StringWithAggregatesFilter<"replies_discussion"> | string
    like?: IntNullableWithAggregatesFilter<"replies_discussion"> | number | null
  }

  export type social_media_usahaWhereInput = {
    AND?: social_media_usahaWhereInput | social_media_usahaWhereInput[]
    OR?: social_media_usahaWhereInput[]
    NOT?: social_media_usahaWhereInput | social_media_usahaWhereInput[]
    social_media_id?: UuidFilter<"social_media_usaha"> | string
    campaign_id?: UuidNullableFilter<"social_media_usaha"> | string | null
    team_id?: UuidNullableFilter<"social_media_usaha"> | string | null
    facebook?: StringNullableFilter<"social_media_usaha"> | string | null
    instagram?: StringNullableFilter<"social_media_usaha"> | string | null
    twitter?: StringNullableFilter<"social_media_usaha"> | string | null
    telegram?: StringNullableFilter<"social_media_usaha"> | string | null
    tiktok?: StringNullableFilter<"social_media_usaha"> | string | null
    linkedin?: StringNullableFilter<"social_media_usaha"> | string | null
    campaign?: XOR<CampaignNullableRelationFilter, campaignWhereInput> | null
    team_campaign?: XOR<Team_campaignNullableRelationFilter, team_campaignWhereInput> | null
  }

  export type social_media_usahaOrderByWithRelationInput = {
    social_media_id?: SortOrder
    campaign_id?: SortOrderInput | SortOrder
    team_id?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    twitter?: SortOrderInput | SortOrder
    telegram?: SortOrderInput | SortOrder
    tiktok?: SortOrderInput | SortOrder
    linkedin?: SortOrderInput | SortOrder
    campaign?: campaignOrderByWithRelationInput
    team_campaign?: team_campaignOrderByWithRelationInput
  }

  export type social_media_usahaWhereUniqueInput = Prisma.AtLeast<{
    social_media_id?: string
    campaign_id?: string
    AND?: social_media_usahaWhereInput | social_media_usahaWhereInput[]
    OR?: social_media_usahaWhereInput[]
    NOT?: social_media_usahaWhereInput | social_media_usahaWhereInput[]
    team_id?: UuidNullableFilter<"social_media_usaha"> | string | null
    facebook?: StringNullableFilter<"social_media_usaha"> | string | null
    instagram?: StringNullableFilter<"social_media_usaha"> | string | null
    twitter?: StringNullableFilter<"social_media_usaha"> | string | null
    telegram?: StringNullableFilter<"social_media_usaha"> | string | null
    tiktok?: StringNullableFilter<"social_media_usaha"> | string | null
    linkedin?: StringNullableFilter<"social_media_usaha"> | string | null
    campaign?: XOR<CampaignNullableRelationFilter, campaignWhereInput> | null
    team_campaign?: XOR<Team_campaignNullableRelationFilter, team_campaignWhereInput> | null
  }, "social_media_id" | "campaign_id">

  export type social_media_usahaOrderByWithAggregationInput = {
    social_media_id?: SortOrder
    campaign_id?: SortOrderInput | SortOrder
    team_id?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    twitter?: SortOrderInput | SortOrder
    telegram?: SortOrderInput | SortOrder
    tiktok?: SortOrderInput | SortOrder
    linkedin?: SortOrderInput | SortOrder
    _count?: social_media_usahaCountOrderByAggregateInput
    _max?: social_media_usahaMaxOrderByAggregateInput
    _min?: social_media_usahaMinOrderByAggregateInput
  }

  export type social_media_usahaScalarWhereWithAggregatesInput = {
    AND?: social_media_usahaScalarWhereWithAggregatesInput | social_media_usahaScalarWhereWithAggregatesInput[]
    OR?: social_media_usahaScalarWhereWithAggregatesInput[]
    NOT?: social_media_usahaScalarWhereWithAggregatesInput | social_media_usahaScalarWhereWithAggregatesInput[]
    social_media_id?: UuidWithAggregatesFilter<"social_media_usaha"> | string
    campaign_id?: UuidNullableWithAggregatesFilter<"social_media_usaha"> | string | null
    team_id?: UuidNullableWithAggregatesFilter<"social_media_usaha"> | string | null
    facebook?: StringNullableWithAggregatesFilter<"social_media_usaha"> | string | null
    instagram?: StringNullableWithAggregatesFilter<"social_media_usaha"> | string | null
    twitter?: StringNullableWithAggregatesFilter<"social_media_usaha"> | string | null
    telegram?: StringNullableWithAggregatesFilter<"social_media_usaha"> | string | null
    tiktok?: StringNullableWithAggregatesFilter<"social_media_usaha"> | string | null
    linkedin?: StringNullableWithAggregatesFilter<"social_media_usaha"> | string | null
  }

  export type team_campaignWhereInput = {
    AND?: team_campaignWhereInput | team_campaignWhereInput[]
    OR?: team_campaignWhereInput[]
    NOT?: team_campaignWhereInput | team_campaignWhereInput[]
    team_id?: UuidFilter<"team_campaign"> | string
    campaign_id?: UuidFilter<"team_campaign"> | string
    nama_lengkap?: StringFilter<"team_campaign"> | string
    jabatan?: StringFilter<"team_campaign"> | string
    social_media_usaha?: Social_media_usahaListRelationFilter
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }

  export type team_campaignOrderByWithRelationInput = {
    team_id?: SortOrder
    campaign_id?: SortOrder
    nama_lengkap?: SortOrder
    jabatan?: SortOrder
    social_media_usaha?: social_media_usahaOrderByRelationAggregateInput
    campaign?: campaignOrderByWithRelationInput
  }

  export type team_campaignWhereUniqueInput = Prisma.AtLeast<{
    team_id?: string
    AND?: team_campaignWhereInput | team_campaignWhereInput[]
    OR?: team_campaignWhereInput[]
    NOT?: team_campaignWhereInput | team_campaignWhereInput[]
    campaign_id?: UuidFilter<"team_campaign"> | string
    nama_lengkap?: StringFilter<"team_campaign"> | string
    jabatan?: StringFilter<"team_campaign"> | string
    social_media_usaha?: Social_media_usahaListRelationFilter
    campaign?: XOR<CampaignRelationFilter, campaignWhereInput>
  }, "team_id">

  export type team_campaignOrderByWithAggregationInput = {
    team_id?: SortOrder
    campaign_id?: SortOrder
    nama_lengkap?: SortOrder
    jabatan?: SortOrder
    _count?: team_campaignCountOrderByAggregateInput
    _max?: team_campaignMaxOrderByAggregateInput
    _min?: team_campaignMinOrderByAggregateInput
  }

  export type team_campaignScalarWhereWithAggregatesInput = {
    AND?: team_campaignScalarWhereWithAggregatesInput | team_campaignScalarWhereWithAggregatesInput[]
    OR?: team_campaignScalarWhereWithAggregatesInput[]
    NOT?: team_campaignScalarWhereWithAggregatesInput | team_campaignScalarWhereWithAggregatesInput[]
    team_id?: UuidWithAggregatesFilter<"team_campaign"> | string
    campaign_id?: UuidWithAggregatesFilter<"team_campaign"> | string
    nama_lengkap?: StringWithAggregatesFilter<"team_campaign"> | string
    jabatan?: StringWithAggregatesFilter<"team_campaign"> | string
  }

  export type transactionWhereInput = {
    AND?: transactionWhereInput | transactionWhereInput[]
    OR?: transactionWhereInput[]
    NOT?: transactionWhereInput | transactionWhereInput[]
    transaction_id?: UuidFilter<"transaction"> | string
    transaction_type?: Enumtransaction_type_enumNullableFilter<"transaction"> | $Enums.transaction_type_enum | null
    transaction_status?: Enumtransaction_status_enumNullableFilter<"transaction"> | $Enums.transaction_status_enum | null
    trans_date?: DateTimeNullableFilter<"transaction"> | Date | string | null
    payment?: StringNullableFilter<"transaction"> | string | null
    amount?: BigIntNullableFilter<"transaction"> | bigint | number | null
    campaign_id?: UuidNullableFilter<"transaction"> | string | null
    user_id?: UuidNullableFilter<"transaction"> | string | null
    campaign?: XOR<CampaignNullableRelationFilter, campaignWhereInput> | null
    user?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }

  export type transactionOrderByWithRelationInput = {
    transaction_id?: SortOrder
    transaction_type?: SortOrderInput | SortOrder
    transaction_status?: SortOrderInput | SortOrder
    trans_date?: SortOrderInput | SortOrder
    payment?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    campaign_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    campaign?: campaignOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type transactionWhereUniqueInput = Prisma.AtLeast<{
    transaction_id?: string
    AND?: transactionWhereInput | transactionWhereInput[]
    OR?: transactionWhereInput[]
    NOT?: transactionWhereInput | transactionWhereInput[]
    transaction_type?: Enumtransaction_type_enumNullableFilter<"transaction"> | $Enums.transaction_type_enum | null
    transaction_status?: Enumtransaction_status_enumNullableFilter<"transaction"> | $Enums.transaction_status_enum | null
    trans_date?: DateTimeNullableFilter<"transaction"> | Date | string | null
    payment?: StringNullableFilter<"transaction"> | string | null
    amount?: BigIntNullableFilter<"transaction"> | bigint | number | null
    campaign_id?: UuidNullableFilter<"transaction"> | string | null
    user_id?: UuidNullableFilter<"transaction"> | string | null
    campaign?: XOR<CampaignNullableRelationFilter, campaignWhereInput> | null
    user?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }, "transaction_id">

  export type transactionOrderByWithAggregationInput = {
    transaction_id?: SortOrder
    transaction_type?: SortOrderInput | SortOrder
    transaction_status?: SortOrderInput | SortOrder
    trans_date?: SortOrderInput | SortOrder
    payment?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    campaign_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    _count?: transactionCountOrderByAggregateInput
    _avg?: transactionAvgOrderByAggregateInput
    _max?: transactionMaxOrderByAggregateInput
    _min?: transactionMinOrderByAggregateInput
    _sum?: transactionSumOrderByAggregateInput
  }

  export type transactionScalarWhereWithAggregatesInput = {
    AND?: transactionScalarWhereWithAggregatesInput | transactionScalarWhereWithAggregatesInput[]
    OR?: transactionScalarWhereWithAggregatesInput[]
    NOT?: transactionScalarWhereWithAggregatesInput | transactionScalarWhereWithAggregatesInput[]
    transaction_id?: UuidWithAggregatesFilter<"transaction"> | string
    transaction_type?: Enumtransaction_type_enumNullableWithAggregatesFilter<"transaction"> | $Enums.transaction_type_enum | null
    transaction_status?: Enumtransaction_status_enumNullableWithAggregatesFilter<"transaction"> | $Enums.transaction_status_enum | null
    trans_date?: DateTimeNullableWithAggregatesFilter<"transaction"> | Date | string | null
    payment?: StringNullableWithAggregatesFilter<"transaction"> | string | null
    amount?: BigIntNullableWithAggregatesFilter<"transaction"> | bigint | number | null
    campaign_id?: UuidNullableWithAggregatesFilter<"transaction"> | string | null
    user_id?: UuidNullableWithAggregatesFilter<"transaction"> | string | null
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    user_id?: UuidFilter<"user"> | string
    email?: StringFilter<"user"> | string
    phone?: StringNullableFilter<"user"> | string | null
    password?: StringFilter<"user"> | string
    roles?: Enumuser_rolesFilter<"user"> | $Enums.user_roles
    isPublic?: BoolFilter<"user"> | boolean
    createdAt?: DateTimeFilter<"user"> | Date | string
    updatedAt?: DateTimeNullableFilter<"user"> | Date | string | null
    username?: StringNullableFilter<"user"> | string | null
    avatar?: BytesNullableFilter<"user"> | Buffer | null
    isverified?: BoolNullableFilter<"user"> | boolean | null
    campaign?: CampaignListRelationFilter
    community_chat?: Community_chatListRelationFilter
    community_membership?: Community_membershipListRelationFilter
    discussion?: DiscussionListRelationFilter
    investment?: InvestmentListRelationFilter
    kyc_level_1?: XOR<Kyc_level_1NullableRelationFilter, kyc_level_1WhereInput> | null
    kyc_level_2?: XOR<Kyc_level_2NullableRelationFilter, kyc_level_2WhereInput> | null
    refund?: RefundListRelationFilter
    transaction?: TransactionListRelationFilter
    user_voted?: User_votedListRelationFilter
  }

  export type userOrderByWithRelationInput = {
    user_id?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password?: SortOrder
    roles?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    isverified?: SortOrderInput | SortOrder
    campaign?: campaignOrderByRelationAggregateInput
    community_chat?: community_chatOrderByRelationAggregateInput
    community_membership?: community_membershipOrderByRelationAggregateInput
    discussion?: discussionOrderByRelationAggregateInput
    investment?: investmentOrderByRelationAggregateInput
    kyc_level_1?: kyc_level_1OrderByWithRelationInput
    kyc_level_2?: kyc_level_2OrderByWithRelationInput
    refund?: refundOrderByRelationAggregateInput
    transaction?: transactionOrderByRelationAggregateInput
    user_voted?: user_votedOrderByRelationAggregateInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    email?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    phone?: StringNullableFilter<"user"> | string | null
    password?: StringFilter<"user"> | string
    roles?: Enumuser_rolesFilter<"user"> | $Enums.user_roles
    isPublic?: BoolFilter<"user"> | boolean
    createdAt?: DateTimeFilter<"user"> | Date | string
    updatedAt?: DateTimeNullableFilter<"user"> | Date | string | null
    username?: StringNullableFilter<"user"> | string | null
    avatar?: BytesNullableFilter<"user"> | Buffer | null
    isverified?: BoolNullableFilter<"user"> | boolean | null
    campaign?: CampaignListRelationFilter
    community_chat?: Community_chatListRelationFilter
    community_membership?: Community_membershipListRelationFilter
    discussion?: DiscussionListRelationFilter
    investment?: InvestmentListRelationFilter
    kyc_level_1?: XOR<Kyc_level_1NullableRelationFilter, kyc_level_1WhereInput> | null
    kyc_level_2?: XOR<Kyc_level_2NullableRelationFilter, kyc_level_2WhereInput> | null
    refund?: RefundListRelationFilter
    transaction?: TransactionListRelationFilter
    user_voted?: User_votedListRelationFilter
  }, "user_id" | "email">

  export type userOrderByWithAggregationInput = {
    user_id?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password?: SortOrder
    roles?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    isverified?: SortOrderInput | SortOrder
    _count?: userCountOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    user_id?: UuidWithAggregatesFilter<"user"> | string
    email?: StringWithAggregatesFilter<"user"> | string
    phone?: StringNullableWithAggregatesFilter<"user"> | string | null
    password?: StringWithAggregatesFilter<"user"> | string
    roles?: Enumuser_rolesWithAggregatesFilter<"user"> | $Enums.user_roles
    isPublic?: BoolWithAggregatesFilter<"user"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"user"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    username?: StringNullableWithAggregatesFilter<"user"> | string | null
    avatar?: BytesNullableWithAggregatesFilter<"user"> | Buffer | null
    isverified?: BoolNullableWithAggregatesFilter<"user"> | boolean | null
  }

  export type user_votedWhereInput = {
    AND?: user_votedWhereInput | user_votedWhereInput[]
    OR?: user_votedWhereInput[]
    NOT?: user_votedWhereInput | user_votedWhereInput[]
    user_voted_id?: UuidFilter<"user_voted"> | string
    community_proposal_id?: UuidFilter<"user_voted"> | string
    user_id?: UuidFilter<"user_voted"> | string
    community_proposal?: XOR<Community_proposalRelationFilter, community_proposalWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type user_votedOrderByWithRelationInput = {
    user_voted_id?: SortOrder
    community_proposal_id?: SortOrder
    user_id?: SortOrder
    community_proposal?: community_proposalOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type user_votedWhereUniqueInput = Prisma.AtLeast<{
    user_voted_id?: string
    AND?: user_votedWhereInput | user_votedWhereInput[]
    OR?: user_votedWhereInput[]
    NOT?: user_votedWhereInput | user_votedWhereInput[]
    community_proposal_id?: UuidFilter<"user_voted"> | string
    user_id?: UuidFilter<"user_voted"> | string
    community_proposal?: XOR<Community_proposalRelationFilter, community_proposalWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "user_voted_id">

  export type user_votedOrderByWithAggregationInput = {
    user_voted_id?: SortOrder
    community_proposal_id?: SortOrder
    user_id?: SortOrder
    _count?: user_votedCountOrderByAggregateInput
    _max?: user_votedMaxOrderByAggregateInput
    _min?: user_votedMinOrderByAggregateInput
  }

  export type user_votedScalarWhereWithAggregatesInput = {
    AND?: user_votedScalarWhereWithAggregatesInput | user_votedScalarWhereWithAggregatesInput[]
    OR?: user_votedScalarWhereWithAggregatesInput[]
    NOT?: user_votedScalarWhereWithAggregatesInput | user_votedScalarWhereWithAggregatesInput[]
    user_voted_id?: UuidWithAggregatesFilter<"user_voted"> | string
    community_proposal_id?: UuidWithAggregatesFilter<"user_voted"> | string
    user_id?: UuidWithAggregatesFilter<"user_voted"> | string
  }

  export type addressCreateInput = {
    address_id?: string
    address: string
    kecamatan: string
    kota: string
    provinsi: string
    kode_pos: string
    kyc_level_1: kyc_level_1CreateNestedOneWithoutAddressInput
  }

  export type addressUncheckedCreateInput = {
    address_id?: string
    address: string
    kecamatan: string
    kota: string
    provinsi: string
    kode_pos: string
    kyc_level_1_id: string
  }

  export type addressUpdateInput = {
    address_id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kota?: StringFieldUpdateOperationsInput | string
    provinsi?: StringFieldUpdateOperationsInput | string
    kode_pos?: StringFieldUpdateOperationsInput | string
    kyc_level_1?: kyc_level_1UpdateOneRequiredWithoutAddressNestedInput
  }

  export type addressUncheckedUpdateInput = {
    address_id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kota?: StringFieldUpdateOperationsInput | string
    provinsi?: StringFieldUpdateOperationsInput | string
    kode_pos?: StringFieldUpdateOperationsInput | string
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
  }

  export type addressCreateManyInput = {
    address_id?: string
    address: string
    kecamatan: string
    kota: string
    provinsi: string
    kode_pos: string
    kyc_level_1_id: string
  }

  export type addressUpdateManyMutationInput = {
    address_id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kota?: StringFieldUpdateOperationsInput | string
    provinsi?: StringFieldUpdateOperationsInput | string
    kode_pos?: StringFieldUpdateOperationsInput | string
  }

  export type addressUncheckedUpdateManyInput = {
    address_id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kota?: StringFieldUpdateOperationsInput | string
    provinsi?: StringFieldUpdateOperationsInput | string
    kode_pos?: StringFieldUpdateOperationsInput | string
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
  }

  export type alamat_usahaCreateInput = {
    alamat_usaha_id: string
    address?: string | null
    kecamatan?: string | null
    kota?: string | null
    provinsi?: string | null
    kode_pos?: string | null
    lat?: Decimal | DecimalJsLike | number | string | null
    lgn?: Decimal | DecimalJsLike | number | string | null
    campaign: campaignCreateNestedOneWithoutAlamat_usahaInput
  }

  export type alamat_usahaUncheckedCreateInput = {
    alamat_usaha_id: string
    campaign_id: string
    address?: string | null
    kecamatan?: string | null
    kota?: string | null
    provinsi?: string | null
    kode_pos?: string | null
    lat?: Decimal | DecimalJsLike | number | string | null
    lgn?: Decimal | DecimalJsLike | number | string | null
  }

  export type alamat_usahaUpdateInput = {
    alamat_usaha_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    kecamatan?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lgn?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    campaign?: campaignUpdateOneRequiredWithoutAlamat_usahaNestedInput
  }

  export type alamat_usahaUncheckedUpdateInput = {
    alamat_usaha_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    kecamatan?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lgn?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type alamat_usahaCreateManyInput = {
    alamat_usaha_id: string
    campaign_id: string
    address?: string | null
    kecamatan?: string | null
    kota?: string | null
    provinsi?: string | null
    kode_pos?: string | null
    lat?: Decimal | DecimalJsLike | number | string | null
    lgn?: Decimal | DecimalJsLike | number | string | null
  }

  export type alamat_usahaUpdateManyMutationInput = {
    alamat_usaha_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    kecamatan?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lgn?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type alamat_usahaUncheckedUpdateManyInput = {
    alamat_usaha_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    kecamatan?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lgn?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type campaignCreateInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignUpdateInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type campaignCreateManyInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
  }

  export type campaignUpdateManyMutationInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
  }

  export type campaignUncheckedUpdateManyInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
  }

  export type campaign_updateCreateInput = {
    update_id: string
    update_title?: string | null
    update_detail?: string | null
    published_at?: Date | string
    campaign: campaignCreateNestedOneWithoutCampaign_updateInput
  }

  export type campaign_updateUncheckedCreateInput = {
    update_id: string
    campaign_id: string
    update_title?: string | null
    update_detail?: string | null
    published_at?: Date | string
  }

  export type campaign_updateUpdateInput = {
    update_id?: StringFieldUpdateOperationsInput | string
    update_title?: NullableStringFieldUpdateOperationsInput | string | null
    update_detail?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campaign?: campaignUpdateOneRequiredWithoutCampaign_updateNestedInput
  }

  export type campaign_updateUncheckedUpdateInput = {
    update_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    update_title?: NullableStringFieldUpdateOperationsInput | string | null
    update_detail?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type campaign_updateCreateManyInput = {
    update_id: string
    campaign_id: string
    update_title?: string | null
    update_detail?: string | null
    published_at?: Date | string
  }

  export type campaign_updateUpdateManyMutationInput = {
    update_id?: StringFieldUpdateOperationsInput | string
    update_title?: NullableStringFieldUpdateOperationsInput | string | null
    update_detail?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type campaign_updateUncheckedUpdateManyInput = {
    update_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    update_title?: NullableStringFieldUpdateOperationsInput | string | null
    update_detail?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communityCreateInput = {
    community_id: string
    campaign_id: string
    community_membership?: community_membershipCreateNestedOneWithoutCommunityInput
    community_proposal?: community_proposalCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateInput = {
    community_id: string
    campaign_id: string
    community_membership?: community_membershipUncheckedCreateNestedOneWithoutCommunityInput
    community_proposal?: community_proposalUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityUpdateInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    community_membership?: community_membershipUpdateOneWithoutCommunityNestedInput
    community_proposal?: community_proposalUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    community_membership?: community_membershipUncheckedUpdateOneWithoutCommunityNestedInput
    community_proposal?: community_proposalUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type communityCreateManyInput = {
    community_id: string
    campaign_id: string
  }

  export type communityUpdateManyMutationInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
  }

  export type communityUncheckedUpdateManyInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
  }

  export type community_chatCreateInput = {
    chat_id: string
    chat: string
    created_at?: Date | string
    community_proposal: community_proposalCreateNestedOneWithoutCommunity_chatInput
    user: userCreateNestedOneWithoutCommunity_chatInput
  }

  export type community_chatUncheckedCreateInput = {
    chat_id: string
    community_proposal_id: string
    chat: string
    user_id: string
    created_at?: Date | string
  }

  export type community_chatUpdateInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_proposal?: community_proposalUpdateOneRequiredWithoutCommunity_chatNestedInput
    user?: userUpdateOneRequiredWithoutCommunity_chatNestedInput
  }

  export type community_chatUncheckedUpdateInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    community_proposal_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_chatCreateManyInput = {
    chat_id: string
    community_proposal_id: string
    chat: string
    user_id: string
    created_at?: Date | string
  }

  export type community_chatUpdateManyMutationInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_chatUncheckedUpdateManyInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    community_proposal_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_membershipCreateInput = {
    community_membership_id: string
    joinedDate?: Date | string
    exited_date?: Date | string | null
    community: communityCreateNestedOneWithoutCommunity_membershipInput
    user: userCreateNestedOneWithoutCommunity_membershipInput
  }

  export type community_membershipUncheckedCreateInput = {
    community_membership_id: string
    community_id: string
    user_id: string
    joinedDate?: Date | string
    exited_date?: Date | string | null
  }

  export type community_membershipUpdateInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    community?: communityUpdateOneRequiredWithoutCommunity_membershipNestedInput
    user?: userUpdateOneRequiredWithoutCommunity_membershipNestedInput
  }

  export type community_membershipUncheckedUpdateInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_membershipCreateManyInput = {
    community_membership_id: string
    community_id: string
    user_id: string
    joinedDate?: Date | string
    exited_date?: Date | string | null
  }

  export type community_membershipUpdateManyMutationInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_membershipUncheckedUpdateManyInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_proposalCreateInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community_chat?: community_chatCreateNestedManyWithoutCommunity_proposalInput
    community: communityCreateNestedOneWithoutCommunity_proposalInput
    user_voted?: user_votedCreateNestedManyWithoutCommunity_proposalInput
  }

  export type community_proposalUncheckedCreateInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community_id: string
    community_chat?: community_chatUncheckedCreateNestedManyWithoutCommunity_proposalInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutCommunity_proposalInput
  }

  export type community_proposalUpdateInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community_chat?: community_chatUpdateManyWithoutCommunity_proposalNestedInput
    community?: communityUpdateOneRequiredWithoutCommunity_proposalNestedInput
    user_voted?: user_votedUpdateManyWithoutCommunity_proposalNestedInput
  }

  export type community_proposalUncheckedUpdateInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community_id?: StringFieldUpdateOperationsInput | string
    community_chat?: community_chatUncheckedUpdateManyWithoutCommunity_proposalNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutCommunity_proposalNestedInput
  }

  export type community_proposalCreateManyInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community_id: string
  }

  export type community_proposalUpdateManyMutationInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type community_proposalUncheckedUpdateManyInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type contact_usahaCreateInput = {
    contact_id: string
    telepon_wa?: string | null
    fax?: string | null
    email?: string | null
    website?: string | null
    campaign: campaignCreateNestedOneWithoutContact_usahaInput
  }

  export type contact_usahaUncheckedCreateInput = {
    contact_id: string
    campaign_id: string
    telepon_wa?: string | null
    fax?: string | null
    email?: string | null
    website?: string | null
  }

  export type contact_usahaUpdateInput = {
    contact_id?: StringFieldUpdateOperationsInput | string
    telepon_wa?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: campaignUpdateOneRequiredWithoutContact_usahaNestedInput
  }

  export type contact_usahaUncheckedUpdateInput = {
    contact_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    telepon_wa?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type contact_usahaCreateManyInput = {
    contact_id: string
    campaign_id: string
    telepon_wa?: string | null
    fax?: string | null
    email?: string | null
    website?: string | null
  }

  export type contact_usahaUpdateManyMutationInput = {
    contact_id?: StringFieldUpdateOperationsInput | string
    telepon_wa?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type contact_usahaUncheckedUpdateManyInput = {
    contact_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    telepon_wa?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type crowdfundingCreateInput = {
    crowdfunding_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    campaign: campaignCreateNestedOneWithoutCrowdfundingInput
    data_rekening?: data_rekeningCreateNestedOneWithoutCrowdfundingInput
    highlight_product?: highlight_productCreateNestedOneWithoutCrowdfundingInput
    product_information?: product_informationCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingUncheckedCreateInput = {
    crowdfunding_id: string
    campaign_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    data_rekening?: data_rekeningUncheckedCreateNestedOneWithoutCrowdfundingInput
    highlight_product?: highlight_productUncheckedCreateNestedOneWithoutCrowdfundingInput
    product_information?: product_informationUncheckedCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingUpdateInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    campaign?: campaignUpdateOneRequiredWithoutCrowdfundingNestedInput
    data_rekening?: data_rekeningUpdateOneWithoutCrowdfundingNestedInput
    highlight_product?: highlight_productUpdateOneWithoutCrowdfundingNestedInput
    product_information?: product_informationUpdateOneWithoutCrowdfundingNestedInput
  }

  export type crowdfundingUncheckedUpdateInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    data_rekening?: data_rekeningUncheckedUpdateOneWithoutCrowdfundingNestedInput
    highlight_product?: highlight_productUncheckedUpdateOneWithoutCrowdfundingNestedInput
    product_information?: product_informationUncheckedUpdateOneWithoutCrowdfundingNestedInput
  }

  export type crowdfundingCreateManyInput = {
    crowdfunding_id: string
    campaign_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
  }

  export type crowdfundingUpdateManyMutationInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type crowdfundingUncheckedUpdateManyInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type data_rekeningCreateInput = {
    rekening_id: string
    nama_rekening?: string | null
    nama_bank?: string | null
    nomor_rekening?: string | null
    crowdfunding: crowdfundingCreateNestedOneWithoutData_rekeningInput
  }

  export type data_rekeningUncheckedCreateInput = {
    rekening_id: string
    nama_rekening?: string | null
    nama_bank?: string | null
    nomor_rekening?: string | null
    crowdfunding_id: string
  }

  export type data_rekeningUpdateInput = {
    rekening_id?: StringFieldUpdateOperationsInput | string
    nama_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    crowdfunding?: crowdfundingUpdateOneRequiredWithoutData_rekeningNestedInput
  }

  export type data_rekeningUncheckedUpdateInput = {
    rekening_id?: StringFieldUpdateOperationsInput | string
    nama_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
  }

  export type data_rekeningCreateManyInput = {
    rekening_id: string
    nama_rekening?: string | null
    nama_bank?: string | null
    nomor_rekening?: string | null
    crowdfunding_id: string
  }

  export type data_rekeningUpdateManyMutationInput = {
    rekening_id?: StringFieldUpdateOperationsInput | string
    nama_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_rekening?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type data_rekeningUncheckedUpdateManyInput = {
    rekening_id?: StringFieldUpdateOperationsInput | string
    nama_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
  }

  export type discussionCreateInput = {
    discussion_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
    campaign: campaignCreateNestedOneWithoutDiscussionInput
    user: userCreateNestedOneWithoutDiscussionInput
    replies_discussion?: replies_discussionCreateNestedManyWithoutDiscussionInput
  }

  export type discussionUncheckedCreateInput = {
    discussion_id: string
    campaign_id: string
    user_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
    replies_discussion?: replies_discussionUncheckedCreateNestedManyWithoutDiscussionInput
  }

  export type discussionUpdateInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
    campaign?: campaignUpdateOneRequiredWithoutDiscussionNestedInput
    user?: userUpdateOneRequiredWithoutDiscussionNestedInput
    replies_discussion?: replies_discussionUpdateManyWithoutDiscussionNestedInput
  }

  export type discussionUncheckedUpdateInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
    replies_discussion?: replies_discussionUncheckedUpdateManyWithoutDiscussionNestedInput
  }

  export type discussionCreateManyInput = {
    discussion_id: string
    campaign_id: string
    user_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
  }

  export type discussionUpdateManyMutationInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type discussionUncheckedUpdateManyInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type documentCreateInput = {
    document_id: string
    campaign: campaignCreateNestedOneWithoutDocumentInput
    document_legal?: document_legalCreateNestedManyWithoutDocumentInput
    document_proposal?: document_proposalCreateNestedManyWithoutDocumentInput
  }

  export type documentUncheckedCreateInput = {
    document_id: string
    campaign_id: string
    document_legal?: document_legalUncheckedCreateNestedManyWithoutDocumentInput
    document_proposal?: document_proposalUncheckedCreateNestedManyWithoutDocumentInput
  }

  export type documentUpdateInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    campaign?: campaignUpdateOneRequiredWithoutDocumentNestedInput
    document_legal?: document_legalUpdateManyWithoutDocumentNestedInput
    document_proposal?: document_proposalUpdateManyWithoutDocumentNestedInput
  }

  export type documentUncheckedUpdateInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    document_legal?: document_legalUncheckedUpdateManyWithoutDocumentNestedInput
    document_proposal?: document_proposalUncheckedUpdateManyWithoutDocumentNestedInput
  }

  export type documentCreateManyInput = {
    document_id: string
    campaign_id: string
  }

  export type documentUpdateManyMutationInput = {
    document_id?: StringFieldUpdateOperationsInput | string
  }

  export type documentUncheckedUpdateManyInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
  }

  export type document_legalCreateInput = {
    document_legal_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
    document: documentCreateNestedOneWithoutDocument_legalInput
  }

  export type document_legalUncheckedCreateInput = {
    document_legal_id: string
    document_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_legalUpdateInput = {
    document_legal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    document?: documentUpdateOneRequiredWithoutDocument_legalNestedInput
  }

  export type document_legalUncheckedUpdateInput = {
    document_legal_id?: StringFieldUpdateOperationsInput | string
    document_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_legalCreateManyInput = {
    document_legal_id: string
    document_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_legalUpdateManyMutationInput = {
    document_legal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_legalUncheckedUpdateManyInput = {
    document_legal_id?: StringFieldUpdateOperationsInput | string
    document_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_proposalCreateInput = {
    document_proposal_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
    document: documentCreateNestedOneWithoutDocument_proposalInput
  }

  export type document_proposalUncheckedCreateInput = {
    document_proposal_id: string
    document_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_proposalUpdateInput = {
    document_proposal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    document?: documentUpdateOneRequiredWithoutDocument_proposalNestedInput
  }

  export type document_proposalUncheckedUpdateInput = {
    document_proposal_id?: StringFieldUpdateOperationsInput | string
    document_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_proposalCreateManyInput = {
    document_proposal_id: string
    document_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_proposalUpdateManyMutationInput = {
    document_proposal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_proposalUncheckedUpdateManyInput = {
    document_proposal_id?: StringFieldUpdateOperationsInput | string
    document_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type foto_dokumenCreateInput = {
    foto_dokumen_id?: string
    foto_ktp_depan: Buffer
    foto_ktp_belakang: Buffer
    foto_selfie: Buffer
    kyc_level_1: kyc_level_1CreateNestedOneWithoutFoto_dokumenInput
  }

  export type foto_dokumenUncheckedCreateInput = {
    foto_dokumen_id?: string
    foto_ktp_depan: Buffer
    foto_ktp_belakang: Buffer
    foto_selfie: Buffer
    kyc_level_1_id: string
  }

  export type foto_dokumenUpdateInput = {
    foto_dokumen_id?: StringFieldUpdateOperationsInput | string
    foto_ktp_depan?: BytesFieldUpdateOperationsInput | Buffer
    foto_ktp_belakang?: BytesFieldUpdateOperationsInput | Buffer
    foto_selfie?: BytesFieldUpdateOperationsInput | Buffer
    kyc_level_1?: kyc_level_1UpdateOneRequiredWithoutFoto_dokumenNestedInput
  }

  export type foto_dokumenUncheckedUpdateInput = {
    foto_dokumen_id?: StringFieldUpdateOperationsInput | string
    foto_ktp_depan?: BytesFieldUpdateOperationsInput | Buffer
    foto_ktp_belakang?: BytesFieldUpdateOperationsInput | Buffer
    foto_selfie?: BytesFieldUpdateOperationsInput | Buffer
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
  }

  export type foto_dokumenCreateManyInput = {
    foto_dokumen_id?: string
    foto_ktp_depan: Buffer
    foto_ktp_belakang: Buffer
    foto_selfie: Buffer
    kyc_level_1_id: string
  }

  export type foto_dokumenUpdateManyMutationInput = {
    foto_dokumen_id?: StringFieldUpdateOperationsInput | string
    foto_ktp_depan?: BytesFieldUpdateOperationsInput | Buffer
    foto_ktp_belakang?: BytesFieldUpdateOperationsInput | Buffer
    foto_selfie?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type foto_dokumenUncheckedUpdateManyInput = {
    foto_dokumen_id?: StringFieldUpdateOperationsInput | string
    foto_ktp_depan?: BytesFieldUpdateOperationsInput | Buffer
    foto_ktp_belakang?: BytesFieldUpdateOperationsInput | Buffer
    foto_selfie?: BytesFieldUpdateOperationsInput | Buffer
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
  }

  export type highlight_productCreateInput = {
    highlight_product_id: number
    highlight?: string | null
    crowdfunding: crowdfundingCreateNestedOneWithoutHighlight_productInput
  }

  export type highlight_productUncheckedCreateInput = {
    highlight_product_id: number
    crowdfunding_id: string
    highlight?: string | null
  }

  export type highlight_productUpdateInput = {
    highlight_product_id?: IntFieldUpdateOperationsInput | number
    highlight?: NullableStringFieldUpdateOperationsInput | string | null
    crowdfunding?: crowdfundingUpdateOneRequiredWithoutHighlight_productNestedInput
  }

  export type highlight_productUncheckedUpdateInput = {
    highlight_product_id?: IntFieldUpdateOperationsInput | number
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    highlight?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highlight_productCreateManyInput = {
    highlight_product_id: number
    crowdfunding_id: string
    highlight?: string | null
  }

  export type highlight_productUpdateManyMutationInput = {
    highlight_product_id?: IntFieldUpdateOperationsInput | number
    highlight?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highlight_productUncheckedUpdateManyInput = {
    highlight_product_id?: IntFieldUpdateOperationsInput | number
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    highlight?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type investmentCreateInput = {
    investment_id: string
    amount: bigint | number
    investment_date?: Date | string
    campaign: campaignCreateNestedOneWithoutInvestmentInput
    user: userCreateNestedOneWithoutInvestmentInput
  }

  export type investmentUncheckedCreateInput = {
    investment_id: string
    campaign_id: string
    user_id: string
    amount: bigint | number
    investment_date?: Date | string
  }

  export type investmentUpdateInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    campaign?: campaignUpdateOneRequiredWithoutInvestmentNestedInput
    user?: userUpdateOneRequiredWithoutInvestmentNestedInput
  }

  export type investmentUncheckedUpdateInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type investmentCreateManyInput = {
    investment_id: string
    campaign_id: string
    user_id: string
    amount: bigint | number
    investment_date?: Date | string
  }

  export type investmentUpdateManyMutationInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type investmentUncheckedUpdateManyInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type kyc_level_1CreateInput = {
    kyc_level_1_id?: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
    address?: addressCreateNestedOneWithoutKyc_level_1Input
    foto_dokumen?: foto_dokumenCreateNestedOneWithoutKyc_level_1Input
    user: userCreateNestedOneWithoutKyc_level_1Input
  }

  export type kyc_level_1UncheckedCreateInput = {
    kyc_level_1_id?: string
    user_id: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
    address?: addressUncheckedCreateNestedOneWithoutKyc_level_1Input
    foto_dokumen?: foto_dokumenUncheckedCreateNestedOneWithoutKyc_level_1Input
  }

  export type kyc_level_1UpdateInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: addressUpdateOneWithoutKyc_level_1NestedInput
    foto_dokumen?: foto_dokumenUpdateOneWithoutKyc_level_1NestedInput
    user?: userUpdateOneRequiredWithoutKyc_level_1NestedInput
  }

  export type kyc_level_1UncheckedUpdateInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: addressUncheckedUpdateOneWithoutKyc_level_1NestedInput
    foto_dokumen?: foto_dokumenUncheckedUpdateOneWithoutKyc_level_1NestedInput
  }

  export type kyc_level_1CreateManyInput = {
    kyc_level_1_id?: string
    user_id: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
  }

  export type kyc_level_1UpdateManyMutationInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type kyc_level_1UncheckedUpdateManyInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type kyc_level_2CreateInput = {
    kyc_level_2_id: string
    surat_skck: Buffer
    surat_domisili: Buffer
    surat_keterangan_bank: Buffer
    status?: $Enums.kyc_status_enum
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    updateStatus?: string | null
    user: userCreateNestedOneWithoutKyc_level_2Input
  }

  export type kyc_level_2UncheckedCreateInput = {
    kyc_level_2_id: string
    user_id: string
    surat_skck: Buffer
    surat_domisili: Buffer
    surat_keterangan_bank: Buffer
    status?: $Enums.kyc_status_enum
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    updateStatus?: string | null
  }

  export type kyc_level_2UpdateInput = {
    kyc_level_2_id?: StringFieldUpdateOperationsInput | string
    surat_skck?: BytesFieldUpdateOperationsInput | Buffer
    surat_domisili?: BytesFieldUpdateOperationsInput | Buffer
    surat_keterangan_bank?: BytesFieldUpdateOperationsInput | Buffer
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updateStatus?: NullableStringFieldUpdateOperationsInput | string | null
    user?: userUpdateOneRequiredWithoutKyc_level_2NestedInput
  }

  export type kyc_level_2UncheckedUpdateInput = {
    kyc_level_2_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    surat_skck?: BytesFieldUpdateOperationsInput | Buffer
    surat_domisili?: BytesFieldUpdateOperationsInput | Buffer
    surat_keterangan_bank?: BytesFieldUpdateOperationsInput | Buffer
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updateStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type kyc_level_2CreateManyInput = {
    kyc_level_2_id: string
    user_id: string
    surat_skck: Buffer
    surat_domisili: Buffer
    surat_keterangan_bank: Buffer
    status?: $Enums.kyc_status_enum
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    updateStatus?: string | null
  }

  export type kyc_level_2UpdateManyMutationInput = {
    kyc_level_2_id?: StringFieldUpdateOperationsInput | string
    surat_skck?: BytesFieldUpdateOperationsInput | Buffer
    surat_domisili?: BytesFieldUpdateOperationsInput | Buffer
    surat_keterangan_bank?: BytesFieldUpdateOperationsInput | Buffer
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updateStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type kyc_level_2UncheckedUpdateManyInput = {
    kyc_level_2_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    surat_skck?: BytesFieldUpdateOperationsInput | Buffer
    surat_domisili?: BytesFieldUpdateOperationsInput | Buffer
    surat_keterangan_bank?: BytesFieldUpdateOperationsInput | Buffer
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updateStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type legalitas_usahaCreateInput = {
    legalitas_id: string
    tanggal_dibentuk?: Date | string | null
    pemilik?: string | null
    nib?: string | null
    nik_pic?: string | null
    file_perizinan?: Buffer | null
    campaign: campaignCreateNestedOneWithoutLegalitas_usahaInput
  }

  export type legalitas_usahaUncheckedCreateInput = {
    legalitas_id: string
    campaign_id: string
    tanggal_dibentuk?: Date | string | null
    pemilik?: string | null
    nib?: string | null
    nik_pic?: string | null
    file_perizinan?: Buffer | null
  }

  export type legalitas_usahaUpdateInput = {
    legalitas_id?: StringFieldUpdateOperationsInput | string
    tanggal_dibentuk?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pemilik?: NullableStringFieldUpdateOperationsInput | string | null
    nib?: NullableStringFieldUpdateOperationsInput | string | null
    nik_pic?: NullableStringFieldUpdateOperationsInput | string | null
    file_perizinan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    campaign?: campaignUpdateOneRequiredWithoutLegalitas_usahaNestedInput
  }

  export type legalitas_usahaUncheckedUpdateInput = {
    legalitas_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    tanggal_dibentuk?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pemilik?: NullableStringFieldUpdateOperationsInput | string | null
    nib?: NullableStringFieldUpdateOperationsInput | string | null
    nik_pic?: NullableStringFieldUpdateOperationsInput | string | null
    file_perizinan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type legalitas_usahaCreateManyInput = {
    legalitas_id: string
    campaign_id: string
    tanggal_dibentuk?: Date | string | null
    pemilik?: string | null
    nib?: string | null
    nik_pic?: string | null
    file_perizinan?: Buffer | null
  }

  export type legalitas_usahaUpdateManyMutationInput = {
    legalitas_id?: StringFieldUpdateOperationsInput | string
    tanggal_dibentuk?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pemilik?: NullableStringFieldUpdateOperationsInput | string | null
    nib?: NullableStringFieldUpdateOperationsInput | string | null
    nik_pic?: NullableStringFieldUpdateOperationsInput | string | null
    file_perizinan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type legalitas_usahaUncheckedUpdateManyInput = {
    legalitas_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    tanggal_dibentuk?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pemilik?: NullableStringFieldUpdateOperationsInput | string | null
    nib?: NullableStringFieldUpdateOperationsInput | string | null
    nik_pic?: NullableStringFieldUpdateOperationsInput | string | null
    file_perizinan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type pesan_campaignCreateInput = {
    pesan_id: string
    pesan: string
    createdAt?: Date | string
    createdBy: string
    campaign: campaignCreateNestedOneWithoutPesan_campaignInput
  }

  export type pesan_campaignUncheckedCreateInput = {
    pesan_id: string
    campaign_id: string
    pesan: string
    createdAt?: Date | string
    createdBy: string
  }

  export type pesan_campaignUpdateInput = {
    pesan_id?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    campaign?: campaignUpdateOneRequiredWithoutPesan_campaignNestedInput
  }

  export type pesan_campaignUncheckedUpdateInput = {
    pesan_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type pesan_campaignCreateManyInput = {
    pesan_id: string
    campaign_id: string
    pesan: string
    createdAt?: Date | string
    createdBy: string
  }

  export type pesan_campaignUpdateManyMutationInput = {
    pesan_id?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type pesan_campaignUncheckedUpdateManyInput = {
    pesan_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type product_informationCreateInput = {
    product_info_id: number
    link_video?: string | null
    product_info?: string | null
    crowdfunding: crowdfundingCreateNestedOneWithoutProduct_informationInput
  }

  export type product_informationUncheckedCreateInput = {
    product_info_id: number
    crowdfunding_id: string
    link_video?: string | null
    product_info?: string | null
  }

  export type product_informationUpdateInput = {
    product_info_id?: IntFieldUpdateOperationsInput | number
    link_video?: NullableStringFieldUpdateOperationsInput | string | null
    product_info?: NullableStringFieldUpdateOperationsInput | string | null
    crowdfunding?: crowdfundingUpdateOneRequiredWithoutProduct_informationNestedInput
  }

  export type product_informationUncheckedUpdateInput = {
    product_info_id?: IntFieldUpdateOperationsInput | number
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    link_video?: NullableStringFieldUpdateOperationsInput | string | null
    product_info?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_informationCreateManyInput = {
    product_info_id: number
    crowdfunding_id: string
    link_video?: string | null
    product_info?: string | null
  }

  export type product_informationUpdateManyMutationInput = {
    product_info_id?: IntFieldUpdateOperationsInput | number
    link_video?: NullableStringFieldUpdateOperationsInput | string | null
    product_info?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_informationUncheckedUpdateManyInput = {
    product_info_id?: IntFieldUpdateOperationsInput | number
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    link_video?: NullableStringFieldUpdateOperationsInput | string | null
    product_info?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refundCreateInput = {
    refund_id: string
    amount: bigint | number
    nama_bank?: string | null
    nomor_bank?: string | null
    alasan_refund?: string | null
    isAproved?: boolean | null
    statusUpdate?: string | null
    updatedAt?: Date | string
    createdAt?: Date | string | null
    isConfirmed?: boolean
    approved_amount?: bigint | number | null
    reason_reduce?: string | null
    user: userCreateNestedOneWithoutRefundInput
  }

  export type refundUncheckedCreateInput = {
    refund_id: string
    amount: bigint | number
    nama_bank?: string | null
    nomor_bank?: string | null
    alasan_refund?: string | null
    isAproved?: boolean | null
    statusUpdate?: string | null
    updatedAt?: Date | string
    createdAt?: Date | string | null
    user_id: string
    isConfirmed?: boolean
    approved_amount?: bigint | number | null
    reason_reduce?: string | null
  }

  export type refundUpdateInput = {
    refund_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_bank?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_refund?: NullableStringFieldUpdateOperationsInput | string | null
    isAproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfirmed?: BoolFieldUpdateOperationsInput | boolean
    approved_amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    reason_reduce?: NullableStringFieldUpdateOperationsInput | string | null
    user?: userUpdateOneRequiredWithoutRefundNestedInput
  }

  export type refundUncheckedUpdateInput = {
    refund_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_bank?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_refund?: NullableStringFieldUpdateOperationsInput | string | null
    isAproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    isConfirmed?: BoolFieldUpdateOperationsInput | boolean
    approved_amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    reason_reduce?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refundCreateManyInput = {
    refund_id: string
    amount: bigint | number
    nama_bank?: string | null
    nomor_bank?: string | null
    alasan_refund?: string | null
    isAproved?: boolean | null
    statusUpdate?: string | null
    updatedAt?: Date | string
    createdAt?: Date | string | null
    user_id: string
    isConfirmed?: boolean
    approved_amount?: bigint | number | null
    reason_reduce?: string | null
  }

  export type refundUpdateManyMutationInput = {
    refund_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_bank?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_refund?: NullableStringFieldUpdateOperationsInput | string | null
    isAproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfirmed?: BoolFieldUpdateOperationsInput | boolean
    approved_amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    reason_reduce?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refundUncheckedUpdateManyInput = {
    refund_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_bank?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_refund?: NullableStringFieldUpdateOperationsInput | string | null
    isAproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    isConfirmed?: BoolFieldUpdateOperationsInput | boolean
    approved_amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    reason_reduce?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type replies_discussionCreateInput = {
    replie_id: string
    createdAt?: Date | string
    message: string
    like?: number | null
    discussion: discussionCreateNestedOneWithoutReplies_discussionInput
  }

  export type replies_discussionUncheckedCreateInput = {
    replie_id: string
    discussion_id: string
    createdAt?: Date | string
    message: string
    like?: number | null
  }

  export type replies_discussionUpdateInput = {
    replie_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
    discussion?: discussionUpdateOneRequiredWithoutReplies_discussionNestedInput
  }

  export type replies_discussionUncheckedUpdateInput = {
    replie_id?: StringFieldUpdateOperationsInput | string
    discussion_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type replies_discussionCreateManyInput = {
    replie_id: string
    discussion_id: string
    createdAt?: Date | string
    message: string
    like?: number | null
  }

  export type replies_discussionUpdateManyMutationInput = {
    replie_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type replies_discussionUncheckedUpdateManyInput = {
    replie_id?: StringFieldUpdateOperationsInput | string
    discussion_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type social_media_usahaCreateInput = {
    social_media_id: string
    facebook?: string | null
    instagram?: string | null
    twitter?: string | null
    telegram?: string | null
    tiktok?: string | null
    linkedin?: string | null
    campaign?: campaignCreateNestedOneWithoutSocial_media_usahaInput
    team_campaign?: team_campaignCreateNestedOneWithoutSocial_media_usahaInput
  }

  export type social_media_usahaUncheckedCreateInput = {
    social_media_id: string
    campaign_id?: string | null
    team_id?: string | null
    facebook?: string | null
    instagram?: string | null
    twitter?: string | null
    telegram?: string | null
    tiktok?: string | null
    linkedin?: string | null
  }

  export type social_media_usahaUpdateInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: campaignUpdateOneWithoutSocial_media_usahaNestedInput
    team_campaign?: team_campaignUpdateOneWithoutSocial_media_usahaNestedInput
  }

  export type social_media_usahaUncheckedUpdateInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type social_media_usahaCreateManyInput = {
    social_media_id: string
    campaign_id?: string | null
    team_id?: string | null
    facebook?: string | null
    instagram?: string | null
    twitter?: string | null
    telegram?: string | null
    tiktok?: string | null
    linkedin?: string | null
  }

  export type social_media_usahaUpdateManyMutationInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type social_media_usahaUncheckedUpdateManyInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type team_campaignCreateInput = {
    team_id: string
    nama_lengkap: string
    jabatan: string
    social_media_usaha?: social_media_usahaCreateNestedManyWithoutTeam_campaignInput
    campaign: campaignCreateNestedOneWithoutTeam_campaignInput
  }

  export type team_campaignUncheckedCreateInput = {
    team_id: string
    campaign_id: string
    nama_lengkap: string
    jabatan: string
    social_media_usaha?: social_media_usahaUncheckedCreateNestedManyWithoutTeam_campaignInput
  }

  export type team_campaignUpdateInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    social_media_usaha?: social_media_usahaUpdateManyWithoutTeam_campaignNestedInput
    campaign?: campaignUpdateOneRequiredWithoutTeam_campaignNestedInput
  }

  export type team_campaignUncheckedUpdateInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    social_media_usaha?: social_media_usahaUncheckedUpdateManyWithoutTeam_campaignNestedInput
  }

  export type team_campaignCreateManyInput = {
    team_id: string
    campaign_id: string
    nama_lengkap: string
    jabatan: string
  }

  export type team_campaignUpdateManyMutationInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
  }

  export type team_campaignUncheckedUpdateManyInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
  }

  export type transactionCreateInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    campaign?: campaignCreateNestedOneWithoutTransactionInput
    user?: userCreateNestedOneWithoutTransactionInput
  }

  export type transactionUncheckedCreateInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    campaign_id?: string | null
    user_id?: string | null
  }

  export type transactionUpdateInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    campaign?: campaignUpdateOneWithoutTransactionNestedInput
    user?: userUpdateOneWithoutTransactionNestedInput
  }

  export type transactionUncheckedUpdateInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transactionCreateManyInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    campaign_id?: string | null
    user_id?: string | null
  }

  export type transactionUpdateManyMutationInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type transactionUncheckedUpdateManyInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type userCreateInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateManyInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
  }

  export type userUpdateManyMutationInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type userUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_votedCreateInput = {
    user_voted_id: string
    community_proposal: community_proposalCreateNestedOneWithoutUser_votedInput
    user: userCreateNestedOneWithoutUser_votedInput
  }

  export type user_votedUncheckedCreateInput = {
    user_voted_id: string
    community_proposal_id: string
    user_id: string
  }

  export type user_votedUpdateInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    community_proposal?: community_proposalUpdateOneRequiredWithoutUser_votedNestedInput
    user?: userUpdateOneRequiredWithoutUser_votedNestedInput
  }

  export type user_votedUncheckedUpdateInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    community_proposal_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type user_votedCreateManyInput = {
    user_voted_id: string
    community_proposal_id: string
    user_id: string
  }

  export type user_votedUpdateManyMutationInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
  }

  export type user_votedUncheckedUpdateManyInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    community_proposal_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Kyc_level_1RelationFilter = {
    is?: kyc_level_1WhereInput
    isNot?: kyc_level_1WhereInput
  }

  export type addressCountOrderByAggregateInput = {
    address_id?: SortOrder
    address?: SortOrder
    kecamatan?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    kyc_level_1_id?: SortOrder
  }

  export type addressMaxOrderByAggregateInput = {
    address_id?: SortOrder
    address?: SortOrder
    kecamatan?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    kyc_level_1_id?: SortOrder
  }

  export type addressMinOrderByAggregateInput = {
    address_id?: SortOrder
    address?: SortOrder
    kecamatan?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    kyc_level_1_id?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type CampaignRelationFilter = {
    is?: campaignWhereInput
    isNot?: campaignWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type alamat_usahaCountOrderByAggregateInput = {
    alamat_usaha_id?: SortOrder
    campaign_id?: SortOrder
    address?: SortOrder
    kecamatan?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    lat?: SortOrder
    lgn?: SortOrder
  }

  export type alamat_usahaAvgOrderByAggregateInput = {
    lat?: SortOrder
    lgn?: SortOrder
  }

  export type alamat_usahaMaxOrderByAggregateInput = {
    alamat_usaha_id?: SortOrder
    campaign_id?: SortOrder
    address?: SortOrder
    kecamatan?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    lat?: SortOrder
    lgn?: SortOrder
  }

  export type alamat_usahaMinOrderByAggregateInput = {
    alamat_usaha_id?: SortOrder
    campaign_id?: SortOrder
    address?: SortOrder
    kecamatan?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    lat?: SortOrder
    lgn?: SortOrder
  }

  export type alamat_usahaSumOrderByAggregateInput = {
    lat?: SortOrder
    lgn?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Enumtipe_usaha_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.tipe_usaha_enum | Enumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.tipe_usaha_enum[] | ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.tipe_usaha_enum[] | ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtipe_usaha_enumNullableFilter<$PrismaModel> | $Enums.tipe_usaha_enum | null
  }

  export type Enumjenis_usaha_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.jenis_usaha_enum | Enumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.jenis_usaha_enum[] | ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.jenis_usaha_enum[] | ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumjenis_usaha_enumNullableFilter<$PrismaModel> | $Enums.jenis_usaha_enum | null
  }

  export type Alamat_usahaNullableRelationFilter = {
    is?: alamat_usahaWhereInput | null
    isNot?: alamat_usahaWhereInput | null
  }

  export type UserRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type Campaign_updateListRelationFilter = {
    every?: campaign_updateWhereInput
    some?: campaign_updateWhereInput
    none?: campaign_updateWhereInput
  }

  export type Contact_usahaNullableRelationFilter = {
    is?: contact_usahaWhereInput | null
    isNot?: contact_usahaWhereInput | null
  }

  export type CrowdfundingNullableRelationFilter = {
    is?: crowdfundingWhereInput | null
    isNot?: crowdfundingWhereInput | null
  }

  export type DiscussionListRelationFilter = {
    every?: discussionWhereInput
    some?: discussionWhereInput
    none?: discussionWhereInput
  }

  export type DocumentNullableRelationFilter = {
    is?: documentWhereInput | null
    isNot?: documentWhereInput | null
  }

  export type InvestmentListRelationFilter = {
    every?: investmentWhereInput
    some?: investmentWhereInput
    none?: investmentWhereInput
  }

  export type Legalitas_usahaNullableRelationFilter = {
    is?: legalitas_usahaWhereInput | null
    isNot?: legalitas_usahaWhereInput | null
  }

  export type Pesan_campaignListRelationFilter = {
    every?: pesan_campaignWhereInput
    some?: pesan_campaignWhereInput
    none?: pesan_campaignWhereInput
  }

  export type Social_media_usahaNullableRelationFilter = {
    is?: social_media_usahaWhereInput | null
    isNot?: social_media_usahaWhereInput | null
  }

  export type Team_campaignListRelationFilter = {
    every?: team_campaignWhereInput
    some?: team_campaignWhereInput
    none?: team_campaignWhereInput
  }

  export type TransactionListRelationFilter = {
    every?: transactionWhereInput
    some?: transactionWhereInput
    none?: transactionWhereInput
  }

  export type campaign_updateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type discussionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type investmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pesan_campaignOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type team_campaignOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type transactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type campaignCountOrderByAggregateInput = {
    campaign_id?: SortOrder
    user_id?: SortOrder
    nama_usaha?: SortOrder
    deskripsi_usaha?: SortOrder
    logo?: SortOrder
    isApproved?: SortOrder
    isPublished?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tipe_usaha?: SortOrder
    jenis_usaha?: SortOrder
  }

  export type campaignMaxOrderByAggregateInput = {
    campaign_id?: SortOrder
    user_id?: SortOrder
    nama_usaha?: SortOrder
    deskripsi_usaha?: SortOrder
    logo?: SortOrder
    isApproved?: SortOrder
    isPublished?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tipe_usaha?: SortOrder
    jenis_usaha?: SortOrder
  }

  export type campaignMinOrderByAggregateInput = {
    campaign_id?: SortOrder
    user_id?: SortOrder
    nama_usaha?: SortOrder
    deskripsi_usaha?: SortOrder
    logo?: SortOrder
    isApproved?: SortOrder
    isPublished?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tipe_usaha?: SortOrder
    jenis_usaha?: SortOrder
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Enumtipe_usaha_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tipe_usaha_enum | Enumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.tipe_usaha_enum[] | ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.tipe_usaha_enum[] | ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtipe_usaha_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.tipe_usaha_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtipe_usaha_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumtipe_usaha_enumNullableFilter<$PrismaModel>
  }

  export type Enumjenis_usaha_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.jenis_usaha_enum | Enumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.jenis_usaha_enum[] | ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.jenis_usaha_enum[] | ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumjenis_usaha_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.jenis_usaha_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumjenis_usaha_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumjenis_usaha_enumNullableFilter<$PrismaModel>
  }

  export type campaign_updateCountOrderByAggregateInput = {
    update_id?: SortOrder
    campaign_id?: SortOrder
    update_title?: SortOrder
    update_detail?: SortOrder
    published_at?: SortOrder
  }

  export type campaign_updateMaxOrderByAggregateInput = {
    update_id?: SortOrder
    campaign_id?: SortOrder
    update_title?: SortOrder
    update_detail?: SortOrder
    published_at?: SortOrder
  }

  export type campaign_updateMinOrderByAggregateInput = {
    update_id?: SortOrder
    campaign_id?: SortOrder
    update_title?: SortOrder
    update_detail?: SortOrder
    published_at?: SortOrder
  }

  export type Community_membershipNullableRelationFilter = {
    is?: community_membershipWhereInput | null
    isNot?: community_membershipWhereInput | null
  }

  export type Community_proposalListRelationFilter = {
    every?: community_proposalWhereInput
    some?: community_proposalWhereInput
    none?: community_proposalWhereInput
  }

  export type community_proposalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type communityCountOrderByAggregateInput = {
    community_id?: SortOrder
    campaign_id?: SortOrder
  }

  export type communityMaxOrderByAggregateInput = {
    community_id?: SortOrder
    campaign_id?: SortOrder
  }

  export type communityMinOrderByAggregateInput = {
    community_id?: SortOrder
    campaign_id?: SortOrder
  }

  export type Community_proposalRelationFilter = {
    is?: community_proposalWhereInput
    isNot?: community_proposalWhereInput
  }

  export type community_chatCountOrderByAggregateInput = {
    chat_id?: SortOrder
    community_proposal_id?: SortOrder
    chat?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type community_chatMaxOrderByAggregateInput = {
    chat_id?: SortOrder
    community_proposal_id?: SortOrder
    chat?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type community_chatMinOrderByAggregateInput = {
    chat_id?: SortOrder
    community_proposal_id?: SortOrder
    chat?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type CommunityRelationFilter = {
    is?: communityWhereInput
    isNot?: communityWhereInput
  }

  export type community_membershipCountOrderByAggregateInput = {
    community_membership_id?: SortOrder
    community_id?: SortOrder
    user_id?: SortOrder
    joinedDate?: SortOrder
    exited_date?: SortOrder
  }

  export type community_membershipMaxOrderByAggregateInput = {
    community_membership_id?: SortOrder
    community_id?: SortOrder
    user_id?: SortOrder
    joinedDate?: SortOrder
    exited_date?: SortOrder
  }

  export type community_membershipMinOrderByAggregateInput = {
    community_membership_id?: SortOrder
    community_id?: SortOrder
    user_id?: SortOrder
    joinedDate?: SortOrder
    exited_date?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type Community_chatListRelationFilter = {
    every?: community_chatWhereInput
    some?: community_chatWhereInput
    none?: community_chatWhereInput
  }

  export type User_votedListRelationFilter = {
    every?: user_votedWhereInput
    some?: user_votedWhereInput
    none?: user_votedWhereInput
  }

  export type community_chatOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_votedOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type community_proposalCountOrderByAggregateInput = {
    proposal_com_id?: SortOrder
    setuju?: SortOrder
    tidak_setuju?: SortOrder
    abstain?: SortOrder
    title?: SortOrder
    deskripsi?: SortOrder
    file_tambahan?: SortOrder
    amount?: SortOrder
    community_id?: SortOrder
  }

  export type community_proposalAvgOrderByAggregateInput = {
    setuju?: SortOrder
    tidak_setuju?: SortOrder
    abstain?: SortOrder
    amount?: SortOrder
  }

  export type community_proposalMaxOrderByAggregateInput = {
    proposal_com_id?: SortOrder
    setuju?: SortOrder
    tidak_setuju?: SortOrder
    abstain?: SortOrder
    title?: SortOrder
    deskripsi?: SortOrder
    file_tambahan?: SortOrder
    amount?: SortOrder
    community_id?: SortOrder
  }

  export type community_proposalMinOrderByAggregateInput = {
    proposal_com_id?: SortOrder
    setuju?: SortOrder
    tidak_setuju?: SortOrder
    abstain?: SortOrder
    title?: SortOrder
    deskripsi?: SortOrder
    file_tambahan?: SortOrder
    amount?: SortOrder
    community_id?: SortOrder
  }

  export type community_proposalSumOrderByAggregateInput = {
    setuju?: SortOrder
    tidak_setuju?: SortOrder
    abstain?: SortOrder
    amount?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type contact_usahaCountOrderByAggregateInput = {
    contact_id?: SortOrder
    campaign_id?: SortOrder
    telepon_wa?: SortOrder
    fax?: SortOrder
    email?: SortOrder
    website?: SortOrder
  }

  export type contact_usahaMaxOrderByAggregateInput = {
    contact_id?: SortOrder
    campaign_id?: SortOrder
    telepon_wa?: SortOrder
    fax?: SortOrder
    email?: SortOrder
    website?: SortOrder
  }

  export type contact_usahaMinOrderByAggregateInput = {
    contact_id?: SortOrder
    campaign_id?: SortOrder
    telepon_wa?: SortOrder
    fax?: SortOrder
    email?: SortOrder
    website?: SortOrder
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type Data_rekeningNullableRelationFilter = {
    is?: data_rekeningWhereInput | null
    isNot?: data_rekeningWhereInput | null
  }

  export type Highlight_productNullableRelationFilter = {
    is?: highlight_productWhereInput | null
    isNot?: highlight_productWhereInput | null
  }

  export type Product_informationNullableRelationFilter = {
    is?: product_informationWhereInput | null
    isNot?: product_informationWhereInput | null
  }

  export type crowdfundingCountOrderByAggregateInput = {
    crowdfunding_id?: SortOrder
    campaign_id?: SortOrder
    target_raise?: SortOrder
    equity_dijual?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    fund_raised?: SortOrder
  }

  export type crowdfundingAvgOrderByAggregateInput = {
    target_raise?: SortOrder
    equity_dijual?: SortOrder
    fund_raised?: SortOrder
  }

  export type crowdfundingMaxOrderByAggregateInput = {
    crowdfunding_id?: SortOrder
    campaign_id?: SortOrder
    target_raise?: SortOrder
    equity_dijual?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    fund_raised?: SortOrder
  }

  export type crowdfundingMinOrderByAggregateInput = {
    crowdfunding_id?: SortOrder
    campaign_id?: SortOrder
    target_raise?: SortOrder
    equity_dijual?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    fund_raised?: SortOrder
  }

  export type crowdfundingSumOrderByAggregateInput = {
    target_raise?: SortOrder
    equity_dijual?: SortOrder
    fund_raised?: SortOrder
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type CrowdfundingRelationFilter = {
    is?: crowdfundingWhereInput
    isNot?: crowdfundingWhereInput
  }

  export type data_rekeningCountOrderByAggregateInput = {
    rekening_id?: SortOrder
    nama_rekening?: SortOrder
    nama_bank?: SortOrder
    nomor_rekening?: SortOrder
    crowdfunding_id?: SortOrder
  }

  export type data_rekeningMaxOrderByAggregateInput = {
    rekening_id?: SortOrder
    nama_rekening?: SortOrder
    nama_bank?: SortOrder
    nomor_rekening?: SortOrder
    crowdfunding_id?: SortOrder
  }

  export type data_rekeningMinOrderByAggregateInput = {
    rekening_id?: SortOrder
    nama_rekening?: SortOrder
    nama_bank?: SortOrder
    nomor_rekening?: SortOrder
    crowdfunding_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Replies_discussionListRelationFilter = {
    every?: replies_discussionWhereInput
    some?: replies_discussionWhereInput
    none?: replies_discussionWhereInput
  }

  export type replies_discussionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type discussionCountOrderByAggregateInput = {
    discussion_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    lastActivity?: SortOrder
    message?: SortOrder
    like?: SortOrder
  }

  export type discussionAvgOrderByAggregateInput = {
    like?: SortOrder
  }

  export type discussionMaxOrderByAggregateInput = {
    discussion_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    lastActivity?: SortOrder
    message?: SortOrder
    like?: SortOrder
  }

  export type discussionMinOrderByAggregateInput = {
    discussion_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    lastActivity?: SortOrder
    message?: SortOrder
    like?: SortOrder
  }

  export type discussionSumOrderByAggregateInput = {
    like?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Document_legalListRelationFilter = {
    every?: document_legalWhereInput
    some?: document_legalWhereInput
    none?: document_legalWhereInput
  }

  export type Document_proposalListRelationFilter = {
    every?: document_proposalWhereInput
    some?: document_proposalWhereInput
    none?: document_proposalWhereInput
  }

  export type document_legalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type document_proposalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type documentCountOrderByAggregateInput = {
    document_id?: SortOrder
    campaign_id?: SortOrder
  }

  export type documentMaxOrderByAggregateInput = {
    document_id?: SortOrder
    campaign_id?: SortOrder
  }

  export type documentMinOrderByAggregateInput = {
    document_id?: SortOrder
    campaign_id?: SortOrder
  }

  export type DocumentRelationFilter = {
    is?: documentWhereInput
    isNot?: documentWhereInput
  }

  export type document_legalCountOrderByAggregateInput = {
    document_legal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrder
    file?: SortOrder
  }

  export type document_legalMaxOrderByAggregateInput = {
    document_legal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrder
    file?: SortOrder
  }

  export type document_legalMinOrderByAggregateInput = {
    document_legal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrder
    file?: SortOrder
  }

  export type document_proposalCountOrderByAggregateInput = {
    document_proposal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrder
    file?: SortOrder
  }

  export type document_proposalMaxOrderByAggregateInput = {
    document_proposal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrder
    file?: SortOrder
  }

  export type document_proposalMinOrderByAggregateInput = {
    document_proposal_id?: SortOrder
    document_id?: SortOrder
    nama_dokumen?: SortOrder
    file?: SortOrder
  }

  export type BytesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel>
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel>
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel>
    not?: NestedBytesFilter<$PrismaModel> | Buffer
  }

  export type foto_dokumenCountOrderByAggregateInput = {
    foto_dokumen_id?: SortOrder
    foto_ktp_depan?: SortOrder
    foto_ktp_belakang?: SortOrder
    foto_selfie?: SortOrder
    kyc_level_1_id?: SortOrder
  }

  export type foto_dokumenMaxOrderByAggregateInput = {
    foto_dokumen_id?: SortOrder
    foto_ktp_depan?: SortOrder
    foto_ktp_belakang?: SortOrder
    foto_selfie?: SortOrder
    kyc_level_1_id?: SortOrder
  }

  export type foto_dokumenMinOrderByAggregateInput = {
    foto_dokumen_id?: SortOrder
    foto_ktp_depan?: SortOrder
    foto_ktp_belakang?: SortOrder
    foto_selfie?: SortOrder
    kyc_level_1_id?: SortOrder
  }

  export type BytesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel>
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel>
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel>
    not?: NestedBytesWithAggregatesFilter<$PrismaModel> | Buffer
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBytesFilter<$PrismaModel>
    _max?: NestedBytesFilter<$PrismaModel>
  }

  export type highlight_productCountOrderByAggregateInput = {
    highlight_product_id?: SortOrder
    crowdfunding_id?: SortOrder
    highlight?: SortOrder
  }

  export type highlight_productAvgOrderByAggregateInput = {
    highlight_product_id?: SortOrder
  }

  export type highlight_productMaxOrderByAggregateInput = {
    highlight_product_id?: SortOrder
    crowdfunding_id?: SortOrder
    highlight?: SortOrder
  }

  export type highlight_productMinOrderByAggregateInput = {
    highlight_product_id?: SortOrder
    crowdfunding_id?: SortOrder
    highlight?: SortOrder
  }

  export type highlight_productSumOrderByAggregateInput = {
    highlight_product_id?: SortOrder
  }

  export type investmentCountOrderByAggregateInput = {
    investment_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    investment_date?: SortOrder
  }

  export type investmentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type investmentMaxOrderByAggregateInput = {
    investment_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    investment_date?: SortOrder
  }

  export type investmentMinOrderByAggregateInput = {
    investment_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    investment_date?: SortOrder
  }

  export type investmentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type Enumkyc_status_enumFilter<$PrismaModel = never> = {
    equals?: $Enums.kyc_status_enum | Enumkyc_status_enumFieldRefInput<$PrismaModel>
    in?: $Enums.kyc_status_enum[] | ListEnumkyc_status_enumFieldRefInput<$PrismaModel>
    notIn?: $Enums.kyc_status_enum[] | ListEnumkyc_status_enumFieldRefInput<$PrismaModel>
    not?: NestedEnumkyc_status_enumFilter<$PrismaModel> | $Enums.kyc_status_enum
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type AddressNullableRelationFilter = {
    is?: addressWhereInput | null
    isNot?: addressWhereInput | null
  }

  export type Foto_dokumenNullableRelationFilter = {
    is?: foto_dokumenWhereInput | null
    isNot?: foto_dokumenWhereInput | null
  }

  export type kyc_level_1CountOrderByAggregateInput = {
    kyc_level_1_id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    nik?: SortOrder
    tanggal_lahir?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    statusUpdate?: SortOrder
    jenis_kelamin?: SortOrder
    isaproved?: SortOrder
  }

  export type kyc_level_1MaxOrderByAggregateInput = {
    kyc_level_1_id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    nik?: SortOrder
    tanggal_lahir?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    statusUpdate?: SortOrder
    jenis_kelamin?: SortOrder
    isaproved?: SortOrder
  }

  export type kyc_level_1MinOrderByAggregateInput = {
    kyc_level_1_id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    nik?: SortOrder
    tanggal_lahir?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    statusUpdate?: SortOrder
    jenis_kelamin?: SortOrder
    isaproved?: SortOrder
  }

  export type Enumkyc_status_enumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.kyc_status_enum | Enumkyc_status_enumFieldRefInput<$PrismaModel>
    in?: $Enums.kyc_status_enum[] | ListEnumkyc_status_enumFieldRefInput<$PrismaModel>
    notIn?: $Enums.kyc_status_enum[] | ListEnumkyc_status_enumFieldRefInput<$PrismaModel>
    not?: NestedEnumkyc_status_enumWithAggregatesFilter<$PrismaModel> | $Enums.kyc_status_enum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumkyc_status_enumFilter<$PrismaModel>
    _max?: NestedEnumkyc_status_enumFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type kyc_level_2CountOrderByAggregateInput = {
    kyc_level_2_id?: SortOrder
    user_id?: SortOrder
    surat_skck?: SortOrder
    surat_domisili?: SortOrder
    surat_keterangan_bank?: SortOrder
    status?: SortOrder
    isApproved?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    updateStatus?: SortOrder
  }

  export type kyc_level_2MaxOrderByAggregateInput = {
    kyc_level_2_id?: SortOrder
    user_id?: SortOrder
    surat_skck?: SortOrder
    surat_domisili?: SortOrder
    surat_keterangan_bank?: SortOrder
    status?: SortOrder
    isApproved?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    updateStatus?: SortOrder
  }

  export type kyc_level_2MinOrderByAggregateInput = {
    kyc_level_2_id?: SortOrder
    user_id?: SortOrder
    surat_skck?: SortOrder
    surat_domisili?: SortOrder
    surat_keterangan_bank?: SortOrder
    status?: SortOrder
    isApproved?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    updateStatus?: SortOrder
  }

  export type legalitas_usahaCountOrderByAggregateInput = {
    legalitas_id?: SortOrder
    campaign_id?: SortOrder
    tanggal_dibentuk?: SortOrder
    pemilik?: SortOrder
    nib?: SortOrder
    nik_pic?: SortOrder
    file_perizinan?: SortOrder
  }

  export type legalitas_usahaMaxOrderByAggregateInput = {
    legalitas_id?: SortOrder
    campaign_id?: SortOrder
    tanggal_dibentuk?: SortOrder
    pemilik?: SortOrder
    nib?: SortOrder
    nik_pic?: SortOrder
    file_perizinan?: SortOrder
  }

  export type legalitas_usahaMinOrderByAggregateInput = {
    legalitas_id?: SortOrder
    campaign_id?: SortOrder
    tanggal_dibentuk?: SortOrder
    pemilik?: SortOrder
    nib?: SortOrder
    nik_pic?: SortOrder
    file_perizinan?: SortOrder
  }

  export type pesan_campaignCountOrderByAggregateInput = {
    pesan_id?: SortOrder
    campaign_id?: SortOrder
    pesan?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type pesan_campaignMaxOrderByAggregateInput = {
    pesan_id?: SortOrder
    campaign_id?: SortOrder
    pesan?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type pesan_campaignMinOrderByAggregateInput = {
    pesan_id?: SortOrder
    campaign_id?: SortOrder
    pesan?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type product_informationCountOrderByAggregateInput = {
    product_info_id?: SortOrder
    crowdfunding_id?: SortOrder
    link_video?: SortOrder
    product_info?: SortOrder
  }

  export type product_informationAvgOrderByAggregateInput = {
    product_info_id?: SortOrder
  }

  export type product_informationMaxOrderByAggregateInput = {
    product_info_id?: SortOrder
    crowdfunding_id?: SortOrder
    link_video?: SortOrder
    product_info?: SortOrder
  }

  export type product_informationMinOrderByAggregateInput = {
    product_info_id?: SortOrder
    crowdfunding_id?: SortOrder
    link_video?: SortOrder
    product_info?: SortOrder
  }

  export type product_informationSumOrderByAggregateInput = {
    product_info_id?: SortOrder
  }

  export type refundCountOrderByAggregateInput = {
    refund_id?: SortOrder
    amount?: SortOrder
    nama_bank?: SortOrder
    nomor_bank?: SortOrder
    alasan_refund?: SortOrder
    isAproved?: SortOrder
    statusUpdate?: SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    isConfirmed?: SortOrder
    approved_amount?: SortOrder
    reason_reduce?: SortOrder
  }

  export type refundAvgOrderByAggregateInput = {
    amount?: SortOrder
    approved_amount?: SortOrder
  }

  export type refundMaxOrderByAggregateInput = {
    refund_id?: SortOrder
    amount?: SortOrder
    nama_bank?: SortOrder
    nomor_bank?: SortOrder
    alasan_refund?: SortOrder
    isAproved?: SortOrder
    statusUpdate?: SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    isConfirmed?: SortOrder
    approved_amount?: SortOrder
    reason_reduce?: SortOrder
  }

  export type refundMinOrderByAggregateInput = {
    refund_id?: SortOrder
    amount?: SortOrder
    nama_bank?: SortOrder
    nomor_bank?: SortOrder
    alasan_refund?: SortOrder
    isAproved?: SortOrder
    statusUpdate?: SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    isConfirmed?: SortOrder
    approved_amount?: SortOrder
    reason_reduce?: SortOrder
  }

  export type refundSumOrderByAggregateInput = {
    amount?: SortOrder
    approved_amount?: SortOrder
  }

  export type DiscussionRelationFilter = {
    is?: discussionWhereInput
    isNot?: discussionWhereInput
  }

  export type replies_discussionCountOrderByAggregateInput = {
    replie_id?: SortOrder
    discussion_id?: SortOrder
    createdAt?: SortOrder
    message?: SortOrder
    like?: SortOrder
  }

  export type replies_discussionAvgOrderByAggregateInput = {
    like?: SortOrder
  }

  export type replies_discussionMaxOrderByAggregateInput = {
    replie_id?: SortOrder
    discussion_id?: SortOrder
    createdAt?: SortOrder
    message?: SortOrder
    like?: SortOrder
  }

  export type replies_discussionMinOrderByAggregateInput = {
    replie_id?: SortOrder
    discussion_id?: SortOrder
    createdAt?: SortOrder
    message?: SortOrder
    like?: SortOrder
  }

  export type replies_discussionSumOrderByAggregateInput = {
    like?: SortOrder
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type CampaignNullableRelationFilter = {
    is?: campaignWhereInput | null
    isNot?: campaignWhereInput | null
  }

  export type Team_campaignNullableRelationFilter = {
    is?: team_campaignWhereInput | null
    isNot?: team_campaignWhereInput | null
  }

  export type social_media_usahaCountOrderByAggregateInput = {
    social_media_id?: SortOrder
    campaign_id?: SortOrder
    team_id?: SortOrder
    facebook?: SortOrder
    instagram?: SortOrder
    twitter?: SortOrder
    telegram?: SortOrder
    tiktok?: SortOrder
    linkedin?: SortOrder
  }

  export type social_media_usahaMaxOrderByAggregateInput = {
    social_media_id?: SortOrder
    campaign_id?: SortOrder
    team_id?: SortOrder
    facebook?: SortOrder
    instagram?: SortOrder
    twitter?: SortOrder
    telegram?: SortOrder
    tiktok?: SortOrder
    linkedin?: SortOrder
  }

  export type social_media_usahaMinOrderByAggregateInput = {
    social_media_id?: SortOrder
    campaign_id?: SortOrder
    team_id?: SortOrder
    facebook?: SortOrder
    instagram?: SortOrder
    twitter?: SortOrder
    telegram?: SortOrder
    tiktok?: SortOrder
    linkedin?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Social_media_usahaListRelationFilter = {
    every?: social_media_usahaWhereInput
    some?: social_media_usahaWhereInput
    none?: social_media_usahaWhereInput
  }

  export type social_media_usahaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type team_campaignCountOrderByAggregateInput = {
    team_id?: SortOrder
    campaign_id?: SortOrder
    nama_lengkap?: SortOrder
    jabatan?: SortOrder
  }

  export type team_campaignMaxOrderByAggregateInput = {
    team_id?: SortOrder
    campaign_id?: SortOrder
    nama_lengkap?: SortOrder
    jabatan?: SortOrder
  }

  export type team_campaignMinOrderByAggregateInput = {
    team_id?: SortOrder
    campaign_id?: SortOrder
    nama_lengkap?: SortOrder
    jabatan?: SortOrder
  }

  export type Enumtransaction_type_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_type_enum | Enumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.transaction_type_enum[] | ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.transaction_type_enum[] | ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtransaction_type_enumNullableFilter<$PrismaModel> | $Enums.transaction_type_enum | null
  }

  export type Enumtransaction_status_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_status_enum | Enumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.transaction_status_enum[] | ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.transaction_status_enum[] | ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtransaction_status_enumNullableFilter<$PrismaModel> | $Enums.transaction_status_enum | null
  }

  export type UserNullableRelationFilter = {
    is?: userWhereInput | null
    isNot?: userWhereInput | null
  }

  export type transactionCountOrderByAggregateInput = {
    transaction_id?: SortOrder
    transaction_type?: SortOrder
    transaction_status?: SortOrder
    trans_date?: SortOrder
    payment?: SortOrder
    amount?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
  }

  export type transactionAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type transactionMaxOrderByAggregateInput = {
    transaction_id?: SortOrder
    transaction_type?: SortOrder
    transaction_status?: SortOrder
    trans_date?: SortOrder
    payment?: SortOrder
    amount?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
  }

  export type transactionMinOrderByAggregateInput = {
    transaction_id?: SortOrder
    transaction_type?: SortOrder
    transaction_status?: SortOrder
    trans_date?: SortOrder
    payment?: SortOrder
    amount?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
  }

  export type transactionSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type Enumtransaction_type_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_type_enum | Enumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.transaction_type_enum[] | ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.transaction_type_enum[] | ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtransaction_type_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.transaction_type_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtransaction_type_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumtransaction_type_enumNullableFilter<$PrismaModel>
  }

  export type Enumtransaction_status_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_status_enum | Enumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.transaction_status_enum[] | ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.transaction_status_enum[] | ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtransaction_status_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.transaction_status_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtransaction_status_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumtransaction_status_enumNullableFilter<$PrismaModel>
  }

  export type Enumuser_rolesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_roles | Enumuser_rolesFieldRefInput<$PrismaModel>
    in?: $Enums.user_roles[] | ListEnumuser_rolesFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_roles[] | ListEnumuser_rolesFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_rolesFilter<$PrismaModel> | $Enums.user_roles
  }

  export type CampaignListRelationFilter = {
    every?: campaignWhereInput
    some?: campaignWhereInput
    none?: campaignWhereInput
  }

  export type Community_membershipListRelationFilter = {
    every?: community_membershipWhereInput
    some?: community_membershipWhereInput
    none?: community_membershipWhereInput
  }

  export type Kyc_level_1NullableRelationFilter = {
    is?: kyc_level_1WhereInput | null
    isNot?: kyc_level_1WhereInput | null
  }

  export type Kyc_level_2NullableRelationFilter = {
    is?: kyc_level_2WhereInput | null
    isNot?: kyc_level_2WhereInput | null
  }

  export type RefundListRelationFilter = {
    every?: refundWhereInput
    some?: refundWhereInput
    none?: refundWhereInput
  }

  export type campaignOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type community_membershipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type refundOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userCountOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    roles?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    username?: SortOrder
    avatar?: SortOrder
    isverified?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    roles?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    username?: SortOrder
    avatar?: SortOrder
    isverified?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    roles?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    username?: SortOrder
    avatar?: SortOrder
    isverified?: SortOrder
  }

  export type Enumuser_rolesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_roles | Enumuser_rolesFieldRefInput<$PrismaModel>
    in?: $Enums.user_roles[] | ListEnumuser_rolesFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_roles[] | ListEnumuser_rolesFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_rolesWithAggregatesFilter<$PrismaModel> | $Enums.user_roles
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_rolesFilter<$PrismaModel>
    _max?: NestedEnumuser_rolesFilter<$PrismaModel>
  }

  export type user_votedCountOrderByAggregateInput = {
    user_voted_id?: SortOrder
    community_proposal_id?: SortOrder
    user_id?: SortOrder
  }

  export type user_votedMaxOrderByAggregateInput = {
    user_voted_id?: SortOrder
    community_proposal_id?: SortOrder
    user_id?: SortOrder
  }

  export type user_votedMinOrderByAggregateInput = {
    user_voted_id?: SortOrder
    community_proposal_id?: SortOrder
    user_id?: SortOrder
  }

  export type kyc_level_1CreateNestedOneWithoutAddressInput = {
    create?: XOR<kyc_level_1CreateWithoutAddressInput, kyc_level_1UncheckedCreateWithoutAddressInput>
    connectOrCreate?: kyc_level_1CreateOrConnectWithoutAddressInput
    connect?: kyc_level_1WhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type kyc_level_1UpdateOneRequiredWithoutAddressNestedInput = {
    create?: XOR<kyc_level_1CreateWithoutAddressInput, kyc_level_1UncheckedCreateWithoutAddressInput>
    connectOrCreate?: kyc_level_1CreateOrConnectWithoutAddressInput
    upsert?: kyc_level_1UpsertWithoutAddressInput
    connect?: kyc_level_1WhereUniqueInput
    update?: XOR<XOR<kyc_level_1UpdateToOneWithWhereWithoutAddressInput, kyc_level_1UpdateWithoutAddressInput>, kyc_level_1UncheckedUpdateWithoutAddressInput>
  }

  export type campaignCreateNestedOneWithoutAlamat_usahaInput = {
    create?: XOR<campaignCreateWithoutAlamat_usahaInput, campaignUncheckedCreateWithoutAlamat_usahaInput>
    connectOrCreate?: campaignCreateOrConnectWithoutAlamat_usahaInput
    connect?: campaignWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type campaignUpdateOneRequiredWithoutAlamat_usahaNestedInput = {
    create?: XOR<campaignCreateWithoutAlamat_usahaInput, campaignUncheckedCreateWithoutAlamat_usahaInput>
    connectOrCreate?: campaignCreateOrConnectWithoutAlamat_usahaInput
    upsert?: campaignUpsertWithoutAlamat_usahaInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutAlamat_usahaInput, campaignUpdateWithoutAlamat_usahaInput>, campaignUncheckedUpdateWithoutAlamat_usahaInput>
  }

  export type alamat_usahaCreateNestedOneWithoutCampaignInput = {
    create?: XOR<alamat_usahaCreateWithoutCampaignInput, alamat_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: alamat_usahaCreateOrConnectWithoutCampaignInput
    connect?: alamat_usahaWhereUniqueInput
  }

  export type userCreateNestedOneWithoutCampaignInput = {
    create?: XOR<userCreateWithoutCampaignInput, userUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: userCreateOrConnectWithoutCampaignInput
    connect?: userWhereUniqueInput
  }

  export type campaign_updateCreateNestedManyWithoutCampaignInput = {
    create?: XOR<campaign_updateCreateWithoutCampaignInput, campaign_updateUncheckedCreateWithoutCampaignInput> | campaign_updateCreateWithoutCampaignInput[] | campaign_updateUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: campaign_updateCreateOrConnectWithoutCampaignInput | campaign_updateCreateOrConnectWithoutCampaignInput[]
    createMany?: campaign_updateCreateManyCampaignInputEnvelope
    connect?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
  }

  export type contact_usahaCreateNestedOneWithoutCampaignInput = {
    create?: XOR<contact_usahaCreateWithoutCampaignInput, contact_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: contact_usahaCreateOrConnectWithoutCampaignInput
    connect?: contact_usahaWhereUniqueInput
  }

  export type crowdfundingCreateNestedOneWithoutCampaignInput = {
    create?: XOR<crowdfundingCreateWithoutCampaignInput, crowdfundingUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutCampaignInput
    connect?: crowdfundingWhereUniqueInput
  }

  export type discussionCreateNestedManyWithoutCampaignInput = {
    create?: XOR<discussionCreateWithoutCampaignInput, discussionUncheckedCreateWithoutCampaignInput> | discussionCreateWithoutCampaignInput[] | discussionUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: discussionCreateOrConnectWithoutCampaignInput | discussionCreateOrConnectWithoutCampaignInput[]
    createMany?: discussionCreateManyCampaignInputEnvelope
    connect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
  }

  export type documentCreateNestedOneWithoutCampaignInput = {
    create?: XOR<documentCreateWithoutCampaignInput, documentUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: documentCreateOrConnectWithoutCampaignInput
    connect?: documentWhereUniqueInput
  }

  export type investmentCreateNestedManyWithoutCampaignInput = {
    create?: XOR<investmentCreateWithoutCampaignInput, investmentUncheckedCreateWithoutCampaignInput> | investmentCreateWithoutCampaignInput[] | investmentUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: investmentCreateOrConnectWithoutCampaignInput | investmentCreateOrConnectWithoutCampaignInput[]
    createMany?: investmentCreateManyCampaignInputEnvelope
    connect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
  }

  export type legalitas_usahaCreateNestedOneWithoutCampaignInput = {
    create?: XOR<legalitas_usahaCreateWithoutCampaignInput, legalitas_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: legalitas_usahaCreateOrConnectWithoutCampaignInput
    connect?: legalitas_usahaWhereUniqueInput
  }

  export type pesan_campaignCreateNestedManyWithoutCampaignInput = {
    create?: XOR<pesan_campaignCreateWithoutCampaignInput, pesan_campaignUncheckedCreateWithoutCampaignInput> | pesan_campaignCreateWithoutCampaignInput[] | pesan_campaignUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: pesan_campaignCreateOrConnectWithoutCampaignInput | pesan_campaignCreateOrConnectWithoutCampaignInput[]
    createMany?: pesan_campaignCreateManyCampaignInputEnvelope
    connect?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
  }

  export type social_media_usahaCreateNestedOneWithoutCampaignInput = {
    create?: XOR<social_media_usahaCreateWithoutCampaignInput, social_media_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: social_media_usahaCreateOrConnectWithoutCampaignInput
    connect?: social_media_usahaWhereUniqueInput
  }

  export type team_campaignCreateNestedManyWithoutCampaignInput = {
    create?: XOR<team_campaignCreateWithoutCampaignInput, team_campaignUncheckedCreateWithoutCampaignInput> | team_campaignCreateWithoutCampaignInput[] | team_campaignUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: team_campaignCreateOrConnectWithoutCampaignInput | team_campaignCreateOrConnectWithoutCampaignInput[]
    createMany?: team_campaignCreateManyCampaignInputEnvelope
    connect?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
  }

  export type transactionCreateNestedManyWithoutCampaignInput = {
    create?: XOR<transactionCreateWithoutCampaignInput, transactionUncheckedCreateWithoutCampaignInput> | transactionCreateWithoutCampaignInput[] | transactionUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: transactionCreateOrConnectWithoutCampaignInput | transactionCreateOrConnectWithoutCampaignInput[]
    createMany?: transactionCreateManyCampaignInputEnvelope
    connect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
  }

  export type alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput = {
    create?: XOR<alamat_usahaCreateWithoutCampaignInput, alamat_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: alamat_usahaCreateOrConnectWithoutCampaignInput
    connect?: alamat_usahaWhereUniqueInput
  }

  export type campaign_updateUncheckedCreateNestedManyWithoutCampaignInput = {
    create?: XOR<campaign_updateCreateWithoutCampaignInput, campaign_updateUncheckedCreateWithoutCampaignInput> | campaign_updateCreateWithoutCampaignInput[] | campaign_updateUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: campaign_updateCreateOrConnectWithoutCampaignInput | campaign_updateCreateOrConnectWithoutCampaignInput[]
    createMany?: campaign_updateCreateManyCampaignInputEnvelope
    connect?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
  }

  export type contact_usahaUncheckedCreateNestedOneWithoutCampaignInput = {
    create?: XOR<contact_usahaCreateWithoutCampaignInput, contact_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: contact_usahaCreateOrConnectWithoutCampaignInput
    connect?: contact_usahaWhereUniqueInput
  }

  export type crowdfundingUncheckedCreateNestedOneWithoutCampaignInput = {
    create?: XOR<crowdfundingCreateWithoutCampaignInput, crowdfundingUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutCampaignInput
    connect?: crowdfundingWhereUniqueInput
  }

  export type discussionUncheckedCreateNestedManyWithoutCampaignInput = {
    create?: XOR<discussionCreateWithoutCampaignInput, discussionUncheckedCreateWithoutCampaignInput> | discussionCreateWithoutCampaignInput[] | discussionUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: discussionCreateOrConnectWithoutCampaignInput | discussionCreateOrConnectWithoutCampaignInput[]
    createMany?: discussionCreateManyCampaignInputEnvelope
    connect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
  }

  export type documentUncheckedCreateNestedOneWithoutCampaignInput = {
    create?: XOR<documentCreateWithoutCampaignInput, documentUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: documentCreateOrConnectWithoutCampaignInput
    connect?: documentWhereUniqueInput
  }

  export type investmentUncheckedCreateNestedManyWithoutCampaignInput = {
    create?: XOR<investmentCreateWithoutCampaignInput, investmentUncheckedCreateWithoutCampaignInput> | investmentCreateWithoutCampaignInput[] | investmentUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: investmentCreateOrConnectWithoutCampaignInput | investmentCreateOrConnectWithoutCampaignInput[]
    createMany?: investmentCreateManyCampaignInputEnvelope
    connect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
  }

  export type legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput = {
    create?: XOR<legalitas_usahaCreateWithoutCampaignInput, legalitas_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: legalitas_usahaCreateOrConnectWithoutCampaignInput
    connect?: legalitas_usahaWhereUniqueInput
  }

  export type pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput = {
    create?: XOR<pesan_campaignCreateWithoutCampaignInput, pesan_campaignUncheckedCreateWithoutCampaignInput> | pesan_campaignCreateWithoutCampaignInput[] | pesan_campaignUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: pesan_campaignCreateOrConnectWithoutCampaignInput | pesan_campaignCreateOrConnectWithoutCampaignInput[]
    createMany?: pesan_campaignCreateManyCampaignInputEnvelope
    connect?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
  }

  export type social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput = {
    create?: XOR<social_media_usahaCreateWithoutCampaignInput, social_media_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: social_media_usahaCreateOrConnectWithoutCampaignInput
    connect?: social_media_usahaWhereUniqueInput
  }

  export type team_campaignUncheckedCreateNestedManyWithoutCampaignInput = {
    create?: XOR<team_campaignCreateWithoutCampaignInput, team_campaignUncheckedCreateWithoutCampaignInput> | team_campaignCreateWithoutCampaignInput[] | team_campaignUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: team_campaignCreateOrConnectWithoutCampaignInput | team_campaignCreateOrConnectWithoutCampaignInput[]
    createMany?: team_campaignCreateManyCampaignInputEnvelope
    connect?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
  }

  export type transactionUncheckedCreateNestedManyWithoutCampaignInput = {
    create?: XOR<transactionCreateWithoutCampaignInput, transactionUncheckedCreateWithoutCampaignInput> | transactionCreateWithoutCampaignInput[] | transactionUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: transactionCreateOrConnectWithoutCampaignInput | transactionCreateOrConnectWithoutCampaignInput[]
    createMany?: transactionCreateManyCampaignInputEnvelope
    connect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Buffer | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableEnumtipe_usaha_enumFieldUpdateOperationsInput = {
    set?: $Enums.tipe_usaha_enum | null
  }

  export type NullableEnumjenis_usaha_enumFieldUpdateOperationsInput = {
    set?: $Enums.jenis_usaha_enum | null
  }

  export type alamat_usahaUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<alamat_usahaCreateWithoutCampaignInput, alamat_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: alamat_usahaCreateOrConnectWithoutCampaignInput
    upsert?: alamat_usahaUpsertWithoutCampaignInput
    disconnect?: alamat_usahaWhereInput | boolean
    delete?: alamat_usahaWhereInput | boolean
    connect?: alamat_usahaWhereUniqueInput
    update?: XOR<XOR<alamat_usahaUpdateToOneWithWhereWithoutCampaignInput, alamat_usahaUpdateWithoutCampaignInput>, alamat_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type userUpdateOneRequiredWithoutCampaignNestedInput = {
    create?: XOR<userCreateWithoutCampaignInput, userUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: userCreateOrConnectWithoutCampaignInput
    upsert?: userUpsertWithoutCampaignInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCampaignInput, userUpdateWithoutCampaignInput>, userUncheckedUpdateWithoutCampaignInput>
  }

  export type campaign_updateUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<campaign_updateCreateWithoutCampaignInput, campaign_updateUncheckedCreateWithoutCampaignInput> | campaign_updateCreateWithoutCampaignInput[] | campaign_updateUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: campaign_updateCreateOrConnectWithoutCampaignInput | campaign_updateCreateOrConnectWithoutCampaignInput[]
    upsert?: campaign_updateUpsertWithWhereUniqueWithoutCampaignInput | campaign_updateUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: campaign_updateCreateManyCampaignInputEnvelope
    set?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
    disconnect?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
    delete?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
    connect?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
    update?: campaign_updateUpdateWithWhereUniqueWithoutCampaignInput | campaign_updateUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: campaign_updateUpdateManyWithWhereWithoutCampaignInput | campaign_updateUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: campaign_updateScalarWhereInput | campaign_updateScalarWhereInput[]
  }

  export type contact_usahaUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<contact_usahaCreateWithoutCampaignInput, contact_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: contact_usahaCreateOrConnectWithoutCampaignInput
    upsert?: contact_usahaUpsertWithoutCampaignInput
    disconnect?: contact_usahaWhereInput | boolean
    delete?: contact_usahaWhereInput | boolean
    connect?: contact_usahaWhereUniqueInput
    update?: XOR<XOR<contact_usahaUpdateToOneWithWhereWithoutCampaignInput, contact_usahaUpdateWithoutCampaignInput>, contact_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type crowdfundingUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<crowdfundingCreateWithoutCampaignInput, crowdfundingUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutCampaignInput
    upsert?: crowdfundingUpsertWithoutCampaignInput
    disconnect?: crowdfundingWhereInput | boolean
    delete?: crowdfundingWhereInput | boolean
    connect?: crowdfundingWhereUniqueInput
    update?: XOR<XOR<crowdfundingUpdateToOneWithWhereWithoutCampaignInput, crowdfundingUpdateWithoutCampaignInput>, crowdfundingUncheckedUpdateWithoutCampaignInput>
  }

  export type discussionUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<discussionCreateWithoutCampaignInput, discussionUncheckedCreateWithoutCampaignInput> | discussionCreateWithoutCampaignInput[] | discussionUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: discussionCreateOrConnectWithoutCampaignInput | discussionCreateOrConnectWithoutCampaignInput[]
    upsert?: discussionUpsertWithWhereUniqueWithoutCampaignInput | discussionUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: discussionCreateManyCampaignInputEnvelope
    set?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    disconnect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    delete?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    connect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    update?: discussionUpdateWithWhereUniqueWithoutCampaignInput | discussionUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: discussionUpdateManyWithWhereWithoutCampaignInput | discussionUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: discussionScalarWhereInput | discussionScalarWhereInput[]
  }

  export type documentUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<documentCreateWithoutCampaignInput, documentUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: documentCreateOrConnectWithoutCampaignInput
    upsert?: documentUpsertWithoutCampaignInput
    disconnect?: documentWhereInput | boolean
    delete?: documentWhereInput | boolean
    connect?: documentWhereUniqueInput
    update?: XOR<XOR<documentUpdateToOneWithWhereWithoutCampaignInput, documentUpdateWithoutCampaignInput>, documentUncheckedUpdateWithoutCampaignInput>
  }

  export type investmentUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<investmentCreateWithoutCampaignInput, investmentUncheckedCreateWithoutCampaignInput> | investmentCreateWithoutCampaignInput[] | investmentUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: investmentCreateOrConnectWithoutCampaignInput | investmentCreateOrConnectWithoutCampaignInput[]
    upsert?: investmentUpsertWithWhereUniqueWithoutCampaignInput | investmentUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: investmentCreateManyCampaignInputEnvelope
    set?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    disconnect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    delete?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    connect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    update?: investmentUpdateWithWhereUniqueWithoutCampaignInput | investmentUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: investmentUpdateManyWithWhereWithoutCampaignInput | investmentUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: investmentScalarWhereInput | investmentScalarWhereInput[]
  }

  export type legalitas_usahaUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<legalitas_usahaCreateWithoutCampaignInput, legalitas_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: legalitas_usahaCreateOrConnectWithoutCampaignInput
    upsert?: legalitas_usahaUpsertWithoutCampaignInput
    disconnect?: legalitas_usahaWhereInput | boolean
    delete?: legalitas_usahaWhereInput | boolean
    connect?: legalitas_usahaWhereUniqueInput
    update?: XOR<XOR<legalitas_usahaUpdateToOneWithWhereWithoutCampaignInput, legalitas_usahaUpdateWithoutCampaignInput>, legalitas_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type pesan_campaignUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<pesan_campaignCreateWithoutCampaignInput, pesan_campaignUncheckedCreateWithoutCampaignInput> | pesan_campaignCreateWithoutCampaignInput[] | pesan_campaignUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: pesan_campaignCreateOrConnectWithoutCampaignInput | pesan_campaignCreateOrConnectWithoutCampaignInput[]
    upsert?: pesan_campaignUpsertWithWhereUniqueWithoutCampaignInput | pesan_campaignUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: pesan_campaignCreateManyCampaignInputEnvelope
    set?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
    disconnect?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
    delete?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
    connect?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
    update?: pesan_campaignUpdateWithWhereUniqueWithoutCampaignInput | pesan_campaignUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: pesan_campaignUpdateManyWithWhereWithoutCampaignInput | pesan_campaignUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: pesan_campaignScalarWhereInput | pesan_campaignScalarWhereInput[]
  }

  export type social_media_usahaUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<social_media_usahaCreateWithoutCampaignInput, social_media_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: social_media_usahaCreateOrConnectWithoutCampaignInput
    upsert?: social_media_usahaUpsertWithoutCampaignInput
    disconnect?: social_media_usahaWhereInput | boolean
    delete?: social_media_usahaWhereInput | boolean
    connect?: social_media_usahaWhereUniqueInput
    update?: XOR<XOR<social_media_usahaUpdateToOneWithWhereWithoutCampaignInput, social_media_usahaUpdateWithoutCampaignInput>, social_media_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type team_campaignUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<team_campaignCreateWithoutCampaignInput, team_campaignUncheckedCreateWithoutCampaignInput> | team_campaignCreateWithoutCampaignInput[] | team_campaignUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: team_campaignCreateOrConnectWithoutCampaignInput | team_campaignCreateOrConnectWithoutCampaignInput[]
    upsert?: team_campaignUpsertWithWhereUniqueWithoutCampaignInput | team_campaignUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: team_campaignCreateManyCampaignInputEnvelope
    set?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
    disconnect?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
    delete?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
    connect?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
    update?: team_campaignUpdateWithWhereUniqueWithoutCampaignInput | team_campaignUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: team_campaignUpdateManyWithWhereWithoutCampaignInput | team_campaignUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: team_campaignScalarWhereInput | team_campaignScalarWhereInput[]
  }

  export type transactionUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<transactionCreateWithoutCampaignInput, transactionUncheckedCreateWithoutCampaignInput> | transactionCreateWithoutCampaignInput[] | transactionUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: transactionCreateOrConnectWithoutCampaignInput | transactionCreateOrConnectWithoutCampaignInput[]
    upsert?: transactionUpsertWithWhereUniqueWithoutCampaignInput | transactionUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: transactionCreateManyCampaignInputEnvelope
    set?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    disconnect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    delete?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    connect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    update?: transactionUpdateWithWhereUniqueWithoutCampaignInput | transactionUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: transactionUpdateManyWithWhereWithoutCampaignInput | transactionUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: transactionScalarWhereInput | transactionScalarWhereInput[]
  }

  export type alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<alamat_usahaCreateWithoutCampaignInput, alamat_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: alamat_usahaCreateOrConnectWithoutCampaignInput
    upsert?: alamat_usahaUpsertWithoutCampaignInput
    disconnect?: alamat_usahaWhereInput | boolean
    delete?: alamat_usahaWhereInput | boolean
    connect?: alamat_usahaWhereUniqueInput
    update?: XOR<XOR<alamat_usahaUpdateToOneWithWhereWithoutCampaignInput, alamat_usahaUpdateWithoutCampaignInput>, alamat_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<campaign_updateCreateWithoutCampaignInput, campaign_updateUncheckedCreateWithoutCampaignInput> | campaign_updateCreateWithoutCampaignInput[] | campaign_updateUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: campaign_updateCreateOrConnectWithoutCampaignInput | campaign_updateCreateOrConnectWithoutCampaignInput[]
    upsert?: campaign_updateUpsertWithWhereUniqueWithoutCampaignInput | campaign_updateUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: campaign_updateCreateManyCampaignInputEnvelope
    set?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
    disconnect?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
    delete?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
    connect?: campaign_updateWhereUniqueInput | campaign_updateWhereUniqueInput[]
    update?: campaign_updateUpdateWithWhereUniqueWithoutCampaignInput | campaign_updateUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: campaign_updateUpdateManyWithWhereWithoutCampaignInput | campaign_updateUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: campaign_updateScalarWhereInput | campaign_updateScalarWhereInput[]
  }

  export type contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<contact_usahaCreateWithoutCampaignInput, contact_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: contact_usahaCreateOrConnectWithoutCampaignInput
    upsert?: contact_usahaUpsertWithoutCampaignInput
    disconnect?: contact_usahaWhereInput | boolean
    delete?: contact_usahaWhereInput | boolean
    connect?: contact_usahaWhereUniqueInput
    update?: XOR<XOR<contact_usahaUpdateToOneWithWhereWithoutCampaignInput, contact_usahaUpdateWithoutCampaignInput>, contact_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<crowdfundingCreateWithoutCampaignInput, crowdfundingUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutCampaignInput
    upsert?: crowdfundingUpsertWithoutCampaignInput
    disconnect?: crowdfundingWhereInput | boolean
    delete?: crowdfundingWhereInput | boolean
    connect?: crowdfundingWhereUniqueInput
    update?: XOR<XOR<crowdfundingUpdateToOneWithWhereWithoutCampaignInput, crowdfundingUpdateWithoutCampaignInput>, crowdfundingUncheckedUpdateWithoutCampaignInput>
  }

  export type discussionUncheckedUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<discussionCreateWithoutCampaignInput, discussionUncheckedCreateWithoutCampaignInput> | discussionCreateWithoutCampaignInput[] | discussionUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: discussionCreateOrConnectWithoutCampaignInput | discussionCreateOrConnectWithoutCampaignInput[]
    upsert?: discussionUpsertWithWhereUniqueWithoutCampaignInput | discussionUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: discussionCreateManyCampaignInputEnvelope
    set?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    disconnect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    delete?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    connect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    update?: discussionUpdateWithWhereUniqueWithoutCampaignInput | discussionUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: discussionUpdateManyWithWhereWithoutCampaignInput | discussionUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: discussionScalarWhereInput | discussionScalarWhereInput[]
  }

  export type documentUncheckedUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<documentCreateWithoutCampaignInput, documentUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: documentCreateOrConnectWithoutCampaignInput
    upsert?: documentUpsertWithoutCampaignInput
    disconnect?: documentWhereInput | boolean
    delete?: documentWhereInput | boolean
    connect?: documentWhereUniqueInput
    update?: XOR<XOR<documentUpdateToOneWithWhereWithoutCampaignInput, documentUpdateWithoutCampaignInput>, documentUncheckedUpdateWithoutCampaignInput>
  }

  export type investmentUncheckedUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<investmentCreateWithoutCampaignInput, investmentUncheckedCreateWithoutCampaignInput> | investmentCreateWithoutCampaignInput[] | investmentUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: investmentCreateOrConnectWithoutCampaignInput | investmentCreateOrConnectWithoutCampaignInput[]
    upsert?: investmentUpsertWithWhereUniqueWithoutCampaignInput | investmentUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: investmentCreateManyCampaignInputEnvelope
    set?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    disconnect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    delete?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    connect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    update?: investmentUpdateWithWhereUniqueWithoutCampaignInput | investmentUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: investmentUpdateManyWithWhereWithoutCampaignInput | investmentUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: investmentScalarWhereInput | investmentScalarWhereInput[]
  }

  export type legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<legalitas_usahaCreateWithoutCampaignInput, legalitas_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: legalitas_usahaCreateOrConnectWithoutCampaignInput
    upsert?: legalitas_usahaUpsertWithoutCampaignInput
    disconnect?: legalitas_usahaWhereInput | boolean
    delete?: legalitas_usahaWhereInput | boolean
    connect?: legalitas_usahaWhereUniqueInput
    update?: XOR<XOR<legalitas_usahaUpdateToOneWithWhereWithoutCampaignInput, legalitas_usahaUpdateWithoutCampaignInput>, legalitas_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<pesan_campaignCreateWithoutCampaignInput, pesan_campaignUncheckedCreateWithoutCampaignInput> | pesan_campaignCreateWithoutCampaignInput[] | pesan_campaignUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: pesan_campaignCreateOrConnectWithoutCampaignInput | pesan_campaignCreateOrConnectWithoutCampaignInput[]
    upsert?: pesan_campaignUpsertWithWhereUniqueWithoutCampaignInput | pesan_campaignUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: pesan_campaignCreateManyCampaignInputEnvelope
    set?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
    disconnect?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
    delete?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
    connect?: pesan_campaignWhereUniqueInput | pesan_campaignWhereUniqueInput[]
    update?: pesan_campaignUpdateWithWhereUniqueWithoutCampaignInput | pesan_campaignUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: pesan_campaignUpdateManyWithWhereWithoutCampaignInput | pesan_campaignUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: pesan_campaignScalarWhereInput | pesan_campaignScalarWhereInput[]
  }

  export type social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput = {
    create?: XOR<social_media_usahaCreateWithoutCampaignInput, social_media_usahaUncheckedCreateWithoutCampaignInput>
    connectOrCreate?: social_media_usahaCreateOrConnectWithoutCampaignInput
    upsert?: social_media_usahaUpsertWithoutCampaignInput
    disconnect?: social_media_usahaWhereInput | boolean
    delete?: social_media_usahaWhereInput | boolean
    connect?: social_media_usahaWhereUniqueInput
    update?: XOR<XOR<social_media_usahaUpdateToOneWithWhereWithoutCampaignInput, social_media_usahaUpdateWithoutCampaignInput>, social_media_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type team_campaignUncheckedUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<team_campaignCreateWithoutCampaignInput, team_campaignUncheckedCreateWithoutCampaignInput> | team_campaignCreateWithoutCampaignInput[] | team_campaignUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: team_campaignCreateOrConnectWithoutCampaignInput | team_campaignCreateOrConnectWithoutCampaignInput[]
    upsert?: team_campaignUpsertWithWhereUniqueWithoutCampaignInput | team_campaignUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: team_campaignCreateManyCampaignInputEnvelope
    set?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
    disconnect?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
    delete?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
    connect?: team_campaignWhereUniqueInput | team_campaignWhereUniqueInput[]
    update?: team_campaignUpdateWithWhereUniqueWithoutCampaignInput | team_campaignUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: team_campaignUpdateManyWithWhereWithoutCampaignInput | team_campaignUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: team_campaignScalarWhereInput | team_campaignScalarWhereInput[]
  }

  export type transactionUncheckedUpdateManyWithoutCampaignNestedInput = {
    create?: XOR<transactionCreateWithoutCampaignInput, transactionUncheckedCreateWithoutCampaignInput> | transactionCreateWithoutCampaignInput[] | transactionUncheckedCreateWithoutCampaignInput[]
    connectOrCreate?: transactionCreateOrConnectWithoutCampaignInput | transactionCreateOrConnectWithoutCampaignInput[]
    upsert?: transactionUpsertWithWhereUniqueWithoutCampaignInput | transactionUpsertWithWhereUniqueWithoutCampaignInput[]
    createMany?: transactionCreateManyCampaignInputEnvelope
    set?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    disconnect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    delete?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    connect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    update?: transactionUpdateWithWhereUniqueWithoutCampaignInput | transactionUpdateWithWhereUniqueWithoutCampaignInput[]
    updateMany?: transactionUpdateManyWithWhereWithoutCampaignInput | transactionUpdateManyWithWhereWithoutCampaignInput[]
    deleteMany?: transactionScalarWhereInput | transactionScalarWhereInput[]
  }

  export type campaignCreateNestedOneWithoutCampaign_updateInput = {
    create?: XOR<campaignCreateWithoutCampaign_updateInput, campaignUncheckedCreateWithoutCampaign_updateInput>
    connectOrCreate?: campaignCreateOrConnectWithoutCampaign_updateInput
    connect?: campaignWhereUniqueInput
  }

  export type campaignUpdateOneRequiredWithoutCampaign_updateNestedInput = {
    create?: XOR<campaignCreateWithoutCampaign_updateInput, campaignUncheckedCreateWithoutCampaign_updateInput>
    connectOrCreate?: campaignCreateOrConnectWithoutCampaign_updateInput
    upsert?: campaignUpsertWithoutCampaign_updateInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutCampaign_updateInput, campaignUpdateWithoutCampaign_updateInput>, campaignUncheckedUpdateWithoutCampaign_updateInput>
  }

  export type community_membershipCreateNestedOneWithoutCommunityInput = {
    create?: XOR<community_membershipCreateWithoutCommunityInput, community_membershipUncheckedCreateWithoutCommunityInput>
    connectOrCreate?: community_membershipCreateOrConnectWithoutCommunityInput
    connect?: community_membershipWhereUniqueInput
  }

  export type community_proposalCreateNestedManyWithoutCommunityInput = {
    create?: XOR<community_proposalCreateWithoutCommunityInput, community_proposalUncheckedCreateWithoutCommunityInput> | community_proposalCreateWithoutCommunityInput[] | community_proposalUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_proposalCreateOrConnectWithoutCommunityInput | community_proposalCreateOrConnectWithoutCommunityInput[]
    createMany?: community_proposalCreateManyCommunityInputEnvelope
    connect?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
  }

  export type community_membershipUncheckedCreateNestedOneWithoutCommunityInput = {
    create?: XOR<community_membershipCreateWithoutCommunityInput, community_membershipUncheckedCreateWithoutCommunityInput>
    connectOrCreate?: community_membershipCreateOrConnectWithoutCommunityInput
    connect?: community_membershipWhereUniqueInput
  }

  export type community_proposalUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<community_proposalCreateWithoutCommunityInput, community_proposalUncheckedCreateWithoutCommunityInput> | community_proposalCreateWithoutCommunityInput[] | community_proposalUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_proposalCreateOrConnectWithoutCommunityInput | community_proposalCreateOrConnectWithoutCommunityInput[]
    createMany?: community_proposalCreateManyCommunityInputEnvelope
    connect?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
  }

  export type community_membershipUpdateOneWithoutCommunityNestedInput = {
    create?: XOR<community_membershipCreateWithoutCommunityInput, community_membershipUncheckedCreateWithoutCommunityInput>
    connectOrCreate?: community_membershipCreateOrConnectWithoutCommunityInput
    upsert?: community_membershipUpsertWithoutCommunityInput
    disconnect?: community_membershipWhereInput | boolean
    delete?: community_membershipWhereInput | boolean
    connect?: community_membershipWhereUniqueInput
    update?: XOR<XOR<community_membershipUpdateToOneWithWhereWithoutCommunityInput, community_membershipUpdateWithoutCommunityInput>, community_membershipUncheckedUpdateWithoutCommunityInput>
  }

  export type community_proposalUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<community_proposalCreateWithoutCommunityInput, community_proposalUncheckedCreateWithoutCommunityInput> | community_proposalCreateWithoutCommunityInput[] | community_proposalUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_proposalCreateOrConnectWithoutCommunityInput | community_proposalCreateOrConnectWithoutCommunityInput[]
    upsert?: community_proposalUpsertWithWhereUniqueWithoutCommunityInput | community_proposalUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: community_proposalCreateManyCommunityInputEnvelope
    set?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
    disconnect?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
    delete?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
    connect?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
    update?: community_proposalUpdateWithWhereUniqueWithoutCommunityInput | community_proposalUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: community_proposalUpdateManyWithWhereWithoutCommunityInput | community_proposalUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: community_proposalScalarWhereInput | community_proposalScalarWhereInput[]
  }

  export type community_membershipUncheckedUpdateOneWithoutCommunityNestedInput = {
    create?: XOR<community_membershipCreateWithoutCommunityInput, community_membershipUncheckedCreateWithoutCommunityInput>
    connectOrCreate?: community_membershipCreateOrConnectWithoutCommunityInput
    upsert?: community_membershipUpsertWithoutCommunityInput
    disconnect?: community_membershipWhereInput | boolean
    delete?: community_membershipWhereInput | boolean
    connect?: community_membershipWhereUniqueInput
    update?: XOR<XOR<community_membershipUpdateToOneWithWhereWithoutCommunityInput, community_membershipUpdateWithoutCommunityInput>, community_membershipUncheckedUpdateWithoutCommunityInput>
  }

  export type community_proposalUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<community_proposalCreateWithoutCommunityInput, community_proposalUncheckedCreateWithoutCommunityInput> | community_proposalCreateWithoutCommunityInput[] | community_proposalUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_proposalCreateOrConnectWithoutCommunityInput | community_proposalCreateOrConnectWithoutCommunityInput[]
    upsert?: community_proposalUpsertWithWhereUniqueWithoutCommunityInput | community_proposalUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: community_proposalCreateManyCommunityInputEnvelope
    set?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
    disconnect?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
    delete?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
    connect?: community_proposalWhereUniqueInput | community_proposalWhereUniqueInput[]
    update?: community_proposalUpdateWithWhereUniqueWithoutCommunityInput | community_proposalUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: community_proposalUpdateManyWithWhereWithoutCommunityInput | community_proposalUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: community_proposalScalarWhereInput | community_proposalScalarWhereInput[]
  }

  export type community_proposalCreateNestedOneWithoutCommunity_chatInput = {
    create?: XOR<community_proposalCreateWithoutCommunity_chatInput, community_proposalUncheckedCreateWithoutCommunity_chatInput>
    connectOrCreate?: community_proposalCreateOrConnectWithoutCommunity_chatInput
    connect?: community_proposalWhereUniqueInput
  }

  export type userCreateNestedOneWithoutCommunity_chatInput = {
    create?: XOR<userCreateWithoutCommunity_chatInput, userUncheckedCreateWithoutCommunity_chatInput>
    connectOrCreate?: userCreateOrConnectWithoutCommunity_chatInput
    connect?: userWhereUniqueInput
  }

  export type community_proposalUpdateOneRequiredWithoutCommunity_chatNestedInput = {
    create?: XOR<community_proposalCreateWithoutCommunity_chatInput, community_proposalUncheckedCreateWithoutCommunity_chatInput>
    connectOrCreate?: community_proposalCreateOrConnectWithoutCommunity_chatInput
    upsert?: community_proposalUpsertWithoutCommunity_chatInput
    connect?: community_proposalWhereUniqueInput
    update?: XOR<XOR<community_proposalUpdateToOneWithWhereWithoutCommunity_chatInput, community_proposalUpdateWithoutCommunity_chatInput>, community_proposalUncheckedUpdateWithoutCommunity_chatInput>
  }

  export type userUpdateOneRequiredWithoutCommunity_chatNestedInput = {
    create?: XOR<userCreateWithoutCommunity_chatInput, userUncheckedCreateWithoutCommunity_chatInput>
    connectOrCreate?: userCreateOrConnectWithoutCommunity_chatInput
    upsert?: userUpsertWithoutCommunity_chatInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCommunity_chatInput, userUpdateWithoutCommunity_chatInput>, userUncheckedUpdateWithoutCommunity_chatInput>
  }

  export type communityCreateNestedOneWithoutCommunity_membershipInput = {
    create?: XOR<communityCreateWithoutCommunity_membershipInput, communityUncheckedCreateWithoutCommunity_membershipInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_membershipInput
    connect?: communityWhereUniqueInput
  }

  export type userCreateNestedOneWithoutCommunity_membershipInput = {
    create?: XOR<userCreateWithoutCommunity_membershipInput, userUncheckedCreateWithoutCommunity_membershipInput>
    connectOrCreate?: userCreateOrConnectWithoutCommunity_membershipInput
    connect?: userWhereUniqueInput
  }

  export type communityUpdateOneRequiredWithoutCommunity_membershipNestedInput = {
    create?: XOR<communityCreateWithoutCommunity_membershipInput, communityUncheckedCreateWithoutCommunity_membershipInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_membershipInput
    upsert?: communityUpsertWithoutCommunity_membershipInput
    connect?: communityWhereUniqueInput
    update?: XOR<XOR<communityUpdateToOneWithWhereWithoutCommunity_membershipInput, communityUpdateWithoutCommunity_membershipInput>, communityUncheckedUpdateWithoutCommunity_membershipInput>
  }

  export type userUpdateOneRequiredWithoutCommunity_membershipNestedInput = {
    create?: XOR<userCreateWithoutCommunity_membershipInput, userUncheckedCreateWithoutCommunity_membershipInput>
    connectOrCreate?: userCreateOrConnectWithoutCommunity_membershipInput
    upsert?: userUpsertWithoutCommunity_membershipInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCommunity_membershipInput, userUpdateWithoutCommunity_membershipInput>, userUncheckedUpdateWithoutCommunity_membershipInput>
  }

  export type community_chatCreateNestedManyWithoutCommunity_proposalInput = {
    create?: XOR<community_chatCreateWithoutCommunity_proposalInput, community_chatUncheckedCreateWithoutCommunity_proposalInput> | community_chatCreateWithoutCommunity_proposalInput[] | community_chatUncheckedCreateWithoutCommunity_proposalInput[]
    connectOrCreate?: community_chatCreateOrConnectWithoutCommunity_proposalInput | community_chatCreateOrConnectWithoutCommunity_proposalInput[]
    createMany?: community_chatCreateManyCommunity_proposalInputEnvelope
    connect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
  }

  export type communityCreateNestedOneWithoutCommunity_proposalInput = {
    create?: XOR<communityCreateWithoutCommunity_proposalInput, communityUncheckedCreateWithoutCommunity_proposalInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_proposalInput
    connect?: communityWhereUniqueInput
  }

  export type user_votedCreateNestedManyWithoutCommunity_proposalInput = {
    create?: XOR<user_votedCreateWithoutCommunity_proposalInput, user_votedUncheckedCreateWithoutCommunity_proposalInput> | user_votedCreateWithoutCommunity_proposalInput[] | user_votedUncheckedCreateWithoutCommunity_proposalInput[]
    connectOrCreate?: user_votedCreateOrConnectWithoutCommunity_proposalInput | user_votedCreateOrConnectWithoutCommunity_proposalInput[]
    createMany?: user_votedCreateManyCommunity_proposalInputEnvelope
    connect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
  }

  export type community_chatUncheckedCreateNestedManyWithoutCommunity_proposalInput = {
    create?: XOR<community_chatCreateWithoutCommunity_proposalInput, community_chatUncheckedCreateWithoutCommunity_proposalInput> | community_chatCreateWithoutCommunity_proposalInput[] | community_chatUncheckedCreateWithoutCommunity_proposalInput[]
    connectOrCreate?: community_chatCreateOrConnectWithoutCommunity_proposalInput | community_chatCreateOrConnectWithoutCommunity_proposalInput[]
    createMany?: community_chatCreateManyCommunity_proposalInputEnvelope
    connect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
  }

  export type user_votedUncheckedCreateNestedManyWithoutCommunity_proposalInput = {
    create?: XOR<user_votedCreateWithoutCommunity_proposalInput, user_votedUncheckedCreateWithoutCommunity_proposalInput> | user_votedCreateWithoutCommunity_proposalInput[] | user_votedUncheckedCreateWithoutCommunity_proposalInput[]
    connectOrCreate?: user_votedCreateOrConnectWithoutCommunity_proposalInput | user_votedCreateOrConnectWithoutCommunity_proposalInput[]
    createMany?: user_votedCreateManyCommunity_proposalInputEnvelope
    connect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type community_chatUpdateManyWithoutCommunity_proposalNestedInput = {
    create?: XOR<community_chatCreateWithoutCommunity_proposalInput, community_chatUncheckedCreateWithoutCommunity_proposalInput> | community_chatCreateWithoutCommunity_proposalInput[] | community_chatUncheckedCreateWithoutCommunity_proposalInput[]
    connectOrCreate?: community_chatCreateOrConnectWithoutCommunity_proposalInput | community_chatCreateOrConnectWithoutCommunity_proposalInput[]
    upsert?: community_chatUpsertWithWhereUniqueWithoutCommunity_proposalInput | community_chatUpsertWithWhereUniqueWithoutCommunity_proposalInput[]
    createMany?: community_chatCreateManyCommunity_proposalInputEnvelope
    set?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    disconnect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    delete?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    connect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    update?: community_chatUpdateWithWhereUniqueWithoutCommunity_proposalInput | community_chatUpdateWithWhereUniqueWithoutCommunity_proposalInput[]
    updateMany?: community_chatUpdateManyWithWhereWithoutCommunity_proposalInput | community_chatUpdateManyWithWhereWithoutCommunity_proposalInput[]
    deleteMany?: community_chatScalarWhereInput | community_chatScalarWhereInput[]
  }

  export type communityUpdateOneRequiredWithoutCommunity_proposalNestedInput = {
    create?: XOR<communityCreateWithoutCommunity_proposalInput, communityUncheckedCreateWithoutCommunity_proposalInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_proposalInput
    upsert?: communityUpsertWithoutCommunity_proposalInput
    connect?: communityWhereUniqueInput
    update?: XOR<XOR<communityUpdateToOneWithWhereWithoutCommunity_proposalInput, communityUpdateWithoutCommunity_proposalInput>, communityUncheckedUpdateWithoutCommunity_proposalInput>
  }

  export type user_votedUpdateManyWithoutCommunity_proposalNestedInput = {
    create?: XOR<user_votedCreateWithoutCommunity_proposalInput, user_votedUncheckedCreateWithoutCommunity_proposalInput> | user_votedCreateWithoutCommunity_proposalInput[] | user_votedUncheckedCreateWithoutCommunity_proposalInput[]
    connectOrCreate?: user_votedCreateOrConnectWithoutCommunity_proposalInput | user_votedCreateOrConnectWithoutCommunity_proposalInput[]
    upsert?: user_votedUpsertWithWhereUniqueWithoutCommunity_proposalInput | user_votedUpsertWithWhereUniqueWithoutCommunity_proposalInput[]
    createMany?: user_votedCreateManyCommunity_proposalInputEnvelope
    set?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    disconnect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    delete?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    connect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    update?: user_votedUpdateWithWhereUniqueWithoutCommunity_proposalInput | user_votedUpdateWithWhereUniqueWithoutCommunity_proposalInput[]
    updateMany?: user_votedUpdateManyWithWhereWithoutCommunity_proposalInput | user_votedUpdateManyWithWhereWithoutCommunity_proposalInput[]
    deleteMany?: user_votedScalarWhereInput | user_votedScalarWhereInput[]
  }

  export type community_chatUncheckedUpdateManyWithoutCommunity_proposalNestedInput = {
    create?: XOR<community_chatCreateWithoutCommunity_proposalInput, community_chatUncheckedCreateWithoutCommunity_proposalInput> | community_chatCreateWithoutCommunity_proposalInput[] | community_chatUncheckedCreateWithoutCommunity_proposalInput[]
    connectOrCreate?: community_chatCreateOrConnectWithoutCommunity_proposalInput | community_chatCreateOrConnectWithoutCommunity_proposalInput[]
    upsert?: community_chatUpsertWithWhereUniqueWithoutCommunity_proposalInput | community_chatUpsertWithWhereUniqueWithoutCommunity_proposalInput[]
    createMany?: community_chatCreateManyCommunity_proposalInputEnvelope
    set?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    disconnect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    delete?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    connect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    update?: community_chatUpdateWithWhereUniqueWithoutCommunity_proposalInput | community_chatUpdateWithWhereUniqueWithoutCommunity_proposalInput[]
    updateMany?: community_chatUpdateManyWithWhereWithoutCommunity_proposalInput | community_chatUpdateManyWithWhereWithoutCommunity_proposalInput[]
    deleteMany?: community_chatScalarWhereInput | community_chatScalarWhereInput[]
  }

  export type user_votedUncheckedUpdateManyWithoutCommunity_proposalNestedInput = {
    create?: XOR<user_votedCreateWithoutCommunity_proposalInput, user_votedUncheckedCreateWithoutCommunity_proposalInput> | user_votedCreateWithoutCommunity_proposalInput[] | user_votedUncheckedCreateWithoutCommunity_proposalInput[]
    connectOrCreate?: user_votedCreateOrConnectWithoutCommunity_proposalInput | user_votedCreateOrConnectWithoutCommunity_proposalInput[]
    upsert?: user_votedUpsertWithWhereUniqueWithoutCommunity_proposalInput | user_votedUpsertWithWhereUniqueWithoutCommunity_proposalInput[]
    createMany?: user_votedCreateManyCommunity_proposalInputEnvelope
    set?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    disconnect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    delete?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    connect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    update?: user_votedUpdateWithWhereUniqueWithoutCommunity_proposalInput | user_votedUpdateWithWhereUniqueWithoutCommunity_proposalInput[]
    updateMany?: user_votedUpdateManyWithWhereWithoutCommunity_proposalInput | user_votedUpdateManyWithWhereWithoutCommunity_proposalInput[]
    deleteMany?: user_votedScalarWhereInput | user_votedScalarWhereInput[]
  }

  export type campaignCreateNestedOneWithoutContact_usahaInput = {
    create?: XOR<campaignCreateWithoutContact_usahaInput, campaignUncheckedCreateWithoutContact_usahaInput>
    connectOrCreate?: campaignCreateOrConnectWithoutContact_usahaInput
    connect?: campaignWhereUniqueInput
  }

  export type campaignUpdateOneRequiredWithoutContact_usahaNestedInput = {
    create?: XOR<campaignCreateWithoutContact_usahaInput, campaignUncheckedCreateWithoutContact_usahaInput>
    connectOrCreate?: campaignCreateOrConnectWithoutContact_usahaInput
    upsert?: campaignUpsertWithoutContact_usahaInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutContact_usahaInput, campaignUpdateWithoutContact_usahaInput>, campaignUncheckedUpdateWithoutContact_usahaInput>
  }

  export type campaignCreateNestedOneWithoutCrowdfundingInput = {
    create?: XOR<campaignCreateWithoutCrowdfundingInput, campaignUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: campaignCreateOrConnectWithoutCrowdfundingInput
    connect?: campaignWhereUniqueInput
  }

  export type data_rekeningCreateNestedOneWithoutCrowdfundingInput = {
    create?: XOR<data_rekeningCreateWithoutCrowdfundingInput, data_rekeningUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: data_rekeningCreateOrConnectWithoutCrowdfundingInput
    connect?: data_rekeningWhereUniqueInput
  }

  export type highlight_productCreateNestedOneWithoutCrowdfundingInput = {
    create?: XOR<highlight_productCreateWithoutCrowdfundingInput, highlight_productUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: highlight_productCreateOrConnectWithoutCrowdfundingInput
    connect?: highlight_productWhereUniqueInput
  }

  export type product_informationCreateNestedOneWithoutCrowdfundingInput = {
    create?: XOR<product_informationCreateWithoutCrowdfundingInput, product_informationUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: product_informationCreateOrConnectWithoutCrowdfundingInput
    connect?: product_informationWhereUniqueInput
  }

  export type data_rekeningUncheckedCreateNestedOneWithoutCrowdfundingInput = {
    create?: XOR<data_rekeningCreateWithoutCrowdfundingInput, data_rekeningUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: data_rekeningCreateOrConnectWithoutCrowdfundingInput
    connect?: data_rekeningWhereUniqueInput
  }

  export type highlight_productUncheckedCreateNestedOneWithoutCrowdfundingInput = {
    create?: XOR<highlight_productCreateWithoutCrowdfundingInput, highlight_productUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: highlight_productCreateOrConnectWithoutCrowdfundingInput
    connect?: highlight_productWhereUniqueInput
  }

  export type product_informationUncheckedCreateNestedOneWithoutCrowdfundingInput = {
    create?: XOR<product_informationCreateWithoutCrowdfundingInput, product_informationUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: product_informationCreateOrConnectWithoutCrowdfundingInput
    connect?: product_informationWhereUniqueInput
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type campaignUpdateOneRequiredWithoutCrowdfundingNestedInput = {
    create?: XOR<campaignCreateWithoutCrowdfundingInput, campaignUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: campaignCreateOrConnectWithoutCrowdfundingInput
    upsert?: campaignUpsertWithoutCrowdfundingInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutCrowdfundingInput, campaignUpdateWithoutCrowdfundingInput>, campaignUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type data_rekeningUpdateOneWithoutCrowdfundingNestedInput = {
    create?: XOR<data_rekeningCreateWithoutCrowdfundingInput, data_rekeningUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: data_rekeningCreateOrConnectWithoutCrowdfundingInput
    upsert?: data_rekeningUpsertWithoutCrowdfundingInput
    disconnect?: data_rekeningWhereInput | boolean
    delete?: data_rekeningWhereInput | boolean
    connect?: data_rekeningWhereUniqueInput
    update?: XOR<XOR<data_rekeningUpdateToOneWithWhereWithoutCrowdfundingInput, data_rekeningUpdateWithoutCrowdfundingInput>, data_rekeningUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type highlight_productUpdateOneWithoutCrowdfundingNestedInput = {
    create?: XOR<highlight_productCreateWithoutCrowdfundingInput, highlight_productUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: highlight_productCreateOrConnectWithoutCrowdfundingInput
    upsert?: highlight_productUpsertWithoutCrowdfundingInput
    disconnect?: highlight_productWhereInput | boolean
    delete?: highlight_productWhereInput | boolean
    connect?: highlight_productWhereUniqueInput
    update?: XOR<XOR<highlight_productUpdateToOneWithWhereWithoutCrowdfundingInput, highlight_productUpdateWithoutCrowdfundingInput>, highlight_productUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type product_informationUpdateOneWithoutCrowdfundingNestedInput = {
    create?: XOR<product_informationCreateWithoutCrowdfundingInput, product_informationUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: product_informationCreateOrConnectWithoutCrowdfundingInput
    upsert?: product_informationUpsertWithoutCrowdfundingInput
    disconnect?: product_informationWhereInput | boolean
    delete?: product_informationWhereInput | boolean
    connect?: product_informationWhereUniqueInput
    update?: XOR<XOR<product_informationUpdateToOneWithWhereWithoutCrowdfundingInput, product_informationUpdateWithoutCrowdfundingInput>, product_informationUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type data_rekeningUncheckedUpdateOneWithoutCrowdfundingNestedInput = {
    create?: XOR<data_rekeningCreateWithoutCrowdfundingInput, data_rekeningUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: data_rekeningCreateOrConnectWithoutCrowdfundingInput
    upsert?: data_rekeningUpsertWithoutCrowdfundingInput
    disconnect?: data_rekeningWhereInput | boolean
    delete?: data_rekeningWhereInput | boolean
    connect?: data_rekeningWhereUniqueInput
    update?: XOR<XOR<data_rekeningUpdateToOneWithWhereWithoutCrowdfundingInput, data_rekeningUpdateWithoutCrowdfundingInput>, data_rekeningUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type highlight_productUncheckedUpdateOneWithoutCrowdfundingNestedInput = {
    create?: XOR<highlight_productCreateWithoutCrowdfundingInput, highlight_productUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: highlight_productCreateOrConnectWithoutCrowdfundingInput
    upsert?: highlight_productUpsertWithoutCrowdfundingInput
    disconnect?: highlight_productWhereInput | boolean
    delete?: highlight_productWhereInput | boolean
    connect?: highlight_productWhereUniqueInput
    update?: XOR<XOR<highlight_productUpdateToOneWithWhereWithoutCrowdfundingInput, highlight_productUpdateWithoutCrowdfundingInput>, highlight_productUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type product_informationUncheckedUpdateOneWithoutCrowdfundingNestedInput = {
    create?: XOR<product_informationCreateWithoutCrowdfundingInput, product_informationUncheckedCreateWithoutCrowdfundingInput>
    connectOrCreate?: product_informationCreateOrConnectWithoutCrowdfundingInput
    upsert?: product_informationUpsertWithoutCrowdfundingInput
    disconnect?: product_informationWhereInput | boolean
    delete?: product_informationWhereInput | boolean
    connect?: product_informationWhereUniqueInput
    update?: XOR<XOR<product_informationUpdateToOneWithWhereWithoutCrowdfundingInput, product_informationUpdateWithoutCrowdfundingInput>, product_informationUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type crowdfundingCreateNestedOneWithoutData_rekeningInput = {
    create?: XOR<crowdfundingCreateWithoutData_rekeningInput, crowdfundingUncheckedCreateWithoutData_rekeningInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutData_rekeningInput
    connect?: crowdfundingWhereUniqueInput
  }

  export type crowdfundingUpdateOneRequiredWithoutData_rekeningNestedInput = {
    create?: XOR<crowdfundingCreateWithoutData_rekeningInput, crowdfundingUncheckedCreateWithoutData_rekeningInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutData_rekeningInput
    upsert?: crowdfundingUpsertWithoutData_rekeningInput
    connect?: crowdfundingWhereUniqueInput
    update?: XOR<XOR<crowdfundingUpdateToOneWithWhereWithoutData_rekeningInput, crowdfundingUpdateWithoutData_rekeningInput>, crowdfundingUncheckedUpdateWithoutData_rekeningInput>
  }

  export type campaignCreateNestedOneWithoutDiscussionInput = {
    create?: XOR<campaignCreateWithoutDiscussionInput, campaignUncheckedCreateWithoutDiscussionInput>
    connectOrCreate?: campaignCreateOrConnectWithoutDiscussionInput
    connect?: campaignWhereUniqueInput
  }

  export type userCreateNestedOneWithoutDiscussionInput = {
    create?: XOR<userCreateWithoutDiscussionInput, userUncheckedCreateWithoutDiscussionInput>
    connectOrCreate?: userCreateOrConnectWithoutDiscussionInput
    connect?: userWhereUniqueInput
  }

  export type replies_discussionCreateNestedManyWithoutDiscussionInput = {
    create?: XOR<replies_discussionCreateWithoutDiscussionInput, replies_discussionUncheckedCreateWithoutDiscussionInput> | replies_discussionCreateWithoutDiscussionInput[] | replies_discussionUncheckedCreateWithoutDiscussionInput[]
    connectOrCreate?: replies_discussionCreateOrConnectWithoutDiscussionInput | replies_discussionCreateOrConnectWithoutDiscussionInput[]
    createMany?: replies_discussionCreateManyDiscussionInputEnvelope
    connect?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
  }

  export type replies_discussionUncheckedCreateNestedManyWithoutDiscussionInput = {
    create?: XOR<replies_discussionCreateWithoutDiscussionInput, replies_discussionUncheckedCreateWithoutDiscussionInput> | replies_discussionCreateWithoutDiscussionInput[] | replies_discussionUncheckedCreateWithoutDiscussionInput[]
    connectOrCreate?: replies_discussionCreateOrConnectWithoutDiscussionInput | replies_discussionCreateOrConnectWithoutDiscussionInput[]
    createMany?: replies_discussionCreateManyDiscussionInputEnvelope
    connect?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type campaignUpdateOneRequiredWithoutDiscussionNestedInput = {
    create?: XOR<campaignCreateWithoutDiscussionInput, campaignUncheckedCreateWithoutDiscussionInput>
    connectOrCreate?: campaignCreateOrConnectWithoutDiscussionInput
    upsert?: campaignUpsertWithoutDiscussionInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutDiscussionInput, campaignUpdateWithoutDiscussionInput>, campaignUncheckedUpdateWithoutDiscussionInput>
  }

  export type userUpdateOneRequiredWithoutDiscussionNestedInput = {
    create?: XOR<userCreateWithoutDiscussionInput, userUncheckedCreateWithoutDiscussionInput>
    connectOrCreate?: userCreateOrConnectWithoutDiscussionInput
    upsert?: userUpsertWithoutDiscussionInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutDiscussionInput, userUpdateWithoutDiscussionInput>, userUncheckedUpdateWithoutDiscussionInput>
  }

  export type replies_discussionUpdateManyWithoutDiscussionNestedInput = {
    create?: XOR<replies_discussionCreateWithoutDiscussionInput, replies_discussionUncheckedCreateWithoutDiscussionInput> | replies_discussionCreateWithoutDiscussionInput[] | replies_discussionUncheckedCreateWithoutDiscussionInput[]
    connectOrCreate?: replies_discussionCreateOrConnectWithoutDiscussionInput | replies_discussionCreateOrConnectWithoutDiscussionInput[]
    upsert?: replies_discussionUpsertWithWhereUniqueWithoutDiscussionInput | replies_discussionUpsertWithWhereUniqueWithoutDiscussionInput[]
    createMany?: replies_discussionCreateManyDiscussionInputEnvelope
    set?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
    disconnect?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
    delete?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
    connect?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
    update?: replies_discussionUpdateWithWhereUniqueWithoutDiscussionInput | replies_discussionUpdateWithWhereUniqueWithoutDiscussionInput[]
    updateMany?: replies_discussionUpdateManyWithWhereWithoutDiscussionInput | replies_discussionUpdateManyWithWhereWithoutDiscussionInput[]
    deleteMany?: replies_discussionScalarWhereInput | replies_discussionScalarWhereInput[]
  }

  export type replies_discussionUncheckedUpdateManyWithoutDiscussionNestedInput = {
    create?: XOR<replies_discussionCreateWithoutDiscussionInput, replies_discussionUncheckedCreateWithoutDiscussionInput> | replies_discussionCreateWithoutDiscussionInput[] | replies_discussionUncheckedCreateWithoutDiscussionInput[]
    connectOrCreate?: replies_discussionCreateOrConnectWithoutDiscussionInput | replies_discussionCreateOrConnectWithoutDiscussionInput[]
    upsert?: replies_discussionUpsertWithWhereUniqueWithoutDiscussionInput | replies_discussionUpsertWithWhereUniqueWithoutDiscussionInput[]
    createMany?: replies_discussionCreateManyDiscussionInputEnvelope
    set?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
    disconnect?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
    delete?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
    connect?: replies_discussionWhereUniqueInput | replies_discussionWhereUniqueInput[]
    update?: replies_discussionUpdateWithWhereUniqueWithoutDiscussionInput | replies_discussionUpdateWithWhereUniqueWithoutDiscussionInput[]
    updateMany?: replies_discussionUpdateManyWithWhereWithoutDiscussionInput | replies_discussionUpdateManyWithWhereWithoutDiscussionInput[]
    deleteMany?: replies_discussionScalarWhereInput | replies_discussionScalarWhereInput[]
  }

  export type campaignCreateNestedOneWithoutDocumentInput = {
    create?: XOR<campaignCreateWithoutDocumentInput, campaignUncheckedCreateWithoutDocumentInput>
    connectOrCreate?: campaignCreateOrConnectWithoutDocumentInput
    connect?: campaignWhereUniqueInput
  }

  export type document_legalCreateNestedManyWithoutDocumentInput = {
    create?: XOR<document_legalCreateWithoutDocumentInput, document_legalUncheckedCreateWithoutDocumentInput> | document_legalCreateWithoutDocumentInput[] | document_legalUncheckedCreateWithoutDocumentInput[]
    connectOrCreate?: document_legalCreateOrConnectWithoutDocumentInput | document_legalCreateOrConnectWithoutDocumentInput[]
    createMany?: document_legalCreateManyDocumentInputEnvelope
    connect?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
  }

  export type document_proposalCreateNestedManyWithoutDocumentInput = {
    create?: XOR<document_proposalCreateWithoutDocumentInput, document_proposalUncheckedCreateWithoutDocumentInput> | document_proposalCreateWithoutDocumentInput[] | document_proposalUncheckedCreateWithoutDocumentInput[]
    connectOrCreate?: document_proposalCreateOrConnectWithoutDocumentInput | document_proposalCreateOrConnectWithoutDocumentInput[]
    createMany?: document_proposalCreateManyDocumentInputEnvelope
    connect?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
  }

  export type document_legalUncheckedCreateNestedManyWithoutDocumentInput = {
    create?: XOR<document_legalCreateWithoutDocumentInput, document_legalUncheckedCreateWithoutDocumentInput> | document_legalCreateWithoutDocumentInput[] | document_legalUncheckedCreateWithoutDocumentInput[]
    connectOrCreate?: document_legalCreateOrConnectWithoutDocumentInput | document_legalCreateOrConnectWithoutDocumentInput[]
    createMany?: document_legalCreateManyDocumentInputEnvelope
    connect?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
  }

  export type document_proposalUncheckedCreateNestedManyWithoutDocumentInput = {
    create?: XOR<document_proposalCreateWithoutDocumentInput, document_proposalUncheckedCreateWithoutDocumentInput> | document_proposalCreateWithoutDocumentInput[] | document_proposalUncheckedCreateWithoutDocumentInput[]
    connectOrCreate?: document_proposalCreateOrConnectWithoutDocumentInput | document_proposalCreateOrConnectWithoutDocumentInput[]
    createMany?: document_proposalCreateManyDocumentInputEnvelope
    connect?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
  }

  export type campaignUpdateOneRequiredWithoutDocumentNestedInput = {
    create?: XOR<campaignCreateWithoutDocumentInput, campaignUncheckedCreateWithoutDocumentInput>
    connectOrCreate?: campaignCreateOrConnectWithoutDocumentInput
    upsert?: campaignUpsertWithoutDocumentInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutDocumentInput, campaignUpdateWithoutDocumentInput>, campaignUncheckedUpdateWithoutDocumentInput>
  }

  export type document_legalUpdateManyWithoutDocumentNestedInput = {
    create?: XOR<document_legalCreateWithoutDocumentInput, document_legalUncheckedCreateWithoutDocumentInput> | document_legalCreateWithoutDocumentInput[] | document_legalUncheckedCreateWithoutDocumentInput[]
    connectOrCreate?: document_legalCreateOrConnectWithoutDocumentInput | document_legalCreateOrConnectWithoutDocumentInput[]
    upsert?: document_legalUpsertWithWhereUniqueWithoutDocumentInput | document_legalUpsertWithWhereUniqueWithoutDocumentInput[]
    createMany?: document_legalCreateManyDocumentInputEnvelope
    set?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
    disconnect?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
    delete?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
    connect?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
    update?: document_legalUpdateWithWhereUniqueWithoutDocumentInput | document_legalUpdateWithWhereUniqueWithoutDocumentInput[]
    updateMany?: document_legalUpdateManyWithWhereWithoutDocumentInput | document_legalUpdateManyWithWhereWithoutDocumentInput[]
    deleteMany?: document_legalScalarWhereInput | document_legalScalarWhereInput[]
  }

  export type document_proposalUpdateManyWithoutDocumentNestedInput = {
    create?: XOR<document_proposalCreateWithoutDocumentInput, document_proposalUncheckedCreateWithoutDocumentInput> | document_proposalCreateWithoutDocumentInput[] | document_proposalUncheckedCreateWithoutDocumentInput[]
    connectOrCreate?: document_proposalCreateOrConnectWithoutDocumentInput | document_proposalCreateOrConnectWithoutDocumentInput[]
    upsert?: document_proposalUpsertWithWhereUniqueWithoutDocumentInput | document_proposalUpsertWithWhereUniqueWithoutDocumentInput[]
    createMany?: document_proposalCreateManyDocumentInputEnvelope
    set?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
    disconnect?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
    delete?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
    connect?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
    update?: document_proposalUpdateWithWhereUniqueWithoutDocumentInput | document_proposalUpdateWithWhereUniqueWithoutDocumentInput[]
    updateMany?: document_proposalUpdateManyWithWhereWithoutDocumentInput | document_proposalUpdateManyWithWhereWithoutDocumentInput[]
    deleteMany?: document_proposalScalarWhereInput | document_proposalScalarWhereInput[]
  }

  export type document_legalUncheckedUpdateManyWithoutDocumentNestedInput = {
    create?: XOR<document_legalCreateWithoutDocumentInput, document_legalUncheckedCreateWithoutDocumentInput> | document_legalCreateWithoutDocumentInput[] | document_legalUncheckedCreateWithoutDocumentInput[]
    connectOrCreate?: document_legalCreateOrConnectWithoutDocumentInput | document_legalCreateOrConnectWithoutDocumentInput[]
    upsert?: document_legalUpsertWithWhereUniqueWithoutDocumentInput | document_legalUpsertWithWhereUniqueWithoutDocumentInput[]
    createMany?: document_legalCreateManyDocumentInputEnvelope
    set?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
    disconnect?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
    delete?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
    connect?: document_legalWhereUniqueInput | document_legalWhereUniqueInput[]
    update?: document_legalUpdateWithWhereUniqueWithoutDocumentInput | document_legalUpdateWithWhereUniqueWithoutDocumentInput[]
    updateMany?: document_legalUpdateManyWithWhereWithoutDocumentInput | document_legalUpdateManyWithWhereWithoutDocumentInput[]
    deleteMany?: document_legalScalarWhereInput | document_legalScalarWhereInput[]
  }

  export type document_proposalUncheckedUpdateManyWithoutDocumentNestedInput = {
    create?: XOR<document_proposalCreateWithoutDocumentInput, document_proposalUncheckedCreateWithoutDocumentInput> | document_proposalCreateWithoutDocumentInput[] | document_proposalUncheckedCreateWithoutDocumentInput[]
    connectOrCreate?: document_proposalCreateOrConnectWithoutDocumentInput | document_proposalCreateOrConnectWithoutDocumentInput[]
    upsert?: document_proposalUpsertWithWhereUniqueWithoutDocumentInput | document_proposalUpsertWithWhereUniqueWithoutDocumentInput[]
    createMany?: document_proposalCreateManyDocumentInputEnvelope
    set?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
    disconnect?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
    delete?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
    connect?: document_proposalWhereUniqueInput | document_proposalWhereUniqueInput[]
    update?: document_proposalUpdateWithWhereUniqueWithoutDocumentInput | document_proposalUpdateWithWhereUniqueWithoutDocumentInput[]
    updateMany?: document_proposalUpdateManyWithWhereWithoutDocumentInput | document_proposalUpdateManyWithWhereWithoutDocumentInput[]
    deleteMany?: document_proposalScalarWhereInput | document_proposalScalarWhereInput[]
  }

  export type documentCreateNestedOneWithoutDocument_legalInput = {
    create?: XOR<documentCreateWithoutDocument_legalInput, documentUncheckedCreateWithoutDocument_legalInput>
    connectOrCreate?: documentCreateOrConnectWithoutDocument_legalInput
    connect?: documentWhereUniqueInput
  }

  export type documentUpdateOneRequiredWithoutDocument_legalNestedInput = {
    create?: XOR<documentCreateWithoutDocument_legalInput, documentUncheckedCreateWithoutDocument_legalInput>
    connectOrCreate?: documentCreateOrConnectWithoutDocument_legalInput
    upsert?: documentUpsertWithoutDocument_legalInput
    connect?: documentWhereUniqueInput
    update?: XOR<XOR<documentUpdateToOneWithWhereWithoutDocument_legalInput, documentUpdateWithoutDocument_legalInput>, documentUncheckedUpdateWithoutDocument_legalInput>
  }

  export type documentCreateNestedOneWithoutDocument_proposalInput = {
    create?: XOR<documentCreateWithoutDocument_proposalInput, documentUncheckedCreateWithoutDocument_proposalInput>
    connectOrCreate?: documentCreateOrConnectWithoutDocument_proposalInput
    connect?: documentWhereUniqueInput
  }

  export type documentUpdateOneRequiredWithoutDocument_proposalNestedInput = {
    create?: XOR<documentCreateWithoutDocument_proposalInput, documentUncheckedCreateWithoutDocument_proposalInput>
    connectOrCreate?: documentCreateOrConnectWithoutDocument_proposalInput
    upsert?: documentUpsertWithoutDocument_proposalInput
    connect?: documentWhereUniqueInput
    update?: XOR<XOR<documentUpdateToOneWithWhereWithoutDocument_proposalInput, documentUpdateWithoutDocument_proposalInput>, documentUncheckedUpdateWithoutDocument_proposalInput>
  }

  export type kyc_level_1CreateNestedOneWithoutFoto_dokumenInput = {
    create?: XOR<kyc_level_1CreateWithoutFoto_dokumenInput, kyc_level_1UncheckedCreateWithoutFoto_dokumenInput>
    connectOrCreate?: kyc_level_1CreateOrConnectWithoutFoto_dokumenInput
    connect?: kyc_level_1WhereUniqueInput
  }

  export type BytesFieldUpdateOperationsInput = {
    set?: Buffer
  }

  export type kyc_level_1UpdateOneRequiredWithoutFoto_dokumenNestedInput = {
    create?: XOR<kyc_level_1CreateWithoutFoto_dokumenInput, kyc_level_1UncheckedCreateWithoutFoto_dokumenInput>
    connectOrCreate?: kyc_level_1CreateOrConnectWithoutFoto_dokumenInput
    upsert?: kyc_level_1UpsertWithoutFoto_dokumenInput
    connect?: kyc_level_1WhereUniqueInput
    update?: XOR<XOR<kyc_level_1UpdateToOneWithWhereWithoutFoto_dokumenInput, kyc_level_1UpdateWithoutFoto_dokumenInput>, kyc_level_1UncheckedUpdateWithoutFoto_dokumenInput>
  }

  export type crowdfundingCreateNestedOneWithoutHighlight_productInput = {
    create?: XOR<crowdfundingCreateWithoutHighlight_productInput, crowdfundingUncheckedCreateWithoutHighlight_productInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutHighlight_productInput
    connect?: crowdfundingWhereUniqueInput
  }

  export type crowdfundingUpdateOneRequiredWithoutHighlight_productNestedInput = {
    create?: XOR<crowdfundingCreateWithoutHighlight_productInput, crowdfundingUncheckedCreateWithoutHighlight_productInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutHighlight_productInput
    upsert?: crowdfundingUpsertWithoutHighlight_productInput
    connect?: crowdfundingWhereUniqueInput
    update?: XOR<XOR<crowdfundingUpdateToOneWithWhereWithoutHighlight_productInput, crowdfundingUpdateWithoutHighlight_productInput>, crowdfundingUncheckedUpdateWithoutHighlight_productInput>
  }

  export type campaignCreateNestedOneWithoutInvestmentInput = {
    create?: XOR<campaignCreateWithoutInvestmentInput, campaignUncheckedCreateWithoutInvestmentInput>
    connectOrCreate?: campaignCreateOrConnectWithoutInvestmentInput
    connect?: campaignWhereUniqueInput
  }

  export type userCreateNestedOneWithoutInvestmentInput = {
    create?: XOR<userCreateWithoutInvestmentInput, userUncheckedCreateWithoutInvestmentInput>
    connectOrCreate?: userCreateOrConnectWithoutInvestmentInput
    connect?: userWhereUniqueInput
  }

  export type campaignUpdateOneRequiredWithoutInvestmentNestedInput = {
    create?: XOR<campaignCreateWithoutInvestmentInput, campaignUncheckedCreateWithoutInvestmentInput>
    connectOrCreate?: campaignCreateOrConnectWithoutInvestmentInput
    upsert?: campaignUpsertWithoutInvestmentInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutInvestmentInput, campaignUpdateWithoutInvestmentInput>, campaignUncheckedUpdateWithoutInvestmentInput>
  }

  export type userUpdateOneRequiredWithoutInvestmentNestedInput = {
    create?: XOR<userCreateWithoutInvestmentInput, userUncheckedCreateWithoutInvestmentInput>
    connectOrCreate?: userCreateOrConnectWithoutInvestmentInput
    upsert?: userUpsertWithoutInvestmentInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutInvestmentInput, userUpdateWithoutInvestmentInput>, userUncheckedUpdateWithoutInvestmentInput>
  }

  export type addressCreateNestedOneWithoutKyc_level_1Input = {
    create?: XOR<addressCreateWithoutKyc_level_1Input, addressUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: addressCreateOrConnectWithoutKyc_level_1Input
    connect?: addressWhereUniqueInput
  }

  export type foto_dokumenCreateNestedOneWithoutKyc_level_1Input = {
    create?: XOR<foto_dokumenCreateWithoutKyc_level_1Input, foto_dokumenUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: foto_dokumenCreateOrConnectWithoutKyc_level_1Input
    connect?: foto_dokumenWhereUniqueInput
  }

  export type userCreateNestedOneWithoutKyc_level_1Input = {
    create?: XOR<userCreateWithoutKyc_level_1Input, userUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: userCreateOrConnectWithoutKyc_level_1Input
    connect?: userWhereUniqueInput
  }

  export type addressUncheckedCreateNestedOneWithoutKyc_level_1Input = {
    create?: XOR<addressCreateWithoutKyc_level_1Input, addressUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: addressCreateOrConnectWithoutKyc_level_1Input
    connect?: addressWhereUniqueInput
  }

  export type foto_dokumenUncheckedCreateNestedOneWithoutKyc_level_1Input = {
    create?: XOR<foto_dokumenCreateWithoutKyc_level_1Input, foto_dokumenUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: foto_dokumenCreateOrConnectWithoutKyc_level_1Input
    connect?: foto_dokumenWhereUniqueInput
  }

  export type Enumkyc_status_enumFieldUpdateOperationsInput = {
    set?: $Enums.kyc_status_enum
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type addressUpdateOneWithoutKyc_level_1NestedInput = {
    create?: XOR<addressCreateWithoutKyc_level_1Input, addressUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: addressCreateOrConnectWithoutKyc_level_1Input
    upsert?: addressUpsertWithoutKyc_level_1Input
    disconnect?: addressWhereInput | boolean
    delete?: addressWhereInput | boolean
    connect?: addressWhereUniqueInput
    update?: XOR<XOR<addressUpdateToOneWithWhereWithoutKyc_level_1Input, addressUpdateWithoutKyc_level_1Input>, addressUncheckedUpdateWithoutKyc_level_1Input>
  }

  export type foto_dokumenUpdateOneWithoutKyc_level_1NestedInput = {
    create?: XOR<foto_dokumenCreateWithoutKyc_level_1Input, foto_dokumenUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: foto_dokumenCreateOrConnectWithoutKyc_level_1Input
    upsert?: foto_dokumenUpsertWithoutKyc_level_1Input
    disconnect?: foto_dokumenWhereInput | boolean
    delete?: foto_dokumenWhereInput | boolean
    connect?: foto_dokumenWhereUniqueInput
    update?: XOR<XOR<foto_dokumenUpdateToOneWithWhereWithoutKyc_level_1Input, foto_dokumenUpdateWithoutKyc_level_1Input>, foto_dokumenUncheckedUpdateWithoutKyc_level_1Input>
  }

  export type userUpdateOneRequiredWithoutKyc_level_1NestedInput = {
    create?: XOR<userCreateWithoutKyc_level_1Input, userUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: userCreateOrConnectWithoutKyc_level_1Input
    upsert?: userUpsertWithoutKyc_level_1Input
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutKyc_level_1Input, userUpdateWithoutKyc_level_1Input>, userUncheckedUpdateWithoutKyc_level_1Input>
  }

  export type addressUncheckedUpdateOneWithoutKyc_level_1NestedInput = {
    create?: XOR<addressCreateWithoutKyc_level_1Input, addressUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: addressCreateOrConnectWithoutKyc_level_1Input
    upsert?: addressUpsertWithoutKyc_level_1Input
    disconnect?: addressWhereInput | boolean
    delete?: addressWhereInput | boolean
    connect?: addressWhereUniqueInput
    update?: XOR<XOR<addressUpdateToOneWithWhereWithoutKyc_level_1Input, addressUpdateWithoutKyc_level_1Input>, addressUncheckedUpdateWithoutKyc_level_1Input>
  }

  export type foto_dokumenUncheckedUpdateOneWithoutKyc_level_1NestedInput = {
    create?: XOR<foto_dokumenCreateWithoutKyc_level_1Input, foto_dokumenUncheckedCreateWithoutKyc_level_1Input>
    connectOrCreate?: foto_dokumenCreateOrConnectWithoutKyc_level_1Input
    upsert?: foto_dokumenUpsertWithoutKyc_level_1Input
    disconnect?: foto_dokumenWhereInput | boolean
    delete?: foto_dokumenWhereInput | boolean
    connect?: foto_dokumenWhereUniqueInput
    update?: XOR<XOR<foto_dokumenUpdateToOneWithWhereWithoutKyc_level_1Input, foto_dokumenUpdateWithoutKyc_level_1Input>, foto_dokumenUncheckedUpdateWithoutKyc_level_1Input>
  }

  export type userCreateNestedOneWithoutKyc_level_2Input = {
    create?: XOR<userCreateWithoutKyc_level_2Input, userUncheckedCreateWithoutKyc_level_2Input>
    connectOrCreate?: userCreateOrConnectWithoutKyc_level_2Input
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutKyc_level_2NestedInput = {
    create?: XOR<userCreateWithoutKyc_level_2Input, userUncheckedCreateWithoutKyc_level_2Input>
    connectOrCreate?: userCreateOrConnectWithoutKyc_level_2Input
    upsert?: userUpsertWithoutKyc_level_2Input
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutKyc_level_2Input, userUpdateWithoutKyc_level_2Input>, userUncheckedUpdateWithoutKyc_level_2Input>
  }

  export type campaignCreateNestedOneWithoutLegalitas_usahaInput = {
    create?: XOR<campaignCreateWithoutLegalitas_usahaInput, campaignUncheckedCreateWithoutLegalitas_usahaInput>
    connectOrCreate?: campaignCreateOrConnectWithoutLegalitas_usahaInput
    connect?: campaignWhereUniqueInput
  }

  export type campaignUpdateOneRequiredWithoutLegalitas_usahaNestedInput = {
    create?: XOR<campaignCreateWithoutLegalitas_usahaInput, campaignUncheckedCreateWithoutLegalitas_usahaInput>
    connectOrCreate?: campaignCreateOrConnectWithoutLegalitas_usahaInput
    upsert?: campaignUpsertWithoutLegalitas_usahaInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutLegalitas_usahaInput, campaignUpdateWithoutLegalitas_usahaInput>, campaignUncheckedUpdateWithoutLegalitas_usahaInput>
  }

  export type campaignCreateNestedOneWithoutPesan_campaignInput = {
    create?: XOR<campaignCreateWithoutPesan_campaignInput, campaignUncheckedCreateWithoutPesan_campaignInput>
    connectOrCreate?: campaignCreateOrConnectWithoutPesan_campaignInput
    connect?: campaignWhereUniqueInput
  }

  export type campaignUpdateOneRequiredWithoutPesan_campaignNestedInput = {
    create?: XOR<campaignCreateWithoutPesan_campaignInput, campaignUncheckedCreateWithoutPesan_campaignInput>
    connectOrCreate?: campaignCreateOrConnectWithoutPesan_campaignInput
    upsert?: campaignUpsertWithoutPesan_campaignInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutPesan_campaignInput, campaignUpdateWithoutPesan_campaignInput>, campaignUncheckedUpdateWithoutPesan_campaignInput>
  }

  export type crowdfundingCreateNestedOneWithoutProduct_informationInput = {
    create?: XOR<crowdfundingCreateWithoutProduct_informationInput, crowdfundingUncheckedCreateWithoutProduct_informationInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutProduct_informationInput
    connect?: crowdfundingWhereUniqueInput
  }

  export type crowdfundingUpdateOneRequiredWithoutProduct_informationNestedInput = {
    create?: XOR<crowdfundingCreateWithoutProduct_informationInput, crowdfundingUncheckedCreateWithoutProduct_informationInput>
    connectOrCreate?: crowdfundingCreateOrConnectWithoutProduct_informationInput
    upsert?: crowdfundingUpsertWithoutProduct_informationInput
    connect?: crowdfundingWhereUniqueInput
    update?: XOR<XOR<crowdfundingUpdateToOneWithWhereWithoutProduct_informationInput, crowdfundingUpdateWithoutProduct_informationInput>, crowdfundingUncheckedUpdateWithoutProduct_informationInput>
  }

  export type userCreateNestedOneWithoutRefundInput = {
    create?: XOR<userCreateWithoutRefundInput, userUncheckedCreateWithoutRefundInput>
    connectOrCreate?: userCreateOrConnectWithoutRefundInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutRefundNestedInput = {
    create?: XOR<userCreateWithoutRefundInput, userUncheckedCreateWithoutRefundInput>
    connectOrCreate?: userCreateOrConnectWithoutRefundInput
    upsert?: userUpsertWithoutRefundInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutRefundInput, userUpdateWithoutRefundInput>, userUncheckedUpdateWithoutRefundInput>
  }

  export type discussionCreateNestedOneWithoutReplies_discussionInput = {
    create?: XOR<discussionCreateWithoutReplies_discussionInput, discussionUncheckedCreateWithoutReplies_discussionInput>
    connectOrCreate?: discussionCreateOrConnectWithoutReplies_discussionInput
    connect?: discussionWhereUniqueInput
  }

  export type discussionUpdateOneRequiredWithoutReplies_discussionNestedInput = {
    create?: XOR<discussionCreateWithoutReplies_discussionInput, discussionUncheckedCreateWithoutReplies_discussionInput>
    connectOrCreate?: discussionCreateOrConnectWithoutReplies_discussionInput
    upsert?: discussionUpsertWithoutReplies_discussionInput
    connect?: discussionWhereUniqueInput
    update?: XOR<XOR<discussionUpdateToOneWithWhereWithoutReplies_discussionInput, discussionUpdateWithoutReplies_discussionInput>, discussionUncheckedUpdateWithoutReplies_discussionInput>
  }

  export type campaignCreateNestedOneWithoutSocial_media_usahaInput = {
    create?: XOR<campaignCreateWithoutSocial_media_usahaInput, campaignUncheckedCreateWithoutSocial_media_usahaInput>
    connectOrCreate?: campaignCreateOrConnectWithoutSocial_media_usahaInput
    connect?: campaignWhereUniqueInput
  }

  export type team_campaignCreateNestedOneWithoutSocial_media_usahaInput = {
    create?: XOR<team_campaignCreateWithoutSocial_media_usahaInput, team_campaignUncheckedCreateWithoutSocial_media_usahaInput>
    connectOrCreate?: team_campaignCreateOrConnectWithoutSocial_media_usahaInput
    connect?: team_campaignWhereUniqueInput
  }

  export type campaignUpdateOneWithoutSocial_media_usahaNestedInput = {
    create?: XOR<campaignCreateWithoutSocial_media_usahaInput, campaignUncheckedCreateWithoutSocial_media_usahaInput>
    connectOrCreate?: campaignCreateOrConnectWithoutSocial_media_usahaInput
    upsert?: campaignUpsertWithoutSocial_media_usahaInput
    disconnect?: campaignWhereInput | boolean
    delete?: campaignWhereInput | boolean
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutSocial_media_usahaInput, campaignUpdateWithoutSocial_media_usahaInput>, campaignUncheckedUpdateWithoutSocial_media_usahaInput>
  }

  export type team_campaignUpdateOneWithoutSocial_media_usahaNestedInput = {
    create?: XOR<team_campaignCreateWithoutSocial_media_usahaInput, team_campaignUncheckedCreateWithoutSocial_media_usahaInput>
    connectOrCreate?: team_campaignCreateOrConnectWithoutSocial_media_usahaInput
    upsert?: team_campaignUpsertWithoutSocial_media_usahaInput
    disconnect?: team_campaignWhereInput | boolean
    delete?: team_campaignWhereInput | boolean
    connect?: team_campaignWhereUniqueInput
    update?: XOR<XOR<team_campaignUpdateToOneWithWhereWithoutSocial_media_usahaInput, team_campaignUpdateWithoutSocial_media_usahaInput>, team_campaignUncheckedUpdateWithoutSocial_media_usahaInput>
  }

  export type social_media_usahaCreateNestedManyWithoutTeam_campaignInput = {
    create?: XOR<social_media_usahaCreateWithoutTeam_campaignInput, social_media_usahaUncheckedCreateWithoutTeam_campaignInput> | social_media_usahaCreateWithoutTeam_campaignInput[] | social_media_usahaUncheckedCreateWithoutTeam_campaignInput[]
    connectOrCreate?: social_media_usahaCreateOrConnectWithoutTeam_campaignInput | social_media_usahaCreateOrConnectWithoutTeam_campaignInput[]
    createMany?: social_media_usahaCreateManyTeam_campaignInputEnvelope
    connect?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
  }

  export type campaignCreateNestedOneWithoutTeam_campaignInput = {
    create?: XOR<campaignCreateWithoutTeam_campaignInput, campaignUncheckedCreateWithoutTeam_campaignInput>
    connectOrCreate?: campaignCreateOrConnectWithoutTeam_campaignInput
    connect?: campaignWhereUniqueInput
  }

  export type social_media_usahaUncheckedCreateNestedManyWithoutTeam_campaignInput = {
    create?: XOR<social_media_usahaCreateWithoutTeam_campaignInput, social_media_usahaUncheckedCreateWithoutTeam_campaignInput> | social_media_usahaCreateWithoutTeam_campaignInput[] | social_media_usahaUncheckedCreateWithoutTeam_campaignInput[]
    connectOrCreate?: social_media_usahaCreateOrConnectWithoutTeam_campaignInput | social_media_usahaCreateOrConnectWithoutTeam_campaignInput[]
    createMany?: social_media_usahaCreateManyTeam_campaignInputEnvelope
    connect?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
  }

  export type social_media_usahaUpdateManyWithoutTeam_campaignNestedInput = {
    create?: XOR<social_media_usahaCreateWithoutTeam_campaignInput, social_media_usahaUncheckedCreateWithoutTeam_campaignInput> | social_media_usahaCreateWithoutTeam_campaignInput[] | social_media_usahaUncheckedCreateWithoutTeam_campaignInput[]
    connectOrCreate?: social_media_usahaCreateOrConnectWithoutTeam_campaignInput | social_media_usahaCreateOrConnectWithoutTeam_campaignInput[]
    upsert?: social_media_usahaUpsertWithWhereUniqueWithoutTeam_campaignInput | social_media_usahaUpsertWithWhereUniqueWithoutTeam_campaignInput[]
    createMany?: social_media_usahaCreateManyTeam_campaignInputEnvelope
    set?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
    disconnect?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
    delete?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
    connect?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
    update?: social_media_usahaUpdateWithWhereUniqueWithoutTeam_campaignInput | social_media_usahaUpdateWithWhereUniqueWithoutTeam_campaignInput[]
    updateMany?: social_media_usahaUpdateManyWithWhereWithoutTeam_campaignInput | social_media_usahaUpdateManyWithWhereWithoutTeam_campaignInput[]
    deleteMany?: social_media_usahaScalarWhereInput | social_media_usahaScalarWhereInput[]
  }

  export type campaignUpdateOneRequiredWithoutTeam_campaignNestedInput = {
    create?: XOR<campaignCreateWithoutTeam_campaignInput, campaignUncheckedCreateWithoutTeam_campaignInput>
    connectOrCreate?: campaignCreateOrConnectWithoutTeam_campaignInput
    upsert?: campaignUpsertWithoutTeam_campaignInput
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutTeam_campaignInput, campaignUpdateWithoutTeam_campaignInput>, campaignUncheckedUpdateWithoutTeam_campaignInput>
  }

  export type social_media_usahaUncheckedUpdateManyWithoutTeam_campaignNestedInput = {
    create?: XOR<social_media_usahaCreateWithoutTeam_campaignInput, social_media_usahaUncheckedCreateWithoutTeam_campaignInput> | social_media_usahaCreateWithoutTeam_campaignInput[] | social_media_usahaUncheckedCreateWithoutTeam_campaignInput[]
    connectOrCreate?: social_media_usahaCreateOrConnectWithoutTeam_campaignInput | social_media_usahaCreateOrConnectWithoutTeam_campaignInput[]
    upsert?: social_media_usahaUpsertWithWhereUniqueWithoutTeam_campaignInput | social_media_usahaUpsertWithWhereUniqueWithoutTeam_campaignInput[]
    createMany?: social_media_usahaCreateManyTeam_campaignInputEnvelope
    set?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
    disconnect?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
    delete?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
    connect?: social_media_usahaWhereUniqueInput | social_media_usahaWhereUniqueInput[]
    update?: social_media_usahaUpdateWithWhereUniqueWithoutTeam_campaignInput | social_media_usahaUpdateWithWhereUniqueWithoutTeam_campaignInput[]
    updateMany?: social_media_usahaUpdateManyWithWhereWithoutTeam_campaignInput | social_media_usahaUpdateManyWithWhereWithoutTeam_campaignInput[]
    deleteMany?: social_media_usahaScalarWhereInput | social_media_usahaScalarWhereInput[]
  }

  export type campaignCreateNestedOneWithoutTransactionInput = {
    create?: XOR<campaignCreateWithoutTransactionInput, campaignUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: campaignCreateOrConnectWithoutTransactionInput
    connect?: campaignWhereUniqueInput
  }

  export type userCreateNestedOneWithoutTransactionInput = {
    create?: XOR<userCreateWithoutTransactionInput, userUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: userCreateOrConnectWithoutTransactionInput
    connect?: userWhereUniqueInput
  }

  export type NullableEnumtransaction_type_enumFieldUpdateOperationsInput = {
    set?: $Enums.transaction_type_enum | null
  }

  export type NullableEnumtransaction_status_enumFieldUpdateOperationsInput = {
    set?: $Enums.transaction_status_enum | null
  }

  export type campaignUpdateOneWithoutTransactionNestedInput = {
    create?: XOR<campaignCreateWithoutTransactionInput, campaignUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: campaignCreateOrConnectWithoutTransactionInput
    upsert?: campaignUpsertWithoutTransactionInput
    disconnect?: campaignWhereInput | boolean
    delete?: campaignWhereInput | boolean
    connect?: campaignWhereUniqueInput
    update?: XOR<XOR<campaignUpdateToOneWithWhereWithoutTransactionInput, campaignUpdateWithoutTransactionInput>, campaignUncheckedUpdateWithoutTransactionInput>
  }

  export type userUpdateOneWithoutTransactionNestedInput = {
    create?: XOR<userCreateWithoutTransactionInput, userUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: userCreateOrConnectWithoutTransactionInput
    upsert?: userUpsertWithoutTransactionInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutTransactionInput, userUpdateWithoutTransactionInput>, userUncheckedUpdateWithoutTransactionInput>
  }

  export type campaignCreateNestedManyWithoutUserInput = {
    create?: XOR<campaignCreateWithoutUserInput, campaignUncheckedCreateWithoutUserInput> | campaignCreateWithoutUserInput[] | campaignUncheckedCreateWithoutUserInput[]
    connectOrCreate?: campaignCreateOrConnectWithoutUserInput | campaignCreateOrConnectWithoutUserInput[]
    createMany?: campaignCreateManyUserInputEnvelope
    connect?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
  }

  export type community_chatCreateNestedManyWithoutUserInput = {
    create?: XOR<community_chatCreateWithoutUserInput, community_chatUncheckedCreateWithoutUserInput> | community_chatCreateWithoutUserInput[] | community_chatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: community_chatCreateOrConnectWithoutUserInput | community_chatCreateOrConnectWithoutUserInput[]
    createMany?: community_chatCreateManyUserInputEnvelope
    connect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
  }

  export type community_membershipCreateNestedManyWithoutUserInput = {
    create?: XOR<community_membershipCreateWithoutUserInput, community_membershipUncheckedCreateWithoutUserInput> | community_membershipCreateWithoutUserInput[] | community_membershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: community_membershipCreateOrConnectWithoutUserInput | community_membershipCreateOrConnectWithoutUserInput[]
    createMany?: community_membershipCreateManyUserInputEnvelope
    connect?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
  }

  export type discussionCreateNestedManyWithoutUserInput = {
    create?: XOR<discussionCreateWithoutUserInput, discussionUncheckedCreateWithoutUserInput> | discussionCreateWithoutUserInput[] | discussionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: discussionCreateOrConnectWithoutUserInput | discussionCreateOrConnectWithoutUserInput[]
    createMany?: discussionCreateManyUserInputEnvelope
    connect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
  }

  export type investmentCreateNestedManyWithoutUserInput = {
    create?: XOR<investmentCreateWithoutUserInput, investmentUncheckedCreateWithoutUserInput> | investmentCreateWithoutUserInput[] | investmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: investmentCreateOrConnectWithoutUserInput | investmentCreateOrConnectWithoutUserInput[]
    createMany?: investmentCreateManyUserInputEnvelope
    connect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
  }

  export type kyc_level_1CreateNestedOneWithoutUserInput = {
    create?: XOR<kyc_level_1CreateWithoutUserInput, kyc_level_1UncheckedCreateWithoutUserInput>
    connectOrCreate?: kyc_level_1CreateOrConnectWithoutUserInput
    connect?: kyc_level_1WhereUniqueInput
  }

  export type kyc_level_2CreateNestedOneWithoutUserInput = {
    create?: XOR<kyc_level_2CreateWithoutUserInput, kyc_level_2UncheckedCreateWithoutUserInput>
    connectOrCreate?: kyc_level_2CreateOrConnectWithoutUserInput
    connect?: kyc_level_2WhereUniqueInput
  }

  export type refundCreateNestedManyWithoutUserInput = {
    create?: XOR<refundCreateWithoutUserInput, refundUncheckedCreateWithoutUserInput> | refundCreateWithoutUserInput[] | refundUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refundCreateOrConnectWithoutUserInput | refundCreateOrConnectWithoutUserInput[]
    createMany?: refundCreateManyUserInputEnvelope
    connect?: refundWhereUniqueInput | refundWhereUniqueInput[]
  }

  export type transactionCreateNestedManyWithoutUserInput = {
    create?: XOR<transactionCreateWithoutUserInput, transactionUncheckedCreateWithoutUserInput> | transactionCreateWithoutUserInput[] | transactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transactionCreateOrConnectWithoutUserInput | transactionCreateOrConnectWithoutUserInput[]
    createMany?: transactionCreateManyUserInputEnvelope
    connect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
  }

  export type user_votedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_votedCreateWithoutUserInput, user_votedUncheckedCreateWithoutUserInput> | user_votedCreateWithoutUserInput[] | user_votedUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_votedCreateOrConnectWithoutUserInput | user_votedCreateOrConnectWithoutUserInput[]
    createMany?: user_votedCreateManyUserInputEnvelope
    connect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
  }

  export type campaignUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<campaignCreateWithoutUserInput, campaignUncheckedCreateWithoutUserInput> | campaignCreateWithoutUserInput[] | campaignUncheckedCreateWithoutUserInput[]
    connectOrCreate?: campaignCreateOrConnectWithoutUserInput | campaignCreateOrConnectWithoutUserInput[]
    createMany?: campaignCreateManyUserInputEnvelope
    connect?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
  }

  export type community_chatUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<community_chatCreateWithoutUserInput, community_chatUncheckedCreateWithoutUserInput> | community_chatCreateWithoutUserInput[] | community_chatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: community_chatCreateOrConnectWithoutUserInput | community_chatCreateOrConnectWithoutUserInput[]
    createMany?: community_chatCreateManyUserInputEnvelope
    connect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
  }

  export type community_membershipUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<community_membershipCreateWithoutUserInput, community_membershipUncheckedCreateWithoutUserInput> | community_membershipCreateWithoutUserInput[] | community_membershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: community_membershipCreateOrConnectWithoutUserInput | community_membershipCreateOrConnectWithoutUserInput[]
    createMany?: community_membershipCreateManyUserInputEnvelope
    connect?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
  }

  export type discussionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<discussionCreateWithoutUserInput, discussionUncheckedCreateWithoutUserInput> | discussionCreateWithoutUserInput[] | discussionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: discussionCreateOrConnectWithoutUserInput | discussionCreateOrConnectWithoutUserInput[]
    createMany?: discussionCreateManyUserInputEnvelope
    connect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
  }

  export type investmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<investmentCreateWithoutUserInput, investmentUncheckedCreateWithoutUserInput> | investmentCreateWithoutUserInput[] | investmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: investmentCreateOrConnectWithoutUserInput | investmentCreateOrConnectWithoutUserInput[]
    createMany?: investmentCreateManyUserInputEnvelope
    connect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
  }

  export type kyc_level_1UncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<kyc_level_1CreateWithoutUserInput, kyc_level_1UncheckedCreateWithoutUserInput>
    connectOrCreate?: kyc_level_1CreateOrConnectWithoutUserInput
    connect?: kyc_level_1WhereUniqueInput
  }

  export type kyc_level_2UncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<kyc_level_2CreateWithoutUserInput, kyc_level_2UncheckedCreateWithoutUserInput>
    connectOrCreate?: kyc_level_2CreateOrConnectWithoutUserInput
    connect?: kyc_level_2WhereUniqueInput
  }

  export type refundUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<refundCreateWithoutUserInput, refundUncheckedCreateWithoutUserInput> | refundCreateWithoutUserInput[] | refundUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refundCreateOrConnectWithoutUserInput | refundCreateOrConnectWithoutUserInput[]
    createMany?: refundCreateManyUserInputEnvelope
    connect?: refundWhereUniqueInput | refundWhereUniqueInput[]
  }

  export type transactionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<transactionCreateWithoutUserInput, transactionUncheckedCreateWithoutUserInput> | transactionCreateWithoutUserInput[] | transactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transactionCreateOrConnectWithoutUserInput | transactionCreateOrConnectWithoutUserInput[]
    createMany?: transactionCreateManyUserInputEnvelope
    connect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
  }

  export type user_votedUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_votedCreateWithoutUserInput, user_votedUncheckedCreateWithoutUserInput> | user_votedCreateWithoutUserInput[] | user_votedUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_votedCreateOrConnectWithoutUserInput | user_votedCreateOrConnectWithoutUserInput[]
    createMany?: user_votedCreateManyUserInputEnvelope
    connect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
  }

  export type Enumuser_rolesFieldUpdateOperationsInput = {
    set?: $Enums.user_roles
  }

  export type campaignUpdateManyWithoutUserNestedInput = {
    create?: XOR<campaignCreateWithoutUserInput, campaignUncheckedCreateWithoutUserInput> | campaignCreateWithoutUserInput[] | campaignUncheckedCreateWithoutUserInput[]
    connectOrCreate?: campaignCreateOrConnectWithoutUserInput | campaignCreateOrConnectWithoutUserInput[]
    upsert?: campaignUpsertWithWhereUniqueWithoutUserInput | campaignUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: campaignCreateManyUserInputEnvelope
    set?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
    disconnect?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
    delete?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
    connect?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
    update?: campaignUpdateWithWhereUniqueWithoutUserInput | campaignUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: campaignUpdateManyWithWhereWithoutUserInput | campaignUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: campaignScalarWhereInput | campaignScalarWhereInput[]
  }

  export type community_chatUpdateManyWithoutUserNestedInput = {
    create?: XOR<community_chatCreateWithoutUserInput, community_chatUncheckedCreateWithoutUserInput> | community_chatCreateWithoutUserInput[] | community_chatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: community_chatCreateOrConnectWithoutUserInput | community_chatCreateOrConnectWithoutUserInput[]
    upsert?: community_chatUpsertWithWhereUniqueWithoutUserInput | community_chatUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: community_chatCreateManyUserInputEnvelope
    set?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    disconnect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    delete?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    connect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    update?: community_chatUpdateWithWhereUniqueWithoutUserInput | community_chatUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: community_chatUpdateManyWithWhereWithoutUserInput | community_chatUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: community_chatScalarWhereInput | community_chatScalarWhereInput[]
  }

  export type community_membershipUpdateManyWithoutUserNestedInput = {
    create?: XOR<community_membershipCreateWithoutUserInput, community_membershipUncheckedCreateWithoutUserInput> | community_membershipCreateWithoutUserInput[] | community_membershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: community_membershipCreateOrConnectWithoutUserInput | community_membershipCreateOrConnectWithoutUserInput[]
    upsert?: community_membershipUpsertWithWhereUniqueWithoutUserInput | community_membershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: community_membershipCreateManyUserInputEnvelope
    set?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
    disconnect?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
    delete?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
    connect?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
    update?: community_membershipUpdateWithWhereUniqueWithoutUserInput | community_membershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: community_membershipUpdateManyWithWhereWithoutUserInput | community_membershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: community_membershipScalarWhereInput | community_membershipScalarWhereInput[]
  }

  export type discussionUpdateManyWithoutUserNestedInput = {
    create?: XOR<discussionCreateWithoutUserInput, discussionUncheckedCreateWithoutUserInput> | discussionCreateWithoutUserInput[] | discussionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: discussionCreateOrConnectWithoutUserInput | discussionCreateOrConnectWithoutUserInput[]
    upsert?: discussionUpsertWithWhereUniqueWithoutUserInput | discussionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: discussionCreateManyUserInputEnvelope
    set?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    disconnect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    delete?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    connect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    update?: discussionUpdateWithWhereUniqueWithoutUserInput | discussionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: discussionUpdateManyWithWhereWithoutUserInput | discussionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: discussionScalarWhereInput | discussionScalarWhereInput[]
  }

  export type investmentUpdateManyWithoutUserNestedInput = {
    create?: XOR<investmentCreateWithoutUserInput, investmentUncheckedCreateWithoutUserInput> | investmentCreateWithoutUserInput[] | investmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: investmentCreateOrConnectWithoutUserInput | investmentCreateOrConnectWithoutUserInput[]
    upsert?: investmentUpsertWithWhereUniqueWithoutUserInput | investmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: investmentCreateManyUserInputEnvelope
    set?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    disconnect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    delete?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    connect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    update?: investmentUpdateWithWhereUniqueWithoutUserInput | investmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: investmentUpdateManyWithWhereWithoutUserInput | investmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: investmentScalarWhereInput | investmentScalarWhereInput[]
  }

  export type kyc_level_1UpdateOneWithoutUserNestedInput = {
    create?: XOR<kyc_level_1CreateWithoutUserInput, kyc_level_1UncheckedCreateWithoutUserInput>
    connectOrCreate?: kyc_level_1CreateOrConnectWithoutUserInput
    upsert?: kyc_level_1UpsertWithoutUserInput
    disconnect?: kyc_level_1WhereInput | boolean
    delete?: kyc_level_1WhereInput | boolean
    connect?: kyc_level_1WhereUniqueInput
    update?: XOR<XOR<kyc_level_1UpdateToOneWithWhereWithoutUserInput, kyc_level_1UpdateWithoutUserInput>, kyc_level_1UncheckedUpdateWithoutUserInput>
  }

  export type kyc_level_2UpdateOneWithoutUserNestedInput = {
    create?: XOR<kyc_level_2CreateWithoutUserInput, kyc_level_2UncheckedCreateWithoutUserInput>
    connectOrCreate?: kyc_level_2CreateOrConnectWithoutUserInput
    upsert?: kyc_level_2UpsertWithoutUserInput
    disconnect?: kyc_level_2WhereInput | boolean
    delete?: kyc_level_2WhereInput | boolean
    connect?: kyc_level_2WhereUniqueInput
    update?: XOR<XOR<kyc_level_2UpdateToOneWithWhereWithoutUserInput, kyc_level_2UpdateWithoutUserInput>, kyc_level_2UncheckedUpdateWithoutUserInput>
  }

  export type refundUpdateManyWithoutUserNestedInput = {
    create?: XOR<refundCreateWithoutUserInput, refundUncheckedCreateWithoutUserInput> | refundCreateWithoutUserInput[] | refundUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refundCreateOrConnectWithoutUserInput | refundCreateOrConnectWithoutUserInput[]
    upsert?: refundUpsertWithWhereUniqueWithoutUserInput | refundUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: refundCreateManyUserInputEnvelope
    set?: refundWhereUniqueInput | refundWhereUniqueInput[]
    disconnect?: refundWhereUniqueInput | refundWhereUniqueInput[]
    delete?: refundWhereUniqueInput | refundWhereUniqueInput[]
    connect?: refundWhereUniqueInput | refundWhereUniqueInput[]
    update?: refundUpdateWithWhereUniqueWithoutUserInput | refundUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: refundUpdateManyWithWhereWithoutUserInput | refundUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: refundScalarWhereInput | refundScalarWhereInput[]
  }

  export type transactionUpdateManyWithoutUserNestedInput = {
    create?: XOR<transactionCreateWithoutUserInput, transactionUncheckedCreateWithoutUserInput> | transactionCreateWithoutUserInput[] | transactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transactionCreateOrConnectWithoutUserInput | transactionCreateOrConnectWithoutUserInput[]
    upsert?: transactionUpsertWithWhereUniqueWithoutUserInput | transactionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: transactionCreateManyUserInputEnvelope
    set?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    disconnect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    delete?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    connect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    update?: transactionUpdateWithWhereUniqueWithoutUserInput | transactionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: transactionUpdateManyWithWhereWithoutUserInput | transactionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: transactionScalarWhereInput | transactionScalarWhereInput[]
  }

  export type user_votedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_votedCreateWithoutUserInput, user_votedUncheckedCreateWithoutUserInput> | user_votedCreateWithoutUserInput[] | user_votedUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_votedCreateOrConnectWithoutUserInput | user_votedCreateOrConnectWithoutUserInput[]
    upsert?: user_votedUpsertWithWhereUniqueWithoutUserInput | user_votedUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_votedCreateManyUserInputEnvelope
    set?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    disconnect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    delete?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    connect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    update?: user_votedUpdateWithWhereUniqueWithoutUserInput | user_votedUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_votedUpdateManyWithWhereWithoutUserInput | user_votedUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_votedScalarWhereInput | user_votedScalarWhereInput[]
  }

  export type campaignUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<campaignCreateWithoutUserInput, campaignUncheckedCreateWithoutUserInput> | campaignCreateWithoutUserInput[] | campaignUncheckedCreateWithoutUserInput[]
    connectOrCreate?: campaignCreateOrConnectWithoutUserInput | campaignCreateOrConnectWithoutUserInput[]
    upsert?: campaignUpsertWithWhereUniqueWithoutUserInput | campaignUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: campaignCreateManyUserInputEnvelope
    set?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
    disconnect?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
    delete?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
    connect?: campaignWhereUniqueInput | campaignWhereUniqueInput[]
    update?: campaignUpdateWithWhereUniqueWithoutUserInput | campaignUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: campaignUpdateManyWithWhereWithoutUserInput | campaignUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: campaignScalarWhereInput | campaignScalarWhereInput[]
  }

  export type community_chatUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<community_chatCreateWithoutUserInput, community_chatUncheckedCreateWithoutUserInput> | community_chatCreateWithoutUserInput[] | community_chatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: community_chatCreateOrConnectWithoutUserInput | community_chatCreateOrConnectWithoutUserInput[]
    upsert?: community_chatUpsertWithWhereUniqueWithoutUserInput | community_chatUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: community_chatCreateManyUserInputEnvelope
    set?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    disconnect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    delete?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    connect?: community_chatWhereUniqueInput | community_chatWhereUniqueInput[]
    update?: community_chatUpdateWithWhereUniqueWithoutUserInput | community_chatUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: community_chatUpdateManyWithWhereWithoutUserInput | community_chatUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: community_chatScalarWhereInput | community_chatScalarWhereInput[]
  }

  export type community_membershipUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<community_membershipCreateWithoutUserInput, community_membershipUncheckedCreateWithoutUserInput> | community_membershipCreateWithoutUserInput[] | community_membershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: community_membershipCreateOrConnectWithoutUserInput | community_membershipCreateOrConnectWithoutUserInput[]
    upsert?: community_membershipUpsertWithWhereUniqueWithoutUserInput | community_membershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: community_membershipCreateManyUserInputEnvelope
    set?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
    disconnect?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
    delete?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
    connect?: community_membershipWhereUniqueInput | community_membershipWhereUniqueInput[]
    update?: community_membershipUpdateWithWhereUniqueWithoutUserInput | community_membershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: community_membershipUpdateManyWithWhereWithoutUserInput | community_membershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: community_membershipScalarWhereInput | community_membershipScalarWhereInput[]
  }

  export type discussionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<discussionCreateWithoutUserInput, discussionUncheckedCreateWithoutUserInput> | discussionCreateWithoutUserInput[] | discussionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: discussionCreateOrConnectWithoutUserInput | discussionCreateOrConnectWithoutUserInput[]
    upsert?: discussionUpsertWithWhereUniqueWithoutUserInput | discussionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: discussionCreateManyUserInputEnvelope
    set?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    disconnect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    delete?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    connect?: discussionWhereUniqueInput | discussionWhereUniqueInput[]
    update?: discussionUpdateWithWhereUniqueWithoutUserInput | discussionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: discussionUpdateManyWithWhereWithoutUserInput | discussionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: discussionScalarWhereInput | discussionScalarWhereInput[]
  }

  export type investmentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<investmentCreateWithoutUserInput, investmentUncheckedCreateWithoutUserInput> | investmentCreateWithoutUserInput[] | investmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: investmentCreateOrConnectWithoutUserInput | investmentCreateOrConnectWithoutUserInput[]
    upsert?: investmentUpsertWithWhereUniqueWithoutUserInput | investmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: investmentCreateManyUserInputEnvelope
    set?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    disconnect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    delete?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    connect?: investmentWhereUniqueInput | investmentWhereUniqueInput[]
    update?: investmentUpdateWithWhereUniqueWithoutUserInput | investmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: investmentUpdateManyWithWhereWithoutUserInput | investmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: investmentScalarWhereInput | investmentScalarWhereInput[]
  }

  export type kyc_level_1UncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<kyc_level_1CreateWithoutUserInput, kyc_level_1UncheckedCreateWithoutUserInput>
    connectOrCreate?: kyc_level_1CreateOrConnectWithoutUserInput
    upsert?: kyc_level_1UpsertWithoutUserInput
    disconnect?: kyc_level_1WhereInput | boolean
    delete?: kyc_level_1WhereInput | boolean
    connect?: kyc_level_1WhereUniqueInput
    update?: XOR<XOR<kyc_level_1UpdateToOneWithWhereWithoutUserInput, kyc_level_1UpdateWithoutUserInput>, kyc_level_1UncheckedUpdateWithoutUserInput>
  }

  export type kyc_level_2UncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<kyc_level_2CreateWithoutUserInput, kyc_level_2UncheckedCreateWithoutUserInput>
    connectOrCreate?: kyc_level_2CreateOrConnectWithoutUserInput
    upsert?: kyc_level_2UpsertWithoutUserInput
    disconnect?: kyc_level_2WhereInput | boolean
    delete?: kyc_level_2WhereInput | boolean
    connect?: kyc_level_2WhereUniqueInput
    update?: XOR<XOR<kyc_level_2UpdateToOneWithWhereWithoutUserInput, kyc_level_2UpdateWithoutUserInput>, kyc_level_2UncheckedUpdateWithoutUserInput>
  }

  export type refundUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<refundCreateWithoutUserInput, refundUncheckedCreateWithoutUserInput> | refundCreateWithoutUserInput[] | refundUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refundCreateOrConnectWithoutUserInput | refundCreateOrConnectWithoutUserInput[]
    upsert?: refundUpsertWithWhereUniqueWithoutUserInput | refundUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: refundCreateManyUserInputEnvelope
    set?: refundWhereUniqueInput | refundWhereUniqueInput[]
    disconnect?: refundWhereUniqueInput | refundWhereUniqueInput[]
    delete?: refundWhereUniqueInput | refundWhereUniqueInput[]
    connect?: refundWhereUniqueInput | refundWhereUniqueInput[]
    update?: refundUpdateWithWhereUniqueWithoutUserInput | refundUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: refundUpdateManyWithWhereWithoutUserInput | refundUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: refundScalarWhereInput | refundScalarWhereInput[]
  }

  export type transactionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<transactionCreateWithoutUserInput, transactionUncheckedCreateWithoutUserInput> | transactionCreateWithoutUserInput[] | transactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transactionCreateOrConnectWithoutUserInput | transactionCreateOrConnectWithoutUserInput[]
    upsert?: transactionUpsertWithWhereUniqueWithoutUserInput | transactionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: transactionCreateManyUserInputEnvelope
    set?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    disconnect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    delete?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    connect?: transactionWhereUniqueInput | transactionWhereUniqueInput[]
    update?: transactionUpdateWithWhereUniqueWithoutUserInput | transactionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: transactionUpdateManyWithWhereWithoutUserInput | transactionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: transactionScalarWhereInput | transactionScalarWhereInput[]
  }

  export type user_votedUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_votedCreateWithoutUserInput, user_votedUncheckedCreateWithoutUserInput> | user_votedCreateWithoutUserInput[] | user_votedUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_votedCreateOrConnectWithoutUserInput | user_votedCreateOrConnectWithoutUserInput[]
    upsert?: user_votedUpsertWithWhereUniqueWithoutUserInput | user_votedUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_votedCreateManyUserInputEnvelope
    set?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    disconnect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    delete?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    connect?: user_votedWhereUniqueInput | user_votedWhereUniqueInput[]
    update?: user_votedUpdateWithWhereUniqueWithoutUserInput | user_votedUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_votedUpdateManyWithWhereWithoutUserInput | user_votedUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_votedScalarWhereInput | user_votedScalarWhereInput[]
  }

  export type community_proposalCreateNestedOneWithoutUser_votedInput = {
    create?: XOR<community_proposalCreateWithoutUser_votedInput, community_proposalUncheckedCreateWithoutUser_votedInput>
    connectOrCreate?: community_proposalCreateOrConnectWithoutUser_votedInput
    connect?: community_proposalWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUser_votedInput = {
    create?: XOR<userCreateWithoutUser_votedInput, userUncheckedCreateWithoutUser_votedInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_votedInput
    connect?: userWhereUniqueInput
  }

  export type community_proposalUpdateOneRequiredWithoutUser_votedNestedInput = {
    create?: XOR<community_proposalCreateWithoutUser_votedInput, community_proposalUncheckedCreateWithoutUser_votedInput>
    connectOrCreate?: community_proposalCreateOrConnectWithoutUser_votedInput
    upsert?: community_proposalUpsertWithoutUser_votedInput
    connect?: community_proposalWhereUniqueInput
    update?: XOR<XOR<community_proposalUpdateToOneWithWhereWithoutUser_votedInput, community_proposalUpdateWithoutUser_votedInput>, community_proposalUncheckedUpdateWithoutUser_votedInput>
  }

  export type userUpdateOneRequiredWithoutUser_votedNestedInput = {
    create?: XOR<userCreateWithoutUser_votedInput, userUncheckedCreateWithoutUser_votedInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_votedInput
    upsert?: userUpsertWithoutUser_votedInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_votedInput, userUpdateWithoutUser_votedInput>, userUncheckedUpdateWithoutUser_votedInput>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumtipe_usaha_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.tipe_usaha_enum | Enumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.tipe_usaha_enum[] | ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.tipe_usaha_enum[] | ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtipe_usaha_enumNullableFilter<$PrismaModel> | $Enums.tipe_usaha_enum | null
  }

  export type NestedEnumjenis_usaha_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.jenis_usaha_enum | Enumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.jenis_usaha_enum[] | ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.jenis_usaha_enum[] | ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumjenis_usaha_enumNullableFilter<$PrismaModel> | $Enums.jenis_usaha_enum | null
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumtipe_usaha_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.tipe_usaha_enum | Enumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.tipe_usaha_enum[] | ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.tipe_usaha_enum[] | ListEnumtipe_usaha_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtipe_usaha_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.tipe_usaha_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtipe_usaha_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumtipe_usaha_enumNullableFilter<$PrismaModel>
  }

  export type NestedEnumjenis_usaha_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.jenis_usaha_enum | Enumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.jenis_usaha_enum[] | ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.jenis_usaha_enum[] | ListEnumjenis_usaha_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumjenis_usaha_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.jenis_usaha_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumjenis_usaha_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumjenis_usaha_enumNullableFilter<$PrismaModel>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedBytesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel>
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel>
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel>
    not?: NestedBytesFilter<$PrismaModel> | Buffer
  }

  export type NestedBytesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel>
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel>
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel>
    not?: NestedBytesWithAggregatesFilter<$PrismaModel> | Buffer
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBytesFilter<$PrismaModel>
    _max?: NestedBytesFilter<$PrismaModel>
  }

  export type NestedEnumkyc_status_enumFilter<$PrismaModel = never> = {
    equals?: $Enums.kyc_status_enum | Enumkyc_status_enumFieldRefInput<$PrismaModel>
    in?: $Enums.kyc_status_enum[] | ListEnumkyc_status_enumFieldRefInput<$PrismaModel>
    notIn?: $Enums.kyc_status_enum[] | ListEnumkyc_status_enumFieldRefInput<$PrismaModel>
    not?: NestedEnumkyc_status_enumFilter<$PrismaModel> | $Enums.kyc_status_enum
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumkyc_status_enumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.kyc_status_enum | Enumkyc_status_enumFieldRefInput<$PrismaModel>
    in?: $Enums.kyc_status_enum[] | ListEnumkyc_status_enumFieldRefInput<$PrismaModel>
    notIn?: $Enums.kyc_status_enum[] | ListEnumkyc_status_enumFieldRefInput<$PrismaModel>
    not?: NestedEnumkyc_status_enumWithAggregatesFilter<$PrismaModel> | $Enums.kyc_status_enum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumkyc_status_enumFilter<$PrismaModel>
    _max?: NestedEnumkyc_status_enumFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumtransaction_type_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_type_enum | Enumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.transaction_type_enum[] | ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.transaction_type_enum[] | ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtransaction_type_enumNullableFilter<$PrismaModel> | $Enums.transaction_type_enum | null
  }

  export type NestedEnumtransaction_status_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_status_enum | Enumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.transaction_status_enum[] | ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.transaction_status_enum[] | ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtransaction_status_enumNullableFilter<$PrismaModel> | $Enums.transaction_status_enum | null
  }

  export type NestedEnumtransaction_type_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_type_enum | Enumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.transaction_type_enum[] | ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.transaction_type_enum[] | ListEnumtransaction_type_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtransaction_type_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.transaction_type_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtransaction_type_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumtransaction_type_enumNullableFilter<$PrismaModel>
  }

  export type NestedEnumtransaction_status_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_status_enum | Enumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.transaction_status_enum[] | ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.transaction_status_enum[] | ListEnumtransaction_status_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtransaction_status_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.transaction_status_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtransaction_status_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumtransaction_status_enumNullableFilter<$PrismaModel>
  }

  export type NestedEnumuser_rolesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_roles | Enumuser_rolesFieldRefInput<$PrismaModel>
    in?: $Enums.user_roles[] | ListEnumuser_rolesFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_roles[] | ListEnumuser_rolesFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_rolesFilter<$PrismaModel> | $Enums.user_roles
  }

  export type NestedEnumuser_rolesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_roles | Enumuser_rolesFieldRefInput<$PrismaModel>
    in?: $Enums.user_roles[] | ListEnumuser_rolesFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_roles[] | ListEnumuser_rolesFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_rolesWithAggregatesFilter<$PrismaModel> | $Enums.user_roles
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_rolesFilter<$PrismaModel>
    _max?: NestedEnumuser_rolesFilter<$PrismaModel>
  }

  export type kyc_level_1CreateWithoutAddressInput = {
    kyc_level_1_id?: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
    foto_dokumen?: foto_dokumenCreateNestedOneWithoutKyc_level_1Input
    user: userCreateNestedOneWithoutKyc_level_1Input
  }

  export type kyc_level_1UncheckedCreateWithoutAddressInput = {
    kyc_level_1_id?: string
    user_id: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
    foto_dokumen?: foto_dokumenUncheckedCreateNestedOneWithoutKyc_level_1Input
  }

  export type kyc_level_1CreateOrConnectWithoutAddressInput = {
    where: kyc_level_1WhereUniqueInput
    create: XOR<kyc_level_1CreateWithoutAddressInput, kyc_level_1UncheckedCreateWithoutAddressInput>
  }

  export type kyc_level_1UpsertWithoutAddressInput = {
    update: XOR<kyc_level_1UpdateWithoutAddressInput, kyc_level_1UncheckedUpdateWithoutAddressInput>
    create: XOR<kyc_level_1CreateWithoutAddressInput, kyc_level_1UncheckedCreateWithoutAddressInput>
    where?: kyc_level_1WhereInput
  }

  export type kyc_level_1UpdateToOneWithWhereWithoutAddressInput = {
    where?: kyc_level_1WhereInput
    data: XOR<kyc_level_1UpdateWithoutAddressInput, kyc_level_1UncheckedUpdateWithoutAddressInput>
  }

  export type kyc_level_1UpdateWithoutAddressInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    foto_dokumen?: foto_dokumenUpdateOneWithoutKyc_level_1NestedInput
    user?: userUpdateOneRequiredWithoutKyc_level_1NestedInput
  }

  export type kyc_level_1UncheckedUpdateWithoutAddressInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    foto_dokumen?: foto_dokumenUncheckedUpdateOneWithoutKyc_level_1NestedInput
  }

  export type campaignCreateWithoutAlamat_usahaInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutAlamat_usahaInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutAlamat_usahaInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutAlamat_usahaInput, campaignUncheckedCreateWithoutAlamat_usahaInput>
  }

  export type campaignUpsertWithoutAlamat_usahaInput = {
    update: XOR<campaignUpdateWithoutAlamat_usahaInput, campaignUncheckedUpdateWithoutAlamat_usahaInput>
    create: XOR<campaignCreateWithoutAlamat_usahaInput, campaignUncheckedCreateWithoutAlamat_usahaInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutAlamat_usahaInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutAlamat_usahaInput, campaignUncheckedUpdateWithoutAlamat_usahaInput>
  }

  export type campaignUpdateWithoutAlamat_usahaInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutAlamat_usahaInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type alamat_usahaCreateWithoutCampaignInput = {
    alamat_usaha_id: string
    address?: string | null
    kecamatan?: string | null
    kota?: string | null
    provinsi?: string | null
    kode_pos?: string | null
    lat?: Decimal | DecimalJsLike | number | string | null
    lgn?: Decimal | DecimalJsLike | number | string | null
  }

  export type alamat_usahaUncheckedCreateWithoutCampaignInput = {
    alamat_usaha_id: string
    address?: string | null
    kecamatan?: string | null
    kota?: string | null
    provinsi?: string | null
    kode_pos?: string | null
    lat?: Decimal | DecimalJsLike | number | string | null
    lgn?: Decimal | DecimalJsLike | number | string | null
  }

  export type alamat_usahaCreateOrConnectWithoutCampaignInput = {
    where: alamat_usahaWhereUniqueInput
    create: XOR<alamat_usahaCreateWithoutCampaignInput, alamat_usahaUncheckedCreateWithoutCampaignInput>
  }

  export type userCreateWithoutCampaignInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCampaignInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCampaignInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCampaignInput, userUncheckedCreateWithoutCampaignInput>
  }

  export type campaign_updateCreateWithoutCampaignInput = {
    update_id: string
    update_title?: string | null
    update_detail?: string | null
    published_at?: Date | string
  }

  export type campaign_updateUncheckedCreateWithoutCampaignInput = {
    update_id: string
    update_title?: string | null
    update_detail?: string | null
    published_at?: Date | string
  }

  export type campaign_updateCreateOrConnectWithoutCampaignInput = {
    where: campaign_updateWhereUniqueInput
    create: XOR<campaign_updateCreateWithoutCampaignInput, campaign_updateUncheckedCreateWithoutCampaignInput>
  }

  export type campaign_updateCreateManyCampaignInputEnvelope = {
    data: campaign_updateCreateManyCampaignInput | campaign_updateCreateManyCampaignInput[]
    skipDuplicates?: boolean
  }

  export type contact_usahaCreateWithoutCampaignInput = {
    contact_id: string
    telepon_wa?: string | null
    fax?: string | null
    email?: string | null
    website?: string | null
  }

  export type contact_usahaUncheckedCreateWithoutCampaignInput = {
    contact_id: string
    telepon_wa?: string | null
    fax?: string | null
    email?: string | null
    website?: string | null
  }

  export type contact_usahaCreateOrConnectWithoutCampaignInput = {
    where: contact_usahaWhereUniqueInput
    create: XOR<contact_usahaCreateWithoutCampaignInput, contact_usahaUncheckedCreateWithoutCampaignInput>
  }

  export type crowdfundingCreateWithoutCampaignInput = {
    crowdfunding_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    data_rekening?: data_rekeningCreateNestedOneWithoutCrowdfundingInput
    highlight_product?: highlight_productCreateNestedOneWithoutCrowdfundingInput
    product_information?: product_informationCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingUncheckedCreateWithoutCampaignInput = {
    crowdfunding_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    data_rekening?: data_rekeningUncheckedCreateNestedOneWithoutCrowdfundingInput
    highlight_product?: highlight_productUncheckedCreateNestedOneWithoutCrowdfundingInput
    product_information?: product_informationUncheckedCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingCreateOrConnectWithoutCampaignInput = {
    where: crowdfundingWhereUniqueInput
    create: XOR<crowdfundingCreateWithoutCampaignInput, crowdfundingUncheckedCreateWithoutCampaignInput>
  }

  export type discussionCreateWithoutCampaignInput = {
    discussion_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
    user: userCreateNestedOneWithoutDiscussionInput
    replies_discussion?: replies_discussionCreateNestedManyWithoutDiscussionInput
  }

  export type discussionUncheckedCreateWithoutCampaignInput = {
    discussion_id: string
    user_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
    replies_discussion?: replies_discussionUncheckedCreateNestedManyWithoutDiscussionInput
  }

  export type discussionCreateOrConnectWithoutCampaignInput = {
    where: discussionWhereUniqueInput
    create: XOR<discussionCreateWithoutCampaignInput, discussionUncheckedCreateWithoutCampaignInput>
  }

  export type discussionCreateManyCampaignInputEnvelope = {
    data: discussionCreateManyCampaignInput | discussionCreateManyCampaignInput[]
    skipDuplicates?: boolean
  }

  export type documentCreateWithoutCampaignInput = {
    document_id: string
    document_legal?: document_legalCreateNestedManyWithoutDocumentInput
    document_proposal?: document_proposalCreateNestedManyWithoutDocumentInput
  }

  export type documentUncheckedCreateWithoutCampaignInput = {
    document_id: string
    document_legal?: document_legalUncheckedCreateNestedManyWithoutDocumentInput
    document_proposal?: document_proposalUncheckedCreateNestedManyWithoutDocumentInput
  }

  export type documentCreateOrConnectWithoutCampaignInput = {
    where: documentWhereUniqueInput
    create: XOR<documentCreateWithoutCampaignInput, documentUncheckedCreateWithoutCampaignInput>
  }

  export type investmentCreateWithoutCampaignInput = {
    investment_id: string
    amount: bigint | number
    investment_date?: Date | string
    user: userCreateNestedOneWithoutInvestmentInput
  }

  export type investmentUncheckedCreateWithoutCampaignInput = {
    investment_id: string
    user_id: string
    amount: bigint | number
    investment_date?: Date | string
  }

  export type investmentCreateOrConnectWithoutCampaignInput = {
    where: investmentWhereUniqueInput
    create: XOR<investmentCreateWithoutCampaignInput, investmentUncheckedCreateWithoutCampaignInput>
  }

  export type investmentCreateManyCampaignInputEnvelope = {
    data: investmentCreateManyCampaignInput | investmentCreateManyCampaignInput[]
    skipDuplicates?: boolean
  }

  export type legalitas_usahaCreateWithoutCampaignInput = {
    legalitas_id: string
    tanggal_dibentuk?: Date | string | null
    pemilik?: string | null
    nib?: string | null
    nik_pic?: string | null
    file_perizinan?: Buffer | null
  }

  export type legalitas_usahaUncheckedCreateWithoutCampaignInput = {
    legalitas_id: string
    tanggal_dibentuk?: Date | string | null
    pemilik?: string | null
    nib?: string | null
    nik_pic?: string | null
    file_perizinan?: Buffer | null
  }

  export type legalitas_usahaCreateOrConnectWithoutCampaignInput = {
    where: legalitas_usahaWhereUniqueInput
    create: XOR<legalitas_usahaCreateWithoutCampaignInput, legalitas_usahaUncheckedCreateWithoutCampaignInput>
  }

  export type pesan_campaignCreateWithoutCampaignInput = {
    pesan_id: string
    pesan: string
    createdAt?: Date | string
    createdBy: string
  }

  export type pesan_campaignUncheckedCreateWithoutCampaignInput = {
    pesan_id: string
    pesan: string
    createdAt?: Date | string
    createdBy: string
  }

  export type pesan_campaignCreateOrConnectWithoutCampaignInput = {
    where: pesan_campaignWhereUniqueInput
    create: XOR<pesan_campaignCreateWithoutCampaignInput, pesan_campaignUncheckedCreateWithoutCampaignInput>
  }

  export type pesan_campaignCreateManyCampaignInputEnvelope = {
    data: pesan_campaignCreateManyCampaignInput | pesan_campaignCreateManyCampaignInput[]
    skipDuplicates?: boolean
  }

  export type social_media_usahaCreateWithoutCampaignInput = {
    social_media_id: string
    facebook?: string | null
    instagram?: string | null
    twitter?: string | null
    telegram?: string | null
    tiktok?: string | null
    linkedin?: string | null
    team_campaign?: team_campaignCreateNestedOneWithoutSocial_media_usahaInput
  }

  export type social_media_usahaUncheckedCreateWithoutCampaignInput = {
    social_media_id: string
    team_id?: string | null
    facebook?: string | null
    instagram?: string | null
    twitter?: string | null
    telegram?: string | null
    tiktok?: string | null
    linkedin?: string | null
  }

  export type social_media_usahaCreateOrConnectWithoutCampaignInput = {
    where: social_media_usahaWhereUniqueInput
    create: XOR<social_media_usahaCreateWithoutCampaignInput, social_media_usahaUncheckedCreateWithoutCampaignInput>
  }

  export type team_campaignCreateWithoutCampaignInput = {
    team_id: string
    nama_lengkap: string
    jabatan: string
    social_media_usaha?: social_media_usahaCreateNestedManyWithoutTeam_campaignInput
  }

  export type team_campaignUncheckedCreateWithoutCampaignInput = {
    team_id: string
    nama_lengkap: string
    jabatan: string
    social_media_usaha?: social_media_usahaUncheckedCreateNestedManyWithoutTeam_campaignInput
  }

  export type team_campaignCreateOrConnectWithoutCampaignInput = {
    where: team_campaignWhereUniqueInput
    create: XOR<team_campaignCreateWithoutCampaignInput, team_campaignUncheckedCreateWithoutCampaignInput>
  }

  export type team_campaignCreateManyCampaignInputEnvelope = {
    data: team_campaignCreateManyCampaignInput | team_campaignCreateManyCampaignInput[]
    skipDuplicates?: boolean
  }

  export type transactionCreateWithoutCampaignInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    user?: userCreateNestedOneWithoutTransactionInput
  }

  export type transactionUncheckedCreateWithoutCampaignInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    user_id?: string | null
  }

  export type transactionCreateOrConnectWithoutCampaignInput = {
    where: transactionWhereUniqueInput
    create: XOR<transactionCreateWithoutCampaignInput, transactionUncheckedCreateWithoutCampaignInput>
  }

  export type transactionCreateManyCampaignInputEnvelope = {
    data: transactionCreateManyCampaignInput | transactionCreateManyCampaignInput[]
    skipDuplicates?: boolean
  }

  export type alamat_usahaUpsertWithoutCampaignInput = {
    update: XOR<alamat_usahaUpdateWithoutCampaignInput, alamat_usahaUncheckedUpdateWithoutCampaignInput>
    create: XOR<alamat_usahaCreateWithoutCampaignInput, alamat_usahaUncheckedCreateWithoutCampaignInput>
    where?: alamat_usahaWhereInput
  }

  export type alamat_usahaUpdateToOneWithWhereWithoutCampaignInput = {
    where?: alamat_usahaWhereInput
    data: XOR<alamat_usahaUpdateWithoutCampaignInput, alamat_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type alamat_usahaUpdateWithoutCampaignInput = {
    alamat_usaha_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    kecamatan?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lgn?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type alamat_usahaUncheckedUpdateWithoutCampaignInput = {
    alamat_usaha_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    kecamatan?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lgn?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type userUpsertWithoutCampaignInput = {
    update: XOR<userUpdateWithoutCampaignInput, userUncheckedUpdateWithoutCampaignInput>
    create: XOR<userCreateWithoutCampaignInput, userUncheckedCreateWithoutCampaignInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCampaignInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCampaignInput, userUncheckedUpdateWithoutCampaignInput>
  }

  export type userUpdateWithoutCampaignInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCampaignInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type campaign_updateUpsertWithWhereUniqueWithoutCampaignInput = {
    where: campaign_updateWhereUniqueInput
    update: XOR<campaign_updateUpdateWithoutCampaignInput, campaign_updateUncheckedUpdateWithoutCampaignInput>
    create: XOR<campaign_updateCreateWithoutCampaignInput, campaign_updateUncheckedCreateWithoutCampaignInput>
  }

  export type campaign_updateUpdateWithWhereUniqueWithoutCampaignInput = {
    where: campaign_updateWhereUniqueInput
    data: XOR<campaign_updateUpdateWithoutCampaignInput, campaign_updateUncheckedUpdateWithoutCampaignInput>
  }

  export type campaign_updateUpdateManyWithWhereWithoutCampaignInput = {
    where: campaign_updateScalarWhereInput
    data: XOR<campaign_updateUpdateManyMutationInput, campaign_updateUncheckedUpdateManyWithoutCampaignInput>
  }

  export type campaign_updateScalarWhereInput = {
    AND?: campaign_updateScalarWhereInput | campaign_updateScalarWhereInput[]
    OR?: campaign_updateScalarWhereInput[]
    NOT?: campaign_updateScalarWhereInput | campaign_updateScalarWhereInput[]
    update_id?: UuidFilter<"campaign_update"> | string
    campaign_id?: UuidFilter<"campaign_update"> | string
    update_title?: StringNullableFilter<"campaign_update"> | string | null
    update_detail?: StringNullableFilter<"campaign_update"> | string | null
    published_at?: DateTimeFilter<"campaign_update"> | Date | string
  }

  export type contact_usahaUpsertWithoutCampaignInput = {
    update: XOR<contact_usahaUpdateWithoutCampaignInput, contact_usahaUncheckedUpdateWithoutCampaignInput>
    create: XOR<contact_usahaCreateWithoutCampaignInput, contact_usahaUncheckedCreateWithoutCampaignInput>
    where?: contact_usahaWhereInput
  }

  export type contact_usahaUpdateToOneWithWhereWithoutCampaignInput = {
    where?: contact_usahaWhereInput
    data: XOR<contact_usahaUpdateWithoutCampaignInput, contact_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type contact_usahaUpdateWithoutCampaignInput = {
    contact_id?: StringFieldUpdateOperationsInput | string
    telepon_wa?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type contact_usahaUncheckedUpdateWithoutCampaignInput = {
    contact_id?: StringFieldUpdateOperationsInput | string
    telepon_wa?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type crowdfundingUpsertWithoutCampaignInput = {
    update: XOR<crowdfundingUpdateWithoutCampaignInput, crowdfundingUncheckedUpdateWithoutCampaignInput>
    create: XOR<crowdfundingCreateWithoutCampaignInput, crowdfundingUncheckedCreateWithoutCampaignInput>
    where?: crowdfundingWhereInput
  }

  export type crowdfundingUpdateToOneWithWhereWithoutCampaignInput = {
    where?: crowdfundingWhereInput
    data: XOR<crowdfundingUpdateWithoutCampaignInput, crowdfundingUncheckedUpdateWithoutCampaignInput>
  }

  export type crowdfundingUpdateWithoutCampaignInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    data_rekening?: data_rekeningUpdateOneWithoutCrowdfundingNestedInput
    highlight_product?: highlight_productUpdateOneWithoutCrowdfundingNestedInput
    product_information?: product_informationUpdateOneWithoutCrowdfundingNestedInput
  }

  export type crowdfundingUncheckedUpdateWithoutCampaignInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    data_rekening?: data_rekeningUncheckedUpdateOneWithoutCrowdfundingNestedInput
    highlight_product?: highlight_productUncheckedUpdateOneWithoutCrowdfundingNestedInput
    product_information?: product_informationUncheckedUpdateOneWithoutCrowdfundingNestedInput
  }

  export type discussionUpsertWithWhereUniqueWithoutCampaignInput = {
    where: discussionWhereUniqueInput
    update: XOR<discussionUpdateWithoutCampaignInput, discussionUncheckedUpdateWithoutCampaignInput>
    create: XOR<discussionCreateWithoutCampaignInput, discussionUncheckedCreateWithoutCampaignInput>
  }

  export type discussionUpdateWithWhereUniqueWithoutCampaignInput = {
    where: discussionWhereUniqueInput
    data: XOR<discussionUpdateWithoutCampaignInput, discussionUncheckedUpdateWithoutCampaignInput>
  }

  export type discussionUpdateManyWithWhereWithoutCampaignInput = {
    where: discussionScalarWhereInput
    data: XOR<discussionUpdateManyMutationInput, discussionUncheckedUpdateManyWithoutCampaignInput>
  }

  export type discussionScalarWhereInput = {
    AND?: discussionScalarWhereInput | discussionScalarWhereInput[]
    OR?: discussionScalarWhereInput[]
    NOT?: discussionScalarWhereInput | discussionScalarWhereInput[]
    discussion_id?: UuidFilter<"discussion"> | string
    campaign_id?: UuidFilter<"discussion"> | string
    user_id?: UuidFilter<"discussion"> | string
    createdAt?: DateTimeFilter<"discussion"> | Date | string
    lastActivity?: DateTimeNullableFilter<"discussion"> | Date | string | null
    message?: StringFilter<"discussion"> | string
    like?: IntNullableFilter<"discussion"> | number | null
  }

  export type documentUpsertWithoutCampaignInput = {
    update: XOR<documentUpdateWithoutCampaignInput, documentUncheckedUpdateWithoutCampaignInput>
    create: XOR<documentCreateWithoutCampaignInput, documentUncheckedCreateWithoutCampaignInput>
    where?: documentWhereInput
  }

  export type documentUpdateToOneWithWhereWithoutCampaignInput = {
    where?: documentWhereInput
    data: XOR<documentUpdateWithoutCampaignInput, documentUncheckedUpdateWithoutCampaignInput>
  }

  export type documentUpdateWithoutCampaignInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    document_legal?: document_legalUpdateManyWithoutDocumentNestedInput
    document_proposal?: document_proposalUpdateManyWithoutDocumentNestedInput
  }

  export type documentUncheckedUpdateWithoutCampaignInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    document_legal?: document_legalUncheckedUpdateManyWithoutDocumentNestedInput
    document_proposal?: document_proposalUncheckedUpdateManyWithoutDocumentNestedInput
  }

  export type investmentUpsertWithWhereUniqueWithoutCampaignInput = {
    where: investmentWhereUniqueInput
    update: XOR<investmentUpdateWithoutCampaignInput, investmentUncheckedUpdateWithoutCampaignInput>
    create: XOR<investmentCreateWithoutCampaignInput, investmentUncheckedCreateWithoutCampaignInput>
  }

  export type investmentUpdateWithWhereUniqueWithoutCampaignInput = {
    where: investmentWhereUniqueInput
    data: XOR<investmentUpdateWithoutCampaignInput, investmentUncheckedUpdateWithoutCampaignInput>
  }

  export type investmentUpdateManyWithWhereWithoutCampaignInput = {
    where: investmentScalarWhereInput
    data: XOR<investmentUpdateManyMutationInput, investmentUncheckedUpdateManyWithoutCampaignInput>
  }

  export type investmentScalarWhereInput = {
    AND?: investmentScalarWhereInput | investmentScalarWhereInput[]
    OR?: investmentScalarWhereInput[]
    NOT?: investmentScalarWhereInput | investmentScalarWhereInput[]
    investment_id?: UuidFilter<"investment"> | string
    campaign_id?: UuidFilter<"investment"> | string
    user_id?: UuidFilter<"investment"> | string
    amount?: BigIntFilter<"investment"> | bigint | number
    investment_date?: DateTimeFilter<"investment"> | Date | string
  }

  export type legalitas_usahaUpsertWithoutCampaignInput = {
    update: XOR<legalitas_usahaUpdateWithoutCampaignInput, legalitas_usahaUncheckedUpdateWithoutCampaignInput>
    create: XOR<legalitas_usahaCreateWithoutCampaignInput, legalitas_usahaUncheckedCreateWithoutCampaignInput>
    where?: legalitas_usahaWhereInput
  }

  export type legalitas_usahaUpdateToOneWithWhereWithoutCampaignInput = {
    where?: legalitas_usahaWhereInput
    data: XOR<legalitas_usahaUpdateWithoutCampaignInput, legalitas_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type legalitas_usahaUpdateWithoutCampaignInput = {
    legalitas_id?: StringFieldUpdateOperationsInput | string
    tanggal_dibentuk?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pemilik?: NullableStringFieldUpdateOperationsInput | string | null
    nib?: NullableStringFieldUpdateOperationsInput | string | null
    nik_pic?: NullableStringFieldUpdateOperationsInput | string | null
    file_perizinan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type legalitas_usahaUncheckedUpdateWithoutCampaignInput = {
    legalitas_id?: StringFieldUpdateOperationsInput | string
    tanggal_dibentuk?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pemilik?: NullableStringFieldUpdateOperationsInput | string | null
    nib?: NullableStringFieldUpdateOperationsInput | string | null
    nik_pic?: NullableStringFieldUpdateOperationsInput | string | null
    file_perizinan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type pesan_campaignUpsertWithWhereUniqueWithoutCampaignInput = {
    where: pesan_campaignWhereUniqueInput
    update: XOR<pesan_campaignUpdateWithoutCampaignInput, pesan_campaignUncheckedUpdateWithoutCampaignInput>
    create: XOR<pesan_campaignCreateWithoutCampaignInput, pesan_campaignUncheckedCreateWithoutCampaignInput>
  }

  export type pesan_campaignUpdateWithWhereUniqueWithoutCampaignInput = {
    where: pesan_campaignWhereUniqueInput
    data: XOR<pesan_campaignUpdateWithoutCampaignInput, pesan_campaignUncheckedUpdateWithoutCampaignInput>
  }

  export type pesan_campaignUpdateManyWithWhereWithoutCampaignInput = {
    where: pesan_campaignScalarWhereInput
    data: XOR<pesan_campaignUpdateManyMutationInput, pesan_campaignUncheckedUpdateManyWithoutCampaignInput>
  }

  export type pesan_campaignScalarWhereInput = {
    AND?: pesan_campaignScalarWhereInput | pesan_campaignScalarWhereInput[]
    OR?: pesan_campaignScalarWhereInput[]
    NOT?: pesan_campaignScalarWhereInput | pesan_campaignScalarWhereInput[]
    pesan_id?: UuidFilter<"pesan_campaign"> | string
    campaign_id?: UuidFilter<"pesan_campaign"> | string
    pesan?: StringFilter<"pesan_campaign"> | string
    createdAt?: DateTimeFilter<"pesan_campaign"> | Date | string
    createdBy?: StringFilter<"pesan_campaign"> | string
  }

  export type social_media_usahaUpsertWithoutCampaignInput = {
    update: XOR<social_media_usahaUpdateWithoutCampaignInput, social_media_usahaUncheckedUpdateWithoutCampaignInput>
    create: XOR<social_media_usahaCreateWithoutCampaignInput, social_media_usahaUncheckedCreateWithoutCampaignInput>
    where?: social_media_usahaWhereInput
  }

  export type social_media_usahaUpdateToOneWithWhereWithoutCampaignInput = {
    where?: social_media_usahaWhereInput
    data: XOR<social_media_usahaUpdateWithoutCampaignInput, social_media_usahaUncheckedUpdateWithoutCampaignInput>
  }

  export type social_media_usahaUpdateWithoutCampaignInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    team_campaign?: team_campaignUpdateOneWithoutSocial_media_usahaNestedInput
  }

  export type social_media_usahaUncheckedUpdateWithoutCampaignInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    team_id?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type team_campaignUpsertWithWhereUniqueWithoutCampaignInput = {
    where: team_campaignWhereUniqueInput
    update: XOR<team_campaignUpdateWithoutCampaignInput, team_campaignUncheckedUpdateWithoutCampaignInput>
    create: XOR<team_campaignCreateWithoutCampaignInput, team_campaignUncheckedCreateWithoutCampaignInput>
  }

  export type team_campaignUpdateWithWhereUniqueWithoutCampaignInput = {
    where: team_campaignWhereUniqueInput
    data: XOR<team_campaignUpdateWithoutCampaignInput, team_campaignUncheckedUpdateWithoutCampaignInput>
  }

  export type team_campaignUpdateManyWithWhereWithoutCampaignInput = {
    where: team_campaignScalarWhereInput
    data: XOR<team_campaignUpdateManyMutationInput, team_campaignUncheckedUpdateManyWithoutCampaignInput>
  }

  export type team_campaignScalarWhereInput = {
    AND?: team_campaignScalarWhereInput | team_campaignScalarWhereInput[]
    OR?: team_campaignScalarWhereInput[]
    NOT?: team_campaignScalarWhereInput | team_campaignScalarWhereInput[]
    team_id?: UuidFilter<"team_campaign"> | string
    campaign_id?: UuidFilter<"team_campaign"> | string
    nama_lengkap?: StringFilter<"team_campaign"> | string
    jabatan?: StringFilter<"team_campaign"> | string
  }

  export type transactionUpsertWithWhereUniqueWithoutCampaignInput = {
    where: transactionWhereUniqueInput
    update: XOR<transactionUpdateWithoutCampaignInput, transactionUncheckedUpdateWithoutCampaignInput>
    create: XOR<transactionCreateWithoutCampaignInput, transactionUncheckedCreateWithoutCampaignInput>
  }

  export type transactionUpdateWithWhereUniqueWithoutCampaignInput = {
    where: transactionWhereUniqueInput
    data: XOR<transactionUpdateWithoutCampaignInput, transactionUncheckedUpdateWithoutCampaignInput>
  }

  export type transactionUpdateManyWithWhereWithoutCampaignInput = {
    where: transactionScalarWhereInput
    data: XOR<transactionUpdateManyMutationInput, transactionUncheckedUpdateManyWithoutCampaignInput>
  }

  export type transactionScalarWhereInput = {
    AND?: transactionScalarWhereInput | transactionScalarWhereInput[]
    OR?: transactionScalarWhereInput[]
    NOT?: transactionScalarWhereInput | transactionScalarWhereInput[]
    transaction_id?: UuidFilter<"transaction"> | string
    transaction_type?: Enumtransaction_type_enumNullableFilter<"transaction"> | $Enums.transaction_type_enum | null
    transaction_status?: Enumtransaction_status_enumNullableFilter<"transaction"> | $Enums.transaction_status_enum | null
    trans_date?: DateTimeNullableFilter<"transaction"> | Date | string | null
    payment?: StringNullableFilter<"transaction"> | string | null
    amount?: BigIntNullableFilter<"transaction"> | bigint | number | null
    campaign_id?: UuidNullableFilter<"transaction"> | string | null
    user_id?: UuidNullableFilter<"transaction"> | string | null
  }

  export type campaignCreateWithoutCampaign_updateInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutCampaign_updateInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutCampaign_updateInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutCampaign_updateInput, campaignUncheckedCreateWithoutCampaign_updateInput>
  }

  export type campaignUpsertWithoutCampaign_updateInput = {
    update: XOR<campaignUpdateWithoutCampaign_updateInput, campaignUncheckedUpdateWithoutCampaign_updateInput>
    create: XOR<campaignCreateWithoutCampaign_updateInput, campaignUncheckedCreateWithoutCampaign_updateInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutCampaign_updateInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutCampaign_updateInput, campaignUncheckedUpdateWithoutCampaign_updateInput>
  }

  export type campaignUpdateWithoutCampaign_updateInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutCampaign_updateInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type community_membershipCreateWithoutCommunityInput = {
    community_membership_id: string
    joinedDate?: Date | string
    exited_date?: Date | string | null
    user: userCreateNestedOneWithoutCommunity_membershipInput
  }

  export type community_membershipUncheckedCreateWithoutCommunityInput = {
    community_membership_id: string
    user_id: string
    joinedDate?: Date | string
    exited_date?: Date | string | null
  }

  export type community_membershipCreateOrConnectWithoutCommunityInput = {
    where: community_membershipWhereUniqueInput
    create: XOR<community_membershipCreateWithoutCommunityInput, community_membershipUncheckedCreateWithoutCommunityInput>
  }

  export type community_proposalCreateWithoutCommunityInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community_chat?: community_chatCreateNestedManyWithoutCommunity_proposalInput
    user_voted?: user_votedCreateNestedManyWithoutCommunity_proposalInput
  }

  export type community_proposalUncheckedCreateWithoutCommunityInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community_chat?: community_chatUncheckedCreateNestedManyWithoutCommunity_proposalInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutCommunity_proposalInput
  }

  export type community_proposalCreateOrConnectWithoutCommunityInput = {
    where: community_proposalWhereUniqueInput
    create: XOR<community_proposalCreateWithoutCommunityInput, community_proposalUncheckedCreateWithoutCommunityInput>
  }

  export type community_proposalCreateManyCommunityInputEnvelope = {
    data: community_proposalCreateManyCommunityInput | community_proposalCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type community_membershipUpsertWithoutCommunityInput = {
    update: XOR<community_membershipUpdateWithoutCommunityInput, community_membershipUncheckedUpdateWithoutCommunityInput>
    create: XOR<community_membershipCreateWithoutCommunityInput, community_membershipUncheckedCreateWithoutCommunityInput>
    where?: community_membershipWhereInput
  }

  export type community_membershipUpdateToOneWithWhereWithoutCommunityInput = {
    where?: community_membershipWhereInput
    data: XOR<community_membershipUpdateWithoutCommunityInput, community_membershipUncheckedUpdateWithoutCommunityInput>
  }

  export type community_membershipUpdateWithoutCommunityInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutCommunity_membershipNestedInput
  }

  export type community_membershipUncheckedUpdateWithoutCommunityInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_proposalUpsertWithWhereUniqueWithoutCommunityInput = {
    where: community_proposalWhereUniqueInput
    update: XOR<community_proposalUpdateWithoutCommunityInput, community_proposalUncheckedUpdateWithoutCommunityInput>
    create: XOR<community_proposalCreateWithoutCommunityInput, community_proposalUncheckedCreateWithoutCommunityInput>
  }

  export type community_proposalUpdateWithWhereUniqueWithoutCommunityInput = {
    where: community_proposalWhereUniqueInput
    data: XOR<community_proposalUpdateWithoutCommunityInput, community_proposalUncheckedUpdateWithoutCommunityInput>
  }

  export type community_proposalUpdateManyWithWhereWithoutCommunityInput = {
    where: community_proposalScalarWhereInput
    data: XOR<community_proposalUpdateManyMutationInput, community_proposalUncheckedUpdateManyWithoutCommunityInput>
  }

  export type community_proposalScalarWhereInput = {
    AND?: community_proposalScalarWhereInput | community_proposalScalarWhereInput[]
    OR?: community_proposalScalarWhereInput[]
    NOT?: community_proposalScalarWhereInput | community_proposalScalarWhereInput[]
    proposal_com_id?: UuidFilter<"community_proposal"> | string
    setuju?: IntFilter<"community_proposal"> | number
    tidak_setuju?: IntFilter<"community_proposal"> | number
    abstain?: IntFilter<"community_proposal"> | number
    title?: StringFilter<"community_proposal"> | string
    deskripsi?: StringNullableFilter<"community_proposal"> | string | null
    file_tambahan?: BytesNullableFilter<"community_proposal"> | Buffer | null
    amount?: BigIntFilter<"community_proposal"> | bigint | number
    community_id?: UuidFilter<"community_proposal"> | string
  }

  export type community_proposalCreateWithoutCommunity_chatInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community: communityCreateNestedOneWithoutCommunity_proposalInput
    user_voted?: user_votedCreateNestedManyWithoutCommunity_proposalInput
  }

  export type community_proposalUncheckedCreateWithoutCommunity_chatInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community_id: string
    user_voted?: user_votedUncheckedCreateNestedManyWithoutCommunity_proposalInput
  }

  export type community_proposalCreateOrConnectWithoutCommunity_chatInput = {
    where: community_proposalWhereUniqueInput
    create: XOR<community_proposalCreateWithoutCommunity_chatInput, community_proposalUncheckedCreateWithoutCommunity_chatInput>
  }

  export type userCreateWithoutCommunity_chatInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCommunity_chatInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCommunity_chatInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCommunity_chatInput, userUncheckedCreateWithoutCommunity_chatInput>
  }

  export type community_proposalUpsertWithoutCommunity_chatInput = {
    update: XOR<community_proposalUpdateWithoutCommunity_chatInput, community_proposalUncheckedUpdateWithoutCommunity_chatInput>
    create: XOR<community_proposalCreateWithoutCommunity_chatInput, community_proposalUncheckedCreateWithoutCommunity_chatInput>
    where?: community_proposalWhereInput
  }

  export type community_proposalUpdateToOneWithWhereWithoutCommunity_chatInput = {
    where?: community_proposalWhereInput
    data: XOR<community_proposalUpdateWithoutCommunity_chatInput, community_proposalUncheckedUpdateWithoutCommunity_chatInput>
  }

  export type community_proposalUpdateWithoutCommunity_chatInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community?: communityUpdateOneRequiredWithoutCommunity_proposalNestedInput
    user_voted?: user_votedUpdateManyWithoutCommunity_proposalNestedInput
  }

  export type community_proposalUncheckedUpdateWithoutCommunity_chatInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community_id?: StringFieldUpdateOperationsInput | string
    user_voted?: user_votedUncheckedUpdateManyWithoutCommunity_proposalNestedInput
  }

  export type userUpsertWithoutCommunity_chatInput = {
    update: XOR<userUpdateWithoutCommunity_chatInput, userUncheckedUpdateWithoutCommunity_chatInput>
    create: XOR<userCreateWithoutCommunity_chatInput, userUncheckedCreateWithoutCommunity_chatInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCommunity_chatInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCommunity_chatInput, userUncheckedUpdateWithoutCommunity_chatInput>
  }

  export type userUpdateWithoutCommunity_chatInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCommunity_chatInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type communityCreateWithoutCommunity_membershipInput = {
    community_id: string
    campaign_id: string
    community_proposal?: community_proposalCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateWithoutCommunity_membershipInput = {
    community_id: string
    campaign_id: string
    community_proposal?: community_proposalUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityCreateOrConnectWithoutCommunity_membershipInput = {
    where: communityWhereUniqueInput
    create: XOR<communityCreateWithoutCommunity_membershipInput, communityUncheckedCreateWithoutCommunity_membershipInput>
  }

  export type userCreateWithoutCommunity_membershipInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutCommunity_membershipInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutCommunity_membershipInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCommunity_membershipInput, userUncheckedCreateWithoutCommunity_membershipInput>
  }

  export type communityUpsertWithoutCommunity_membershipInput = {
    update: XOR<communityUpdateWithoutCommunity_membershipInput, communityUncheckedUpdateWithoutCommunity_membershipInput>
    create: XOR<communityCreateWithoutCommunity_membershipInput, communityUncheckedCreateWithoutCommunity_membershipInput>
    where?: communityWhereInput
  }

  export type communityUpdateToOneWithWhereWithoutCommunity_membershipInput = {
    where?: communityWhereInput
    data: XOR<communityUpdateWithoutCommunity_membershipInput, communityUncheckedUpdateWithoutCommunity_membershipInput>
  }

  export type communityUpdateWithoutCommunity_membershipInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    community_proposal?: community_proposalUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateWithoutCommunity_membershipInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    community_proposal?: community_proposalUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type userUpsertWithoutCommunity_membershipInput = {
    update: XOR<userUpdateWithoutCommunity_membershipInput, userUncheckedUpdateWithoutCommunity_membershipInput>
    create: XOR<userCreateWithoutCommunity_membershipInput, userUncheckedCreateWithoutCommunity_membershipInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCommunity_membershipInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCommunity_membershipInput, userUncheckedUpdateWithoutCommunity_membershipInput>
  }

  export type userUpdateWithoutCommunity_membershipInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCommunity_membershipInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type community_chatCreateWithoutCommunity_proposalInput = {
    chat_id: string
    chat: string
    created_at?: Date | string
    user: userCreateNestedOneWithoutCommunity_chatInput
  }

  export type community_chatUncheckedCreateWithoutCommunity_proposalInput = {
    chat_id: string
    chat: string
    user_id: string
    created_at?: Date | string
  }

  export type community_chatCreateOrConnectWithoutCommunity_proposalInput = {
    where: community_chatWhereUniqueInput
    create: XOR<community_chatCreateWithoutCommunity_proposalInput, community_chatUncheckedCreateWithoutCommunity_proposalInput>
  }

  export type community_chatCreateManyCommunity_proposalInputEnvelope = {
    data: community_chatCreateManyCommunity_proposalInput | community_chatCreateManyCommunity_proposalInput[]
    skipDuplicates?: boolean
  }

  export type communityCreateWithoutCommunity_proposalInput = {
    community_id: string
    campaign_id: string
    community_membership?: community_membershipCreateNestedOneWithoutCommunityInput
  }

  export type communityUncheckedCreateWithoutCommunity_proposalInput = {
    community_id: string
    campaign_id: string
    community_membership?: community_membershipUncheckedCreateNestedOneWithoutCommunityInput
  }

  export type communityCreateOrConnectWithoutCommunity_proposalInput = {
    where: communityWhereUniqueInput
    create: XOR<communityCreateWithoutCommunity_proposalInput, communityUncheckedCreateWithoutCommunity_proposalInput>
  }

  export type user_votedCreateWithoutCommunity_proposalInput = {
    user_voted_id: string
    user: userCreateNestedOneWithoutUser_votedInput
  }

  export type user_votedUncheckedCreateWithoutCommunity_proposalInput = {
    user_voted_id: string
    user_id: string
  }

  export type user_votedCreateOrConnectWithoutCommunity_proposalInput = {
    where: user_votedWhereUniqueInput
    create: XOR<user_votedCreateWithoutCommunity_proposalInput, user_votedUncheckedCreateWithoutCommunity_proposalInput>
  }

  export type user_votedCreateManyCommunity_proposalInputEnvelope = {
    data: user_votedCreateManyCommunity_proposalInput | user_votedCreateManyCommunity_proposalInput[]
    skipDuplicates?: boolean
  }

  export type community_chatUpsertWithWhereUniqueWithoutCommunity_proposalInput = {
    where: community_chatWhereUniqueInput
    update: XOR<community_chatUpdateWithoutCommunity_proposalInput, community_chatUncheckedUpdateWithoutCommunity_proposalInput>
    create: XOR<community_chatCreateWithoutCommunity_proposalInput, community_chatUncheckedCreateWithoutCommunity_proposalInput>
  }

  export type community_chatUpdateWithWhereUniqueWithoutCommunity_proposalInput = {
    where: community_chatWhereUniqueInput
    data: XOR<community_chatUpdateWithoutCommunity_proposalInput, community_chatUncheckedUpdateWithoutCommunity_proposalInput>
  }

  export type community_chatUpdateManyWithWhereWithoutCommunity_proposalInput = {
    where: community_chatScalarWhereInput
    data: XOR<community_chatUpdateManyMutationInput, community_chatUncheckedUpdateManyWithoutCommunity_proposalInput>
  }

  export type community_chatScalarWhereInput = {
    AND?: community_chatScalarWhereInput | community_chatScalarWhereInput[]
    OR?: community_chatScalarWhereInput[]
    NOT?: community_chatScalarWhereInput | community_chatScalarWhereInput[]
    chat_id?: UuidFilter<"community_chat"> | string
    community_proposal_id?: UuidFilter<"community_chat"> | string
    chat?: StringFilter<"community_chat"> | string
    user_id?: UuidFilter<"community_chat"> | string
    created_at?: DateTimeFilter<"community_chat"> | Date | string
  }

  export type communityUpsertWithoutCommunity_proposalInput = {
    update: XOR<communityUpdateWithoutCommunity_proposalInput, communityUncheckedUpdateWithoutCommunity_proposalInput>
    create: XOR<communityCreateWithoutCommunity_proposalInput, communityUncheckedCreateWithoutCommunity_proposalInput>
    where?: communityWhereInput
  }

  export type communityUpdateToOneWithWhereWithoutCommunity_proposalInput = {
    where?: communityWhereInput
    data: XOR<communityUpdateWithoutCommunity_proposalInput, communityUncheckedUpdateWithoutCommunity_proposalInput>
  }

  export type communityUpdateWithoutCommunity_proposalInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    community_membership?: community_membershipUpdateOneWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateWithoutCommunity_proposalInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    community_membership?: community_membershipUncheckedUpdateOneWithoutCommunityNestedInput
  }

  export type user_votedUpsertWithWhereUniqueWithoutCommunity_proposalInput = {
    where: user_votedWhereUniqueInput
    update: XOR<user_votedUpdateWithoutCommunity_proposalInput, user_votedUncheckedUpdateWithoutCommunity_proposalInput>
    create: XOR<user_votedCreateWithoutCommunity_proposalInput, user_votedUncheckedCreateWithoutCommunity_proposalInput>
  }

  export type user_votedUpdateWithWhereUniqueWithoutCommunity_proposalInput = {
    where: user_votedWhereUniqueInput
    data: XOR<user_votedUpdateWithoutCommunity_proposalInput, user_votedUncheckedUpdateWithoutCommunity_proposalInput>
  }

  export type user_votedUpdateManyWithWhereWithoutCommunity_proposalInput = {
    where: user_votedScalarWhereInput
    data: XOR<user_votedUpdateManyMutationInput, user_votedUncheckedUpdateManyWithoutCommunity_proposalInput>
  }

  export type user_votedScalarWhereInput = {
    AND?: user_votedScalarWhereInput | user_votedScalarWhereInput[]
    OR?: user_votedScalarWhereInput[]
    NOT?: user_votedScalarWhereInput | user_votedScalarWhereInput[]
    user_voted_id?: UuidFilter<"user_voted"> | string
    community_proposal_id?: UuidFilter<"user_voted"> | string
    user_id?: UuidFilter<"user_voted"> | string
  }

  export type campaignCreateWithoutContact_usahaInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutContact_usahaInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutContact_usahaInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutContact_usahaInput, campaignUncheckedCreateWithoutContact_usahaInput>
  }

  export type campaignUpsertWithoutContact_usahaInput = {
    update: XOR<campaignUpdateWithoutContact_usahaInput, campaignUncheckedUpdateWithoutContact_usahaInput>
    create: XOR<campaignCreateWithoutContact_usahaInput, campaignUncheckedCreateWithoutContact_usahaInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutContact_usahaInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutContact_usahaInput, campaignUncheckedUpdateWithoutContact_usahaInput>
  }

  export type campaignUpdateWithoutContact_usahaInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutContact_usahaInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type campaignCreateWithoutCrowdfundingInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutCrowdfundingInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutCrowdfundingInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutCrowdfundingInput, campaignUncheckedCreateWithoutCrowdfundingInput>
  }

  export type data_rekeningCreateWithoutCrowdfundingInput = {
    rekening_id: string
    nama_rekening?: string | null
    nama_bank?: string | null
    nomor_rekening?: string | null
  }

  export type data_rekeningUncheckedCreateWithoutCrowdfundingInput = {
    rekening_id: string
    nama_rekening?: string | null
    nama_bank?: string | null
    nomor_rekening?: string | null
  }

  export type data_rekeningCreateOrConnectWithoutCrowdfundingInput = {
    where: data_rekeningWhereUniqueInput
    create: XOR<data_rekeningCreateWithoutCrowdfundingInput, data_rekeningUncheckedCreateWithoutCrowdfundingInput>
  }

  export type highlight_productCreateWithoutCrowdfundingInput = {
    highlight_product_id: number
    highlight?: string | null
  }

  export type highlight_productUncheckedCreateWithoutCrowdfundingInput = {
    highlight_product_id: number
    highlight?: string | null
  }

  export type highlight_productCreateOrConnectWithoutCrowdfundingInput = {
    where: highlight_productWhereUniqueInput
    create: XOR<highlight_productCreateWithoutCrowdfundingInput, highlight_productUncheckedCreateWithoutCrowdfundingInput>
  }

  export type product_informationCreateWithoutCrowdfundingInput = {
    product_info_id: number
    link_video?: string | null
    product_info?: string | null
  }

  export type product_informationUncheckedCreateWithoutCrowdfundingInput = {
    product_info_id: number
    link_video?: string | null
    product_info?: string | null
  }

  export type product_informationCreateOrConnectWithoutCrowdfundingInput = {
    where: product_informationWhereUniqueInput
    create: XOR<product_informationCreateWithoutCrowdfundingInput, product_informationUncheckedCreateWithoutCrowdfundingInput>
  }

  export type campaignUpsertWithoutCrowdfundingInput = {
    update: XOR<campaignUpdateWithoutCrowdfundingInput, campaignUncheckedUpdateWithoutCrowdfundingInput>
    create: XOR<campaignCreateWithoutCrowdfundingInput, campaignUncheckedCreateWithoutCrowdfundingInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutCrowdfundingInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutCrowdfundingInput, campaignUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type campaignUpdateWithoutCrowdfundingInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutCrowdfundingInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type data_rekeningUpsertWithoutCrowdfundingInput = {
    update: XOR<data_rekeningUpdateWithoutCrowdfundingInput, data_rekeningUncheckedUpdateWithoutCrowdfundingInput>
    create: XOR<data_rekeningCreateWithoutCrowdfundingInput, data_rekeningUncheckedCreateWithoutCrowdfundingInput>
    where?: data_rekeningWhereInput
  }

  export type data_rekeningUpdateToOneWithWhereWithoutCrowdfundingInput = {
    where?: data_rekeningWhereInput
    data: XOR<data_rekeningUpdateWithoutCrowdfundingInput, data_rekeningUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type data_rekeningUpdateWithoutCrowdfundingInput = {
    rekening_id?: StringFieldUpdateOperationsInput | string
    nama_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_rekening?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type data_rekeningUncheckedUpdateWithoutCrowdfundingInput = {
    rekening_id?: StringFieldUpdateOperationsInput | string
    nama_rekening?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_rekening?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highlight_productUpsertWithoutCrowdfundingInput = {
    update: XOR<highlight_productUpdateWithoutCrowdfundingInput, highlight_productUncheckedUpdateWithoutCrowdfundingInput>
    create: XOR<highlight_productCreateWithoutCrowdfundingInput, highlight_productUncheckedCreateWithoutCrowdfundingInput>
    where?: highlight_productWhereInput
  }

  export type highlight_productUpdateToOneWithWhereWithoutCrowdfundingInput = {
    where?: highlight_productWhereInput
    data: XOR<highlight_productUpdateWithoutCrowdfundingInput, highlight_productUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type highlight_productUpdateWithoutCrowdfundingInput = {
    highlight_product_id?: IntFieldUpdateOperationsInput | number
    highlight?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highlight_productUncheckedUpdateWithoutCrowdfundingInput = {
    highlight_product_id?: IntFieldUpdateOperationsInput | number
    highlight?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_informationUpsertWithoutCrowdfundingInput = {
    update: XOR<product_informationUpdateWithoutCrowdfundingInput, product_informationUncheckedUpdateWithoutCrowdfundingInput>
    create: XOR<product_informationCreateWithoutCrowdfundingInput, product_informationUncheckedCreateWithoutCrowdfundingInput>
    where?: product_informationWhereInput
  }

  export type product_informationUpdateToOneWithWhereWithoutCrowdfundingInput = {
    where?: product_informationWhereInput
    data: XOR<product_informationUpdateWithoutCrowdfundingInput, product_informationUncheckedUpdateWithoutCrowdfundingInput>
  }

  export type product_informationUpdateWithoutCrowdfundingInput = {
    product_info_id?: IntFieldUpdateOperationsInput | number
    link_video?: NullableStringFieldUpdateOperationsInput | string | null
    product_info?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_informationUncheckedUpdateWithoutCrowdfundingInput = {
    product_info_id?: IntFieldUpdateOperationsInput | number
    link_video?: NullableStringFieldUpdateOperationsInput | string | null
    product_info?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type crowdfundingCreateWithoutData_rekeningInput = {
    crowdfunding_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    campaign: campaignCreateNestedOneWithoutCrowdfundingInput
    highlight_product?: highlight_productCreateNestedOneWithoutCrowdfundingInput
    product_information?: product_informationCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingUncheckedCreateWithoutData_rekeningInput = {
    crowdfunding_id: string
    campaign_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    highlight_product?: highlight_productUncheckedCreateNestedOneWithoutCrowdfundingInput
    product_information?: product_informationUncheckedCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingCreateOrConnectWithoutData_rekeningInput = {
    where: crowdfundingWhereUniqueInput
    create: XOR<crowdfundingCreateWithoutData_rekeningInput, crowdfundingUncheckedCreateWithoutData_rekeningInput>
  }

  export type crowdfundingUpsertWithoutData_rekeningInput = {
    update: XOR<crowdfundingUpdateWithoutData_rekeningInput, crowdfundingUncheckedUpdateWithoutData_rekeningInput>
    create: XOR<crowdfundingCreateWithoutData_rekeningInput, crowdfundingUncheckedCreateWithoutData_rekeningInput>
    where?: crowdfundingWhereInput
  }

  export type crowdfundingUpdateToOneWithWhereWithoutData_rekeningInput = {
    where?: crowdfundingWhereInput
    data: XOR<crowdfundingUpdateWithoutData_rekeningInput, crowdfundingUncheckedUpdateWithoutData_rekeningInput>
  }

  export type crowdfundingUpdateWithoutData_rekeningInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    campaign?: campaignUpdateOneRequiredWithoutCrowdfundingNestedInput
    highlight_product?: highlight_productUpdateOneWithoutCrowdfundingNestedInput
    product_information?: product_informationUpdateOneWithoutCrowdfundingNestedInput
  }

  export type crowdfundingUncheckedUpdateWithoutData_rekeningInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    highlight_product?: highlight_productUncheckedUpdateOneWithoutCrowdfundingNestedInput
    product_information?: product_informationUncheckedUpdateOneWithoutCrowdfundingNestedInput
  }

  export type campaignCreateWithoutDiscussionInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutDiscussionInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutDiscussionInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutDiscussionInput, campaignUncheckedCreateWithoutDiscussionInput>
  }

  export type userCreateWithoutDiscussionInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutDiscussionInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutDiscussionInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutDiscussionInput, userUncheckedCreateWithoutDiscussionInput>
  }

  export type replies_discussionCreateWithoutDiscussionInput = {
    replie_id: string
    createdAt?: Date | string
    message: string
    like?: number | null
  }

  export type replies_discussionUncheckedCreateWithoutDiscussionInput = {
    replie_id: string
    createdAt?: Date | string
    message: string
    like?: number | null
  }

  export type replies_discussionCreateOrConnectWithoutDiscussionInput = {
    where: replies_discussionWhereUniqueInput
    create: XOR<replies_discussionCreateWithoutDiscussionInput, replies_discussionUncheckedCreateWithoutDiscussionInput>
  }

  export type replies_discussionCreateManyDiscussionInputEnvelope = {
    data: replies_discussionCreateManyDiscussionInput | replies_discussionCreateManyDiscussionInput[]
    skipDuplicates?: boolean
  }

  export type campaignUpsertWithoutDiscussionInput = {
    update: XOR<campaignUpdateWithoutDiscussionInput, campaignUncheckedUpdateWithoutDiscussionInput>
    create: XOR<campaignCreateWithoutDiscussionInput, campaignUncheckedCreateWithoutDiscussionInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutDiscussionInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutDiscussionInput, campaignUncheckedUpdateWithoutDiscussionInput>
  }

  export type campaignUpdateWithoutDiscussionInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutDiscussionInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type userUpsertWithoutDiscussionInput = {
    update: XOR<userUpdateWithoutDiscussionInput, userUncheckedUpdateWithoutDiscussionInput>
    create: XOR<userCreateWithoutDiscussionInput, userUncheckedCreateWithoutDiscussionInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutDiscussionInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutDiscussionInput, userUncheckedUpdateWithoutDiscussionInput>
  }

  export type userUpdateWithoutDiscussionInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutDiscussionInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type replies_discussionUpsertWithWhereUniqueWithoutDiscussionInput = {
    where: replies_discussionWhereUniqueInput
    update: XOR<replies_discussionUpdateWithoutDiscussionInput, replies_discussionUncheckedUpdateWithoutDiscussionInput>
    create: XOR<replies_discussionCreateWithoutDiscussionInput, replies_discussionUncheckedCreateWithoutDiscussionInput>
  }

  export type replies_discussionUpdateWithWhereUniqueWithoutDiscussionInput = {
    where: replies_discussionWhereUniqueInput
    data: XOR<replies_discussionUpdateWithoutDiscussionInput, replies_discussionUncheckedUpdateWithoutDiscussionInput>
  }

  export type replies_discussionUpdateManyWithWhereWithoutDiscussionInput = {
    where: replies_discussionScalarWhereInput
    data: XOR<replies_discussionUpdateManyMutationInput, replies_discussionUncheckedUpdateManyWithoutDiscussionInput>
  }

  export type replies_discussionScalarWhereInput = {
    AND?: replies_discussionScalarWhereInput | replies_discussionScalarWhereInput[]
    OR?: replies_discussionScalarWhereInput[]
    NOT?: replies_discussionScalarWhereInput | replies_discussionScalarWhereInput[]
    replie_id?: UuidFilter<"replies_discussion"> | string
    discussion_id?: UuidFilter<"replies_discussion"> | string
    createdAt?: DateTimeFilter<"replies_discussion"> | Date | string
    message?: StringFilter<"replies_discussion"> | string
    like?: IntNullableFilter<"replies_discussion"> | number | null
  }

  export type campaignCreateWithoutDocumentInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutDocumentInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutDocumentInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutDocumentInput, campaignUncheckedCreateWithoutDocumentInput>
  }

  export type document_legalCreateWithoutDocumentInput = {
    document_legal_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_legalUncheckedCreateWithoutDocumentInput = {
    document_legal_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_legalCreateOrConnectWithoutDocumentInput = {
    where: document_legalWhereUniqueInput
    create: XOR<document_legalCreateWithoutDocumentInput, document_legalUncheckedCreateWithoutDocumentInput>
  }

  export type document_legalCreateManyDocumentInputEnvelope = {
    data: document_legalCreateManyDocumentInput | document_legalCreateManyDocumentInput[]
    skipDuplicates?: boolean
  }

  export type document_proposalCreateWithoutDocumentInput = {
    document_proposal_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_proposalUncheckedCreateWithoutDocumentInput = {
    document_proposal_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_proposalCreateOrConnectWithoutDocumentInput = {
    where: document_proposalWhereUniqueInput
    create: XOR<document_proposalCreateWithoutDocumentInput, document_proposalUncheckedCreateWithoutDocumentInput>
  }

  export type document_proposalCreateManyDocumentInputEnvelope = {
    data: document_proposalCreateManyDocumentInput | document_proposalCreateManyDocumentInput[]
    skipDuplicates?: boolean
  }

  export type campaignUpsertWithoutDocumentInput = {
    update: XOR<campaignUpdateWithoutDocumentInput, campaignUncheckedUpdateWithoutDocumentInput>
    create: XOR<campaignCreateWithoutDocumentInput, campaignUncheckedCreateWithoutDocumentInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutDocumentInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutDocumentInput, campaignUncheckedUpdateWithoutDocumentInput>
  }

  export type campaignUpdateWithoutDocumentInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutDocumentInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type document_legalUpsertWithWhereUniqueWithoutDocumentInput = {
    where: document_legalWhereUniqueInput
    update: XOR<document_legalUpdateWithoutDocumentInput, document_legalUncheckedUpdateWithoutDocumentInput>
    create: XOR<document_legalCreateWithoutDocumentInput, document_legalUncheckedCreateWithoutDocumentInput>
  }

  export type document_legalUpdateWithWhereUniqueWithoutDocumentInput = {
    where: document_legalWhereUniqueInput
    data: XOR<document_legalUpdateWithoutDocumentInput, document_legalUncheckedUpdateWithoutDocumentInput>
  }

  export type document_legalUpdateManyWithWhereWithoutDocumentInput = {
    where: document_legalScalarWhereInput
    data: XOR<document_legalUpdateManyMutationInput, document_legalUncheckedUpdateManyWithoutDocumentInput>
  }

  export type document_legalScalarWhereInput = {
    AND?: document_legalScalarWhereInput | document_legalScalarWhereInput[]
    OR?: document_legalScalarWhereInput[]
    NOT?: document_legalScalarWhereInput | document_legalScalarWhereInput[]
    document_legal_id?: UuidFilter<"document_legal"> | string
    document_id?: UuidFilter<"document_legal"> | string
    nama_dokumen?: StringNullableFilter<"document_legal"> | string | null
    file?: BytesNullableFilter<"document_legal"> | Buffer | null
  }

  export type document_proposalUpsertWithWhereUniqueWithoutDocumentInput = {
    where: document_proposalWhereUniqueInput
    update: XOR<document_proposalUpdateWithoutDocumentInput, document_proposalUncheckedUpdateWithoutDocumentInput>
    create: XOR<document_proposalCreateWithoutDocumentInput, document_proposalUncheckedCreateWithoutDocumentInput>
  }

  export type document_proposalUpdateWithWhereUniqueWithoutDocumentInput = {
    where: document_proposalWhereUniqueInput
    data: XOR<document_proposalUpdateWithoutDocumentInput, document_proposalUncheckedUpdateWithoutDocumentInput>
  }

  export type document_proposalUpdateManyWithWhereWithoutDocumentInput = {
    where: document_proposalScalarWhereInput
    data: XOR<document_proposalUpdateManyMutationInput, document_proposalUncheckedUpdateManyWithoutDocumentInput>
  }

  export type document_proposalScalarWhereInput = {
    AND?: document_proposalScalarWhereInput | document_proposalScalarWhereInput[]
    OR?: document_proposalScalarWhereInput[]
    NOT?: document_proposalScalarWhereInput | document_proposalScalarWhereInput[]
    document_proposal_id?: UuidFilter<"document_proposal"> | string
    document_id?: UuidFilter<"document_proposal"> | string
    nama_dokumen?: StringNullableFilter<"document_proposal"> | string | null
    file?: BytesNullableFilter<"document_proposal"> | Buffer | null
  }

  export type documentCreateWithoutDocument_legalInput = {
    document_id: string
    campaign: campaignCreateNestedOneWithoutDocumentInput
    document_proposal?: document_proposalCreateNestedManyWithoutDocumentInput
  }

  export type documentUncheckedCreateWithoutDocument_legalInput = {
    document_id: string
    campaign_id: string
    document_proposal?: document_proposalUncheckedCreateNestedManyWithoutDocumentInput
  }

  export type documentCreateOrConnectWithoutDocument_legalInput = {
    where: documentWhereUniqueInput
    create: XOR<documentCreateWithoutDocument_legalInput, documentUncheckedCreateWithoutDocument_legalInput>
  }

  export type documentUpsertWithoutDocument_legalInput = {
    update: XOR<documentUpdateWithoutDocument_legalInput, documentUncheckedUpdateWithoutDocument_legalInput>
    create: XOR<documentCreateWithoutDocument_legalInput, documentUncheckedCreateWithoutDocument_legalInput>
    where?: documentWhereInput
  }

  export type documentUpdateToOneWithWhereWithoutDocument_legalInput = {
    where?: documentWhereInput
    data: XOR<documentUpdateWithoutDocument_legalInput, documentUncheckedUpdateWithoutDocument_legalInput>
  }

  export type documentUpdateWithoutDocument_legalInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    campaign?: campaignUpdateOneRequiredWithoutDocumentNestedInput
    document_proposal?: document_proposalUpdateManyWithoutDocumentNestedInput
  }

  export type documentUncheckedUpdateWithoutDocument_legalInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    document_proposal?: document_proposalUncheckedUpdateManyWithoutDocumentNestedInput
  }

  export type documentCreateWithoutDocument_proposalInput = {
    document_id: string
    campaign: campaignCreateNestedOneWithoutDocumentInput
    document_legal?: document_legalCreateNestedManyWithoutDocumentInput
  }

  export type documentUncheckedCreateWithoutDocument_proposalInput = {
    document_id: string
    campaign_id: string
    document_legal?: document_legalUncheckedCreateNestedManyWithoutDocumentInput
  }

  export type documentCreateOrConnectWithoutDocument_proposalInput = {
    where: documentWhereUniqueInput
    create: XOR<documentCreateWithoutDocument_proposalInput, documentUncheckedCreateWithoutDocument_proposalInput>
  }

  export type documentUpsertWithoutDocument_proposalInput = {
    update: XOR<documentUpdateWithoutDocument_proposalInput, documentUncheckedUpdateWithoutDocument_proposalInput>
    create: XOR<documentCreateWithoutDocument_proposalInput, documentUncheckedCreateWithoutDocument_proposalInput>
    where?: documentWhereInput
  }

  export type documentUpdateToOneWithWhereWithoutDocument_proposalInput = {
    where?: documentWhereInput
    data: XOR<documentUpdateWithoutDocument_proposalInput, documentUncheckedUpdateWithoutDocument_proposalInput>
  }

  export type documentUpdateWithoutDocument_proposalInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    campaign?: campaignUpdateOneRequiredWithoutDocumentNestedInput
    document_legal?: document_legalUpdateManyWithoutDocumentNestedInput
  }

  export type documentUncheckedUpdateWithoutDocument_proposalInput = {
    document_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    document_legal?: document_legalUncheckedUpdateManyWithoutDocumentNestedInput
  }

  export type kyc_level_1CreateWithoutFoto_dokumenInput = {
    kyc_level_1_id?: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
    address?: addressCreateNestedOneWithoutKyc_level_1Input
    user: userCreateNestedOneWithoutKyc_level_1Input
  }

  export type kyc_level_1UncheckedCreateWithoutFoto_dokumenInput = {
    kyc_level_1_id?: string
    user_id: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
    address?: addressUncheckedCreateNestedOneWithoutKyc_level_1Input
  }

  export type kyc_level_1CreateOrConnectWithoutFoto_dokumenInput = {
    where: kyc_level_1WhereUniqueInput
    create: XOR<kyc_level_1CreateWithoutFoto_dokumenInput, kyc_level_1UncheckedCreateWithoutFoto_dokumenInput>
  }

  export type kyc_level_1UpsertWithoutFoto_dokumenInput = {
    update: XOR<kyc_level_1UpdateWithoutFoto_dokumenInput, kyc_level_1UncheckedUpdateWithoutFoto_dokumenInput>
    create: XOR<kyc_level_1CreateWithoutFoto_dokumenInput, kyc_level_1UncheckedCreateWithoutFoto_dokumenInput>
    where?: kyc_level_1WhereInput
  }

  export type kyc_level_1UpdateToOneWithWhereWithoutFoto_dokumenInput = {
    where?: kyc_level_1WhereInput
    data: XOR<kyc_level_1UpdateWithoutFoto_dokumenInput, kyc_level_1UncheckedUpdateWithoutFoto_dokumenInput>
  }

  export type kyc_level_1UpdateWithoutFoto_dokumenInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: addressUpdateOneWithoutKyc_level_1NestedInput
    user?: userUpdateOneRequiredWithoutKyc_level_1NestedInput
  }

  export type kyc_level_1UncheckedUpdateWithoutFoto_dokumenInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: addressUncheckedUpdateOneWithoutKyc_level_1NestedInput
  }

  export type crowdfundingCreateWithoutHighlight_productInput = {
    crowdfunding_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    campaign: campaignCreateNestedOneWithoutCrowdfundingInput
    data_rekening?: data_rekeningCreateNestedOneWithoutCrowdfundingInput
    product_information?: product_informationCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingUncheckedCreateWithoutHighlight_productInput = {
    crowdfunding_id: string
    campaign_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    data_rekening?: data_rekeningUncheckedCreateNestedOneWithoutCrowdfundingInput
    product_information?: product_informationUncheckedCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingCreateOrConnectWithoutHighlight_productInput = {
    where: crowdfundingWhereUniqueInput
    create: XOR<crowdfundingCreateWithoutHighlight_productInput, crowdfundingUncheckedCreateWithoutHighlight_productInput>
  }

  export type crowdfundingUpsertWithoutHighlight_productInput = {
    update: XOR<crowdfundingUpdateWithoutHighlight_productInput, crowdfundingUncheckedUpdateWithoutHighlight_productInput>
    create: XOR<crowdfundingCreateWithoutHighlight_productInput, crowdfundingUncheckedCreateWithoutHighlight_productInput>
    where?: crowdfundingWhereInput
  }

  export type crowdfundingUpdateToOneWithWhereWithoutHighlight_productInput = {
    where?: crowdfundingWhereInput
    data: XOR<crowdfundingUpdateWithoutHighlight_productInput, crowdfundingUncheckedUpdateWithoutHighlight_productInput>
  }

  export type crowdfundingUpdateWithoutHighlight_productInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    campaign?: campaignUpdateOneRequiredWithoutCrowdfundingNestedInput
    data_rekening?: data_rekeningUpdateOneWithoutCrowdfundingNestedInput
    product_information?: product_informationUpdateOneWithoutCrowdfundingNestedInput
  }

  export type crowdfundingUncheckedUpdateWithoutHighlight_productInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    data_rekening?: data_rekeningUncheckedUpdateOneWithoutCrowdfundingNestedInput
    product_information?: product_informationUncheckedUpdateOneWithoutCrowdfundingNestedInput
  }

  export type campaignCreateWithoutInvestmentInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutInvestmentInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutInvestmentInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutInvestmentInput, campaignUncheckedCreateWithoutInvestmentInput>
  }

  export type userCreateWithoutInvestmentInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutInvestmentInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutInvestmentInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutInvestmentInput, userUncheckedCreateWithoutInvestmentInput>
  }

  export type campaignUpsertWithoutInvestmentInput = {
    update: XOR<campaignUpdateWithoutInvestmentInput, campaignUncheckedUpdateWithoutInvestmentInput>
    create: XOR<campaignCreateWithoutInvestmentInput, campaignUncheckedCreateWithoutInvestmentInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutInvestmentInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutInvestmentInput, campaignUncheckedUpdateWithoutInvestmentInput>
  }

  export type campaignUpdateWithoutInvestmentInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutInvestmentInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type userUpsertWithoutInvestmentInput = {
    update: XOR<userUpdateWithoutInvestmentInput, userUncheckedUpdateWithoutInvestmentInput>
    create: XOR<userCreateWithoutInvestmentInput, userUncheckedCreateWithoutInvestmentInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutInvestmentInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutInvestmentInput, userUncheckedUpdateWithoutInvestmentInput>
  }

  export type userUpdateWithoutInvestmentInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutInvestmentInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type addressCreateWithoutKyc_level_1Input = {
    address_id?: string
    address: string
    kecamatan: string
    kota: string
    provinsi: string
    kode_pos: string
  }

  export type addressUncheckedCreateWithoutKyc_level_1Input = {
    address_id?: string
    address: string
    kecamatan: string
    kota: string
    provinsi: string
    kode_pos: string
  }

  export type addressCreateOrConnectWithoutKyc_level_1Input = {
    where: addressWhereUniqueInput
    create: XOR<addressCreateWithoutKyc_level_1Input, addressUncheckedCreateWithoutKyc_level_1Input>
  }

  export type foto_dokumenCreateWithoutKyc_level_1Input = {
    foto_dokumen_id?: string
    foto_ktp_depan: Buffer
    foto_ktp_belakang: Buffer
    foto_selfie: Buffer
  }

  export type foto_dokumenUncheckedCreateWithoutKyc_level_1Input = {
    foto_dokumen_id?: string
    foto_ktp_depan: Buffer
    foto_ktp_belakang: Buffer
    foto_selfie: Buffer
  }

  export type foto_dokumenCreateOrConnectWithoutKyc_level_1Input = {
    where: foto_dokumenWhereUniqueInput
    create: XOR<foto_dokumenCreateWithoutKyc_level_1Input, foto_dokumenUncheckedCreateWithoutKyc_level_1Input>
  }

  export type userCreateWithoutKyc_level_1Input = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutKyc_level_1Input = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutKyc_level_1Input = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutKyc_level_1Input, userUncheckedCreateWithoutKyc_level_1Input>
  }

  export type addressUpsertWithoutKyc_level_1Input = {
    update: XOR<addressUpdateWithoutKyc_level_1Input, addressUncheckedUpdateWithoutKyc_level_1Input>
    create: XOR<addressCreateWithoutKyc_level_1Input, addressUncheckedCreateWithoutKyc_level_1Input>
    where?: addressWhereInput
  }

  export type addressUpdateToOneWithWhereWithoutKyc_level_1Input = {
    where?: addressWhereInput
    data: XOR<addressUpdateWithoutKyc_level_1Input, addressUncheckedUpdateWithoutKyc_level_1Input>
  }

  export type addressUpdateWithoutKyc_level_1Input = {
    address_id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kota?: StringFieldUpdateOperationsInput | string
    provinsi?: StringFieldUpdateOperationsInput | string
    kode_pos?: StringFieldUpdateOperationsInput | string
  }

  export type addressUncheckedUpdateWithoutKyc_level_1Input = {
    address_id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kota?: StringFieldUpdateOperationsInput | string
    provinsi?: StringFieldUpdateOperationsInput | string
    kode_pos?: StringFieldUpdateOperationsInput | string
  }

  export type foto_dokumenUpsertWithoutKyc_level_1Input = {
    update: XOR<foto_dokumenUpdateWithoutKyc_level_1Input, foto_dokumenUncheckedUpdateWithoutKyc_level_1Input>
    create: XOR<foto_dokumenCreateWithoutKyc_level_1Input, foto_dokumenUncheckedCreateWithoutKyc_level_1Input>
    where?: foto_dokumenWhereInput
  }

  export type foto_dokumenUpdateToOneWithWhereWithoutKyc_level_1Input = {
    where?: foto_dokumenWhereInput
    data: XOR<foto_dokumenUpdateWithoutKyc_level_1Input, foto_dokumenUncheckedUpdateWithoutKyc_level_1Input>
  }

  export type foto_dokumenUpdateWithoutKyc_level_1Input = {
    foto_dokumen_id?: StringFieldUpdateOperationsInput | string
    foto_ktp_depan?: BytesFieldUpdateOperationsInput | Buffer
    foto_ktp_belakang?: BytesFieldUpdateOperationsInput | Buffer
    foto_selfie?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type foto_dokumenUncheckedUpdateWithoutKyc_level_1Input = {
    foto_dokumen_id?: StringFieldUpdateOperationsInput | string
    foto_ktp_depan?: BytesFieldUpdateOperationsInput | Buffer
    foto_ktp_belakang?: BytesFieldUpdateOperationsInput | Buffer
    foto_selfie?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type userUpsertWithoutKyc_level_1Input = {
    update: XOR<userUpdateWithoutKyc_level_1Input, userUncheckedUpdateWithoutKyc_level_1Input>
    create: XOR<userCreateWithoutKyc_level_1Input, userUncheckedCreateWithoutKyc_level_1Input>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutKyc_level_1Input = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutKyc_level_1Input, userUncheckedUpdateWithoutKyc_level_1Input>
  }

  export type userUpdateWithoutKyc_level_1Input = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutKyc_level_1Input = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateWithoutKyc_level_2Input = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutKyc_level_2Input = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutKyc_level_2Input = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutKyc_level_2Input, userUncheckedCreateWithoutKyc_level_2Input>
  }

  export type userUpsertWithoutKyc_level_2Input = {
    update: XOR<userUpdateWithoutKyc_level_2Input, userUncheckedUpdateWithoutKyc_level_2Input>
    create: XOR<userCreateWithoutKyc_level_2Input, userUncheckedCreateWithoutKyc_level_2Input>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutKyc_level_2Input = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutKyc_level_2Input, userUncheckedUpdateWithoutKyc_level_2Input>
  }

  export type userUpdateWithoutKyc_level_2Input = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutKyc_level_2Input = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type campaignCreateWithoutLegalitas_usahaInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutLegalitas_usahaInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutLegalitas_usahaInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutLegalitas_usahaInput, campaignUncheckedCreateWithoutLegalitas_usahaInput>
  }

  export type campaignUpsertWithoutLegalitas_usahaInput = {
    update: XOR<campaignUpdateWithoutLegalitas_usahaInput, campaignUncheckedUpdateWithoutLegalitas_usahaInput>
    create: XOR<campaignCreateWithoutLegalitas_usahaInput, campaignUncheckedCreateWithoutLegalitas_usahaInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutLegalitas_usahaInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutLegalitas_usahaInput, campaignUncheckedUpdateWithoutLegalitas_usahaInput>
  }

  export type campaignUpdateWithoutLegalitas_usahaInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutLegalitas_usahaInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type campaignCreateWithoutPesan_campaignInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutPesan_campaignInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutPesan_campaignInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutPesan_campaignInput, campaignUncheckedCreateWithoutPesan_campaignInput>
  }

  export type campaignUpsertWithoutPesan_campaignInput = {
    update: XOR<campaignUpdateWithoutPesan_campaignInput, campaignUncheckedUpdateWithoutPesan_campaignInput>
    create: XOR<campaignCreateWithoutPesan_campaignInput, campaignUncheckedCreateWithoutPesan_campaignInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutPesan_campaignInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutPesan_campaignInput, campaignUncheckedUpdateWithoutPesan_campaignInput>
  }

  export type campaignUpdateWithoutPesan_campaignInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutPesan_campaignInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type crowdfundingCreateWithoutProduct_informationInput = {
    crowdfunding_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    campaign: campaignCreateNestedOneWithoutCrowdfundingInput
    data_rekening?: data_rekeningCreateNestedOneWithoutCrowdfundingInput
    highlight_product?: highlight_productCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingUncheckedCreateWithoutProduct_informationInput = {
    crowdfunding_id: string
    campaign_id: string
    target_raise?: bigint | number | null
    equity_dijual?: Decimal | DecimalJsLike | number | string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    fund_raised?: bigint | number
    data_rekening?: data_rekeningUncheckedCreateNestedOneWithoutCrowdfundingInput
    highlight_product?: highlight_productUncheckedCreateNestedOneWithoutCrowdfundingInput
  }

  export type crowdfundingCreateOrConnectWithoutProduct_informationInput = {
    where: crowdfundingWhereUniqueInput
    create: XOR<crowdfundingCreateWithoutProduct_informationInput, crowdfundingUncheckedCreateWithoutProduct_informationInput>
  }

  export type crowdfundingUpsertWithoutProduct_informationInput = {
    update: XOR<crowdfundingUpdateWithoutProduct_informationInput, crowdfundingUncheckedUpdateWithoutProduct_informationInput>
    create: XOR<crowdfundingCreateWithoutProduct_informationInput, crowdfundingUncheckedCreateWithoutProduct_informationInput>
    where?: crowdfundingWhereInput
  }

  export type crowdfundingUpdateToOneWithWhereWithoutProduct_informationInput = {
    where?: crowdfundingWhereInput
    data: XOR<crowdfundingUpdateWithoutProduct_informationInput, crowdfundingUncheckedUpdateWithoutProduct_informationInput>
  }

  export type crowdfundingUpdateWithoutProduct_informationInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    campaign?: campaignUpdateOneRequiredWithoutCrowdfundingNestedInput
    data_rekening?: data_rekeningUpdateOneWithoutCrowdfundingNestedInput
    highlight_product?: highlight_productUpdateOneWithoutCrowdfundingNestedInput
  }

  export type crowdfundingUncheckedUpdateWithoutProduct_informationInput = {
    crowdfunding_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    target_raise?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    equity_dijual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund_raised?: BigIntFieldUpdateOperationsInput | bigint | number
    data_rekening?: data_rekeningUncheckedUpdateOneWithoutCrowdfundingNestedInput
    highlight_product?: highlight_productUncheckedUpdateOneWithoutCrowdfundingNestedInput
  }

  export type userCreateWithoutRefundInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutRefundInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutRefundInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutRefundInput, userUncheckedCreateWithoutRefundInput>
  }

  export type userUpsertWithoutRefundInput = {
    update: XOR<userUpdateWithoutRefundInput, userUncheckedUpdateWithoutRefundInput>
    create: XOR<userCreateWithoutRefundInput, userUncheckedCreateWithoutRefundInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutRefundInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutRefundInput, userUncheckedUpdateWithoutRefundInput>
  }

  export type userUpdateWithoutRefundInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutRefundInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type discussionCreateWithoutReplies_discussionInput = {
    discussion_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
    campaign: campaignCreateNestedOneWithoutDiscussionInput
    user: userCreateNestedOneWithoutDiscussionInput
  }

  export type discussionUncheckedCreateWithoutReplies_discussionInput = {
    discussion_id: string
    campaign_id: string
    user_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
  }

  export type discussionCreateOrConnectWithoutReplies_discussionInput = {
    where: discussionWhereUniqueInput
    create: XOR<discussionCreateWithoutReplies_discussionInput, discussionUncheckedCreateWithoutReplies_discussionInput>
  }

  export type discussionUpsertWithoutReplies_discussionInput = {
    update: XOR<discussionUpdateWithoutReplies_discussionInput, discussionUncheckedUpdateWithoutReplies_discussionInput>
    create: XOR<discussionCreateWithoutReplies_discussionInput, discussionUncheckedCreateWithoutReplies_discussionInput>
    where?: discussionWhereInput
  }

  export type discussionUpdateToOneWithWhereWithoutReplies_discussionInput = {
    where?: discussionWhereInput
    data: XOR<discussionUpdateWithoutReplies_discussionInput, discussionUncheckedUpdateWithoutReplies_discussionInput>
  }

  export type discussionUpdateWithoutReplies_discussionInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
    campaign?: campaignUpdateOneRequiredWithoutDiscussionNestedInput
    user?: userUpdateOneRequiredWithoutDiscussionNestedInput
  }

  export type discussionUncheckedUpdateWithoutReplies_discussionInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type campaignCreateWithoutSocial_media_usahaInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutSocial_media_usahaInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutSocial_media_usahaInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutSocial_media_usahaInput, campaignUncheckedCreateWithoutSocial_media_usahaInput>
  }

  export type team_campaignCreateWithoutSocial_media_usahaInput = {
    team_id: string
    nama_lengkap: string
    jabatan: string
    campaign: campaignCreateNestedOneWithoutTeam_campaignInput
  }

  export type team_campaignUncheckedCreateWithoutSocial_media_usahaInput = {
    team_id: string
    campaign_id: string
    nama_lengkap: string
    jabatan: string
  }

  export type team_campaignCreateOrConnectWithoutSocial_media_usahaInput = {
    where: team_campaignWhereUniqueInput
    create: XOR<team_campaignCreateWithoutSocial_media_usahaInput, team_campaignUncheckedCreateWithoutSocial_media_usahaInput>
  }

  export type campaignUpsertWithoutSocial_media_usahaInput = {
    update: XOR<campaignUpdateWithoutSocial_media_usahaInput, campaignUncheckedUpdateWithoutSocial_media_usahaInput>
    create: XOR<campaignCreateWithoutSocial_media_usahaInput, campaignUncheckedCreateWithoutSocial_media_usahaInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutSocial_media_usahaInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutSocial_media_usahaInput, campaignUncheckedUpdateWithoutSocial_media_usahaInput>
  }

  export type campaignUpdateWithoutSocial_media_usahaInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutSocial_media_usahaInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type team_campaignUpsertWithoutSocial_media_usahaInput = {
    update: XOR<team_campaignUpdateWithoutSocial_media_usahaInput, team_campaignUncheckedUpdateWithoutSocial_media_usahaInput>
    create: XOR<team_campaignCreateWithoutSocial_media_usahaInput, team_campaignUncheckedCreateWithoutSocial_media_usahaInput>
    where?: team_campaignWhereInput
  }

  export type team_campaignUpdateToOneWithWhereWithoutSocial_media_usahaInput = {
    where?: team_campaignWhereInput
    data: XOR<team_campaignUpdateWithoutSocial_media_usahaInput, team_campaignUncheckedUpdateWithoutSocial_media_usahaInput>
  }

  export type team_campaignUpdateWithoutSocial_media_usahaInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    campaign?: campaignUpdateOneRequiredWithoutTeam_campaignNestedInput
  }

  export type team_campaignUncheckedUpdateWithoutSocial_media_usahaInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
  }

  export type social_media_usahaCreateWithoutTeam_campaignInput = {
    social_media_id: string
    facebook?: string | null
    instagram?: string | null
    twitter?: string | null
    telegram?: string | null
    tiktok?: string | null
    linkedin?: string | null
    campaign?: campaignCreateNestedOneWithoutSocial_media_usahaInput
  }

  export type social_media_usahaUncheckedCreateWithoutTeam_campaignInput = {
    social_media_id: string
    campaign_id?: string | null
    facebook?: string | null
    instagram?: string | null
    twitter?: string | null
    telegram?: string | null
    tiktok?: string | null
    linkedin?: string | null
  }

  export type social_media_usahaCreateOrConnectWithoutTeam_campaignInput = {
    where: social_media_usahaWhereUniqueInput
    create: XOR<social_media_usahaCreateWithoutTeam_campaignInput, social_media_usahaUncheckedCreateWithoutTeam_campaignInput>
  }

  export type social_media_usahaCreateManyTeam_campaignInputEnvelope = {
    data: social_media_usahaCreateManyTeam_campaignInput | social_media_usahaCreateManyTeam_campaignInput[]
    skipDuplicates?: boolean
  }

  export type campaignCreateWithoutTeam_campaignInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutTeam_campaignInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutTeam_campaignInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutTeam_campaignInput, campaignUncheckedCreateWithoutTeam_campaignInput>
  }

  export type social_media_usahaUpsertWithWhereUniqueWithoutTeam_campaignInput = {
    where: social_media_usahaWhereUniqueInput
    update: XOR<social_media_usahaUpdateWithoutTeam_campaignInput, social_media_usahaUncheckedUpdateWithoutTeam_campaignInput>
    create: XOR<social_media_usahaCreateWithoutTeam_campaignInput, social_media_usahaUncheckedCreateWithoutTeam_campaignInput>
  }

  export type social_media_usahaUpdateWithWhereUniqueWithoutTeam_campaignInput = {
    where: social_media_usahaWhereUniqueInput
    data: XOR<social_media_usahaUpdateWithoutTeam_campaignInput, social_media_usahaUncheckedUpdateWithoutTeam_campaignInput>
  }

  export type social_media_usahaUpdateManyWithWhereWithoutTeam_campaignInput = {
    where: social_media_usahaScalarWhereInput
    data: XOR<social_media_usahaUpdateManyMutationInput, social_media_usahaUncheckedUpdateManyWithoutTeam_campaignInput>
  }

  export type social_media_usahaScalarWhereInput = {
    AND?: social_media_usahaScalarWhereInput | social_media_usahaScalarWhereInput[]
    OR?: social_media_usahaScalarWhereInput[]
    NOT?: social_media_usahaScalarWhereInput | social_media_usahaScalarWhereInput[]
    social_media_id?: UuidFilter<"social_media_usaha"> | string
    campaign_id?: UuidNullableFilter<"social_media_usaha"> | string | null
    team_id?: UuidNullableFilter<"social_media_usaha"> | string | null
    facebook?: StringNullableFilter<"social_media_usaha"> | string | null
    instagram?: StringNullableFilter<"social_media_usaha"> | string | null
    twitter?: StringNullableFilter<"social_media_usaha"> | string | null
    telegram?: StringNullableFilter<"social_media_usaha"> | string | null
    tiktok?: StringNullableFilter<"social_media_usaha"> | string | null
    linkedin?: StringNullableFilter<"social_media_usaha"> | string | null
  }

  export type campaignUpsertWithoutTeam_campaignInput = {
    update: XOR<campaignUpdateWithoutTeam_campaignInput, campaignUncheckedUpdateWithoutTeam_campaignInput>
    create: XOR<campaignCreateWithoutTeam_campaignInput, campaignUncheckedCreateWithoutTeam_campaignInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutTeam_campaignInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutTeam_campaignInput, campaignUncheckedUpdateWithoutTeam_campaignInput>
  }

  export type campaignUpdateWithoutTeam_campaignInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutTeam_campaignInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type campaignCreateWithoutTransactionInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    user: userCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutTransactionInput = {
    campaign_id: string
    user_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutTransactionInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutTransactionInput, campaignUncheckedCreateWithoutTransactionInput>
  }

  export type userCreateWithoutTransactionInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    user_voted?: user_votedCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutTransactionInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    user_voted?: user_votedUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutTransactionInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutTransactionInput, userUncheckedCreateWithoutTransactionInput>
  }

  export type campaignUpsertWithoutTransactionInput = {
    update: XOR<campaignUpdateWithoutTransactionInput, campaignUncheckedUpdateWithoutTransactionInput>
    create: XOR<campaignCreateWithoutTransactionInput, campaignUncheckedCreateWithoutTransactionInput>
    where?: campaignWhereInput
  }

  export type campaignUpdateToOneWithWhereWithoutTransactionInput = {
    where?: campaignWhereInput
    data: XOR<campaignUpdateWithoutTransactionInput, campaignUncheckedUpdateWithoutTransactionInput>
  }

  export type campaignUpdateWithoutTransactionInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    user?: userUpdateOneRequiredWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutTransactionInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type userUpsertWithoutTransactionInput = {
    update: XOR<userUpdateWithoutTransactionInput, userUncheckedUpdateWithoutTransactionInput>
    create: XOR<userCreateWithoutTransactionInput, userUncheckedCreateWithoutTransactionInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutTransactionInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutTransactionInput, userUncheckedUpdateWithoutTransactionInput>
  }

  export type userUpdateWithoutTransactionInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutTransactionInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutUserNestedInput
  }

  export type campaignCreateWithoutUserInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingCreateNestedOneWithoutCampaignInput
    discussion?: discussionCreateNestedManyWithoutCampaignInput
    document?: documentCreateNestedOneWithoutCampaignInput
    investment?: investmentCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignCreateNestedManyWithoutCampaignInput
    transaction?: transactionCreateNestedManyWithoutCampaignInput
  }

  export type campaignUncheckedCreateWithoutUserInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedCreateNestedOneWithoutCampaignInput
    campaign_update?: campaign_updateUncheckedCreateNestedManyWithoutCampaignInput
    contact_usaha?: contact_usahaUncheckedCreateNestedOneWithoutCampaignInput
    crowdfunding?: crowdfundingUncheckedCreateNestedOneWithoutCampaignInput
    discussion?: discussionUncheckedCreateNestedManyWithoutCampaignInput
    document?: documentUncheckedCreateNestedOneWithoutCampaignInput
    investment?: investmentUncheckedCreateNestedManyWithoutCampaignInput
    legalitas_usaha?: legalitas_usahaUncheckedCreateNestedOneWithoutCampaignInput
    pesan_campaign?: pesan_campaignUncheckedCreateNestedManyWithoutCampaignInput
    social_media_usaha?: social_media_usahaUncheckedCreateNestedOneWithoutCampaignInput
    team_campaign?: team_campaignUncheckedCreateNestedManyWithoutCampaignInput
    transaction?: transactionUncheckedCreateNestedManyWithoutCampaignInput
  }

  export type campaignCreateOrConnectWithoutUserInput = {
    where: campaignWhereUniqueInput
    create: XOR<campaignCreateWithoutUserInput, campaignUncheckedCreateWithoutUserInput>
  }

  export type campaignCreateManyUserInputEnvelope = {
    data: campaignCreateManyUserInput | campaignCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type community_chatCreateWithoutUserInput = {
    chat_id: string
    chat: string
    created_at?: Date | string
    community_proposal: community_proposalCreateNestedOneWithoutCommunity_chatInput
  }

  export type community_chatUncheckedCreateWithoutUserInput = {
    chat_id: string
    community_proposal_id: string
    chat: string
    created_at?: Date | string
  }

  export type community_chatCreateOrConnectWithoutUserInput = {
    where: community_chatWhereUniqueInput
    create: XOR<community_chatCreateWithoutUserInput, community_chatUncheckedCreateWithoutUserInput>
  }

  export type community_chatCreateManyUserInputEnvelope = {
    data: community_chatCreateManyUserInput | community_chatCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type community_membershipCreateWithoutUserInput = {
    community_membership_id: string
    joinedDate?: Date | string
    exited_date?: Date | string | null
    community: communityCreateNestedOneWithoutCommunity_membershipInput
  }

  export type community_membershipUncheckedCreateWithoutUserInput = {
    community_membership_id: string
    community_id: string
    joinedDate?: Date | string
    exited_date?: Date | string | null
  }

  export type community_membershipCreateOrConnectWithoutUserInput = {
    where: community_membershipWhereUniqueInput
    create: XOR<community_membershipCreateWithoutUserInput, community_membershipUncheckedCreateWithoutUserInput>
  }

  export type community_membershipCreateManyUserInputEnvelope = {
    data: community_membershipCreateManyUserInput | community_membershipCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type discussionCreateWithoutUserInput = {
    discussion_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
    campaign: campaignCreateNestedOneWithoutDiscussionInput
    replies_discussion?: replies_discussionCreateNestedManyWithoutDiscussionInput
  }

  export type discussionUncheckedCreateWithoutUserInput = {
    discussion_id: string
    campaign_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
    replies_discussion?: replies_discussionUncheckedCreateNestedManyWithoutDiscussionInput
  }

  export type discussionCreateOrConnectWithoutUserInput = {
    where: discussionWhereUniqueInput
    create: XOR<discussionCreateWithoutUserInput, discussionUncheckedCreateWithoutUserInput>
  }

  export type discussionCreateManyUserInputEnvelope = {
    data: discussionCreateManyUserInput | discussionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type investmentCreateWithoutUserInput = {
    investment_id: string
    amount: bigint | number
    investment_date?: Date | string
    campaign: campaignCreateNestedOneWithoutInvestmentInput
  }

  export type investmentUncheckedCreateWithoutUserInput = {
    investment_id: string
    campaign_id: string
    amount: bigint | number
    investment_date?: Date | string
  }

  export type investmentCreateOrConnectWithoutUserInput = {
    where: investmentWhereUniqueInput
    create: XOR<investmentCreateWithoutUserInput, investmentUncheckedCreateWithoutUserInput>
  }

  export type investmentCreateManyUserInputEnvelope = {
    data: investmentCreateManyUserInput | investmentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type kyc_level_1CreateWithoutUserInput = {
    kyc_level_1_id?: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
    address?: addressCreateNestedOneWithoutKyc_level_1Input
    foto_dokumen?: foto_dokumenCreateNestedOneWithoutKyc_level_1Input
  }

  export type kyc_level_1UncheckedCreateWithoutUserInput = {
    kyc_level_1_id?: string
    full_name: string
    nik: string
    tanggal_lahir: Date | string
    status?: $Enums.kyc_status_enum
    createdAt?: Date | string
    updatedAt?: Date | string | null
    statusUpdate?: string | null
    jenis_kelamin: string
    isaproved?: boolean | null
    address?: addressUncheckedCreateNestedOneWithoutKyc_level_1Input
    foto_dokumen?: foto_dokumenUncheckedCreateNestedOneWithoutKyc_level_1Input
  }

  export type kyc_level_1CreateOrConnectWithoutUserInput = {
    where: kyc_level_1WhereUniqueInput
    create: XOR<kyc_level_1CreateWithoutUserInput, kyc_level_1UncheckedCreateWithoutUserInput>
  }

  export type kyc_level_2CreateWithoutUserInput = {
    kyc_level_2_id: string
    surat_skck: Buffer
    surat_domisili: Buffer
    surat_keterangan_bank: Buffer
    status?: $Enums.kyc_status_enum
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    updateStatus?: string | null
  }

  export type kyc_level_2UncheckedCreateWithoutUserInput = {
    kyc_level_2_id: string
    surat_skck: Buffer
    surat_domisili: Buffer
    surat_keterangan_bank: Buffer
    status?: $Enums.kyc_status_enum
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    updateStatus?: string | null
  }

  export type kyc_level_2CreateOrConnectWithoutUserInput = {
    where: kyc_level_2WhereUniqueInput
    create: XOR<kyc_level_2CreateWithoutUserInput, kyc_level_2UncheckedCreateWithoutUserInput>
  }

  export type refundCreateWithoutUserInput = {
    refund_id: string
    amount: bigint | number
    nama_bank?: string | null
    nomor_bank?: string | null
    alasan_refund?: string | null
    isAproved?: boolean | null
    statusUpdate?: string | null
    updatedAt?: Date | string
    createdAt?: Date | string | null
    isConfirmed?: boolean
    approved_amount?: bigint | number | null
    reason_reduce?: string | null
  }

  export type refundUncheckedCreateWithoutUserInput = {
    refund_id: string
    amount: bigint | number
    nama_bank?: string | null
    nomor_bank?: string | null
    alasan_refund?: string | null
    isAproved?: boolean | null
    statusUpdate?: string | null
    updatedAt?: Date | string
    createdAt?: Date | string | null
    isConfirmed?: boolean
    approved_amount?: bigint | number | null
    reason_reduce?: string | null
  }

  export type refundCreateOrConnectWithoutUserInput = {
    where: refundWhereUniqueInput
    create: XOR<refundCreateWithoutUserInput, refundUncheckedCreateWithoutUserInput>
  }

  export type refundCreateManyUserInputEnvelope = {
    data: refundCreateManyUserInput | refundCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type transactionCreateWithoutUserInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    campaign?: campaignCreateNestedOneWithoutTransactionInput
  }

  export type transactionUncheckedCreateWithoutUserInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    campaign_id?: string | null
  }

  export type transactionCreateOrConnectWithoutUserInput = {
    where: transactionWhereUniqueInput
    create: XOR<transactionCreateWithoutUserInput, transactionUncheckedCreateWithoutUserInput>
  }

  export type transactionCreateManyUserInputEnvelope = {
    data: transactionCreateManyUserInput | transactionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_votedCreateWithoutUserInput = {
    user_voted_id: string
    community_proposal: community_proposalCreateNestedOneWithoutUser_votedInput
  }

  export type user_votedUncheckedCreateWithoutUserInput = {
    user_voted_id: string
    community_proposal_id: string
  }

  export type user_votedCreateOrConnectWithoutUserInput = {
    where: user_votedWhereUniqueInput
    create: XOR<user_votedCreateWithoutUserInput, user_votedUncheckedCreateWithoutUserInput>
  }

  export type user_votedCreateManyUserInputEnvelope = {
    data: user_votedCreateManyUserInput | user_votedCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type campaignUpsertWithWhereUniqueWithoutUserInput = {
    where: campaignWhereUniqueInput
    update: XOR<campaignUpdateWithoutUserInput, campaignUncheckedUpdateWithoutUserInput>
    create: XOR<campaignCreateWithoutUserInput, campaignUncheckedCreateWithoutUserInput>
  }

  export type campaignUpdateWithWhereUniqueWithoutUserInput = {
    where: campaignWhereUniqueInput
    data: XOR<campaignUpdateWithoutUserInput, campaignUncheckedUpdateWithoutUserInput>
  }

  export type campaignUpdateManyWithWhereWithoutUserInput = {
    where: campaignScalarWhereInput
    data: XOR<campaignUpdateManyMutationInput, campaignUncheckedUpdateManyWithoutUserInput>
  }

  export type campaignScalarWhereInput = {
    AND?: campaignScalarWhereInput | campaignScalarWhereInput[]
    OR?: campaignScalarWhereInput[]
    NOT?: campaignScalarWhereInput | campaignScalarWhereInput[]
    campaign_id?: UuidFilter<"campaign"> | string
    user_id?: UuidFilter<"campaign"> | string
    nama_usaha?: StringFilter<"campaign"> | string
    deskripsi_usaha?: StringFilter<"campaign"> | string
    logo?: BytesNullableFilter<"campaign"> | Buffer | null
    isApproved?: BoolFilter<"campaign"> | boolean
    isPublished?: BoolFilter<"campaign"> | boolean
    createdAt?: DateTimeFilter<"campaign"> | Date | string
    updatedAt?: DateTimeNullableFilter<"campaign"> | Date | string | null
    tipe_usaha?: Enumtipe_usaha_enumNullableFilter<"campaign"> | $Enums.tipe_usaha_enum | null
    jenis_usaha?: Enumjenis_usaha_enumNullableFilter<"campaign"> | $Enums.jenis_usaha_enum | null
  }

  export type community_chatUpsertWithWhereUniqueWithoutUserInput = {
    where: community_chatWhereUniqueInput
    update: XOR<community_chatUpdateWithoutUserInput, community_chatUncheckedUpdateWithoutUserInput>
    create: XOR<community_chatCreateWithoutUserInput, community_chatUncheckedCreateWithoutUserInput>
  }

  export type community_chatUpdateWithWhereUniqueWithoutUserInput = {
    where: community_chatWhereUniqueInput
    data: XOR<community_chatUpdateWithoutUserInput, community_chatUncheckedUpdateWithoutUserInput>
  }

  export type community_chatUpdateManyWithWhereWithoutUserInput = {
    where: community_chatScalarWhereInput
    data: XOR<community_chatUpdateManyMutationInput, community_chatUncheckedUpdateManyWithoutUserInput>
  }

  export type community_membershipUpsertWithWhereUniqueWithoutUserInput = {
    where: community_membershipWhereUniqueInput
    update: XOR<community_membershipUpdateWithoutUserInput, community_membershipUncheckedUpdateWithoutUserInput>
    create: XOR<community_membershipCreateWithoutUserInput, community_membershipUncheckedCreateWithoutUserInput>
  }

  export type community_membershipUpdateWithWhereUniqueWithoutUserInput = {
    where: community_membershipWhereUniqueInput
    data: XOR<community_membershipUpdateWithoutUserInput, community_membershipUncheckedUpdateWithoutUserInput>
  }

  export type community_membershipUpdateManyWithWhereWithoutUserInput = {
    where: community_membershipScalarWhereInput
    data: XOR<community_membershipUpdateManyMutationInput, community_membershipUncheckedUpdateManyWithoutUserInput>
  }

  export type community_membershipScalarWhereInput = {
    AND?: community_membershipScalarWhereInput | community_membershipScalarWhereInput[]
    OR?: community_membershipScalarWhereInput[]
    NOT?: community_membershipScalarWhereInput | community_membershipScalarWhereInput[]
    community_membership_id?: UuidFilter<"community_membership"> | string
    community_id?: UuidFilter<"community_membership"> | string
    user_id?: UuidFilter<"community_membership"> | string
    joinedDate?: DateTimeFilter<"community_membership"> | Date | string
    exited_date?: DateTimeNullableFilter<"community_membership"> | Date | string | null
  }

  export type discussionUpsertWithWhereUniqueWithoutUserInput = {
    where: discussionWhereUniqueInput
    update: XOR<discussionUpdateWithoutUserInput, discussionUncheckedUpdateWithoutUserInput>
    create: XOR<discussionCreateWithoutUserInput, discussionUncheckedCreateWithoutUserInput>
  }

  export type discussionUpdateWithWhereUniqueWithoutUserInput = {
    where: discussionWhereUniqueInput
    data: XOR<discussionUpdateWithoutUserInput, discussionUncheckedUpdateWithoutUserInput>
  }

  export type discussionUpdateManyWithWhereWithoutUserInput = {
    where: discussionScalarWhereInput
    data: XOR<discussionUpdateManyMutationInput, discussionUncheckedUpdateManyWithoutUserInput>
  }

  export type investmentUpsertWithWhereUniqueWithoutUserInput = {
    where: investmentWhereUniqueInput
    update: XOR<investmentUpdateWithoutUserInput, investmentUncheckedUpdateWithoutUserInput>
    create: XOR<investmentCreateWithoutUserInput, investmentUncheckedCreateWithoutUserInput>
  }

  export type investmentUpdateWithWhereUniqueWithoutUserInput = {
    where: investmentWhereUniqueInput
    data: XOR<investmentUpdateWithoutUserInput, investmentUncheckedUpdateWithoutUserInput>
  }

  export type investmentUpdateManyWithWhereWithoutUserInput = {
    where: investmentScalarWhereInput
    data: XOR<investmentUpdateManyMutationInput, investmentUncheckedUpdateManyWithoutUserInput>
  }

  export type kyc_level_1UpsertWithoutUserInput = {
    update: XOR<kyc_level_1UpdateWithoutUserInput, kyc_level_1UncheckedUpdateWithoutUserInput>
    create: XOR<kyc_level_1CreateWithoutUserInput, kyc_level_1UncheckedCreateWithoutUserInput>
    where?: kyc_level_1WhereInput
  }

  export type kyc_level_1UpdateToOneWithWhereWithoutUserInput = {
    where?: kyc_level_1WhereInput
    data: XOR<kyc_level_1UpdateWithoutUserInput, kyc_level_1UncheckedUpdateWithoutUserInput>
  }

  export type kyc_level_1UpdateWithoutUserInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: addressUpdateOneWithoutKyc_level_1NestedInput
    foto_dokumen?: foto_dokumenUpdateOneWithoutKyc_level_1NestedInput
  }

  export type kyc_level_1UncheckedUpdateWithoutUserInput = {
    kyc_level_1_id?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    nik?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: StringFieldUpdateOperationsInput | string
    isaproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: addressUncheckedUpdateOneWithoutKyc_level_1NestedInput
    foto_dokumen?: foto_dokumenUncheckedUpdateOneWithoutKyc_level_1NestedInput
  }

  export type kyc_level_2UpsertWithoutUserInput = {
    update: XOR<kyc_level_2UpdateWithoutUserInput, kyc_level_2UncheckedUpdateWithoutUserInput>
    create: XOR<kyc_level_2CreateWithoutUserInput, kyc_level_2UncheckedCreateWithoutUserInput>
    where?: kyc_level_2WhereInput
  }

  export type kyc_level_2UpdateToOneWithWhereWithoutUserInput = {
    where?: kyc_level_2WhereInput
    data: XOR<kyc_level_2UpdateWithoutUserInput, kyc_level_2UncheckedUpdateWithoutUserInput>
  }

  export type kyc_level_2UpdateWithoutUserInput = {
    kyc_level_2_id?: StringFieldUpdateOperationsInput | string
    surat_skck?: BytesFieldUpdateOperationsInput | Buffer
    surat_domisili?: BytesFieldUpdateOperationsInput | Buffer
    surat_keterangan_bank?: BytesFieldUpdateOperationsInput | Buffer
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updateStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type kyc_level_2UncheckedUpdateWithoutUserInput = {
    kyc_level_2_id?: StringFieldUpdateOperationsInput | string
    surat_skck?: BytesFieldUpdateOperationsInput | Buffer
    surat_domisili?: BytesFieldUpdateOperationsInput | Buffer
    surat_keterangan_bank?: BytesFieldUpdateOperationsInput | Buffer
    status?: Enumkyc_status_enumFieldUpdateOperationsInput | $Enums.kyc_status_enum
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updateStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refundUpsertWithWhereUniqueWithoutUserInput = {
    where: refundWhereUniqueInput
    update: XOR<refundUpdateWithoutUserInput, refundUncheckedUpdateWithoutUserInput>
    create: XOR<refundCreateWithoutUserInput, refundUncheckedCreateWithoutUserInput>
  }

  export type refundUpdateWithWhereUniqueWithoutUserInput = {
    where: refundWhereUniqueInput
    data: XOR<refundUpdateWithoutUserInput, refundUncheckedUpdateWithoutUserInput>
  }

  export type refundUpdateManyWithWhereWithoutUserInput = {
    where: refundScalarWhereInput
    data: XOR<refundUpdateManyMutationInput, refundUncheckedUpdateManyWithoutUserInput>
  }

  export type refundScalarWhereInput = {
    AND?: refundScalarWhereInput | refundScalarWhereInput[]
    OR?: refundScalarWhereInput[]
    NOT?: refundScalarWhereInput | refundScalarWhereInput[]
    refund_id?: UuidFilter<"refund"> | string
    amount?: BigIntFilter<"refund"> | bigint | number
    nama_bank?: StringNullableFilter<"refund"> | string | null
    nomor_bank?: StringNullableFilter<"refund"> | string | null
    alasan_refund?: StringNullableFilter<"refund"> | string | null
    isAproved?: BoolNullableFilter<"refund"> | boolean | null
    statusUpdate?: StringNullableFilter<"refund"> | string | null
    updatedAt?: DateTimeFilter<"refund"> | Date | string
    createdAt?: DateTimeNullableFilter<"refund"> | Date | string | null
    user_id?: UuidFilter<"refund"> | string
    isConfirmed?: BoolFilter<"refund"> | boolean
    approved_amount?: BigIntNullableFilter<"refund"> | bigint | number | null
    reason_reduce?: StringNullableFilter<"refund"> | string | null
  }

  export type transactionUpsertWithWhereUniqueWithoutUserInput = {
    where: transactionWhereUniqueInput
    update: XOR<transactionUpdateWithoutUserInput, transactionUncheckedUpdateWithoutUserInput>
    create: XOR<transactionCreateWithoutUserInput, transactionUncheckedCreateWithoutUserInput>
  }

  export type transactionUpdateWithWhereUniqueWithoutUserInput = {
    where: transactionWhereUniqueInput
    data: XOR<transactionUpdateWithoutUserInput, transactionUncheckedUpdateWithoutUserInput>
  }

  export type transactionUpdateManyWithWhereWithoutUserInput = {
    where: transactionScalarWhereInput
    data: XOR<transactionUpdateManyMutationInput, transactionUncheckedUpdateManyWithoutUserInput>
  }

  export type user_votedUpsertWithWhereUniqueWithoutUserInput = {
    where: user_votedWhereUniqueInput
    update: XOR<user_votedUpdateWithoutUserInput, user_votedUncheckedUpdateWithoutUserInput>
    create: XOR<user_votedCreateWithoutUserInput, user_votedUncheckedCreateWithoutUserInput>
  }

  export type user_votedUpdateWithWhereUniqueWithoutUserInput = {
    where: user_votedWhereUniqueInput
    data: XOR<user_votedUpdateWithoutUserInput, user_votedUncheckedUpdateWithoutUserInput>
  }

  export type user_votedUpdateManyWithWhereWithoutUserInput = {
    where: user_votedScalarWhereInput
    data: XOR<user_votedUpdateManyMutationInput, user_votedUncheckedUpdateManyWithoutUserInput>
  }

  export type community_proposalCreateWithoutUser_votedInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community_chat?: community_chatCreateNestedManyWithoutCommunity_proposalInput
    community: communityCreateNestedOneWithoutCommunity_proposalInput
  }

  export type community_proposalUncheckedCreateWithoutUser_votedInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
    community_id: string
    community_chat?: community_chatUncheckedCreateNestedManyWithoutCommunity_proposalInput
  }

  export type community_proposalCreateOrConnectWithoutUser_votedInput = {
    where: community_proposalWhereUniqueInput
    create: XOR<community_proposalCreateWithoutUser_votedInput, community_proposalUncheckedCreateWithoutUser_votedInput>
  }

  export type userCreateWithoutUser_votedInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignCreateNestedManyWithoutUserInput
    community_chat?: community_chatCreateNestedManyWithoutUserInput
    community_membership?: community_membershipCreateNestedManyWithoutUserInput
    discussion?: discussionCreateNestedManyWithoutUserInput
    investment?: investmentCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1CreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2CreateNestedOneWithoutUserInput
    refund?: refundCreateNestedManyWithoutUserInput
    transaction?: transactionCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_votedInput = {
    user_id?: string
    email: string
    phone?: string | null
    password: string
    roles?: $Enums.user_roles
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    username?: string | null
    avatar?: Buffer | null
    isverified?: boolean | null
    campaign?: campaignUncheckedCreateNestedManyWithoutUserInput
    community_chat?: community_chatUncheckedCreateNestedManyWithoutUserInput
    community_membership?: community_membershipUncheckedCreateNestedManyWithoutUserInput
    discussion?: discussionUncheckedCreateNestedManyWithoutUserInput
    investment?: investmentUncheckedCreateNestedManyWithoutUserInput
    kyc_level_1?: kyc_level_1UncheckedCreateNestedOneWithoutUserInput
    kyc_level_2?: kyc_level_2UncheckedCreateNestedOneWithoutUserInput
    refund?: refundUncheckedCreateNestedManyWithoutUserInput
    transaction?: transactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_votedInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_votedInput, userUncheckedCreateWithoutUser_votedInput>
  }

  export type community_proposalUpsertWithoutUser_votedInput = {
    update: XOR<community_proposalUpdateWithoutUser_votedInput, community_proposalUncheckedUpdateWithoutUser_votedInput>
    create: XOR<community_proposalCreateWithoutUser_votedInput, community_proposalUncheckedCreateWithoutUser_votedInput>
    where?: community_proposalWhereInput
  }

  export type community_proposalUpdateToOneWithWhereWithoutUser_votedInput = {
    where?: community_proposalWhereInput
    data: XOR<community_proposalUpdateWithoutUser_votedInput, community_proposalUncheckedUpdateWithoutUser_votedInput>
  }

  export type community_proposalUpdateWithoutUser_votedInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community_chat?: community_chatUpdateManyWithoutCommunity_proposalNestedInput
    community?: communityUpdateOneRequiredWithoutCommunity_proposalNestedInput
  }

  export type community_proposalUncheckedUpdateWithoutUser_votedInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community_id?: StringFieldUpdateOperationsInput | string
    community_chat?: community_chatUncheckedUpdateManyWithoutCommunity_proposalNestedInput
  }

  export type userUpsertWithoutUser_votedInput = {
    update: XOR<userUpdateWithoutUser_votedInput, userUncheckedUpdateWithoutUser_votedInput>
    create: XOR<userCreateWithoutUser_votedInput, userUncheckedCreateWithoutUser_votedInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_votedInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_votedInput, userUncheckedUpdateWithoutUser_votedInput>
  }

  export type userUpdateWithoutUser_votedInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUpdateManyWithoutUserNestedInput
    discussion?: discussionUpdateManyWithoutUserNestedInput
    investment?: investmentUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UpdateOneWithoutUserNestedInput
    refund?: refundUpdateManyWithoutUserNestedInput
    transaction?: transactionUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_votedInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    roles?: Enumuser_rolesFieldUpdateOperationsInput | $Enums.user_roles
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isverified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    campaign?: campaignUncheckedUpdateManyWithoutUserNestedInput
    community_chat?: community_chatUncheckedUpdateManyWithoutUserNestedInput
    community_membership?: community_membershipUncheckedUpdateManyWithoutUserNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutUserNestedInput
    investment?: investmentUncheckedUpdateManyWithoutUserNestedInput
    kyc_level_1?: kyc_level_1UncheckedUpdateOneWithoutUserNestedInput
    kyc_level_2?: kyc_level_2UncheckedUpdateOneWithoutUserNestedInput
    refund?: refundUncheckedUpdateManyWithoutUserNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type campaign_updateCreateManyCampaignInput = {
    update_id: string
    update_title?: string | null
    update_detail?: string | null
    published_at?: Date | string
  }

  export type discussionCreateManyCampaignInput = {
    discussion_id: string
    user_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
  }

  export type investmentCreateManyCampaignInput = {
    investment_id: string
    user_id: string
    amount: bigint | number
    investment_date?: Date | string
  }

  export type pesan_campaignCreateManyCampaignInput = {
    pesan_id: string
    pesan: string
    createdAt?: Date | string
    createdBy: string
  }

  export type team_campaignCreateManyCampaignInput = {
    team_id: string
    nama_lengkap: string
    jabatan: string
  }

  export type transactionCreateManyCampaignInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    user_id?: string | null
  }

  export type campaign_updateUpdateWithoutCampaignInput = {
    update_id?: StringFieldUpdateOperationsInput | string
    update_title?: NullableStringFieldUpdateOperationsInput | string | null
    update_detail?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type campaign_updateUncheckedUpdateWithoutCampaignInput = {
    update_id?: StringFieldUpdateOperationsInput | string
    update_title?: NullableStringFieldUpdateOperationsInput | string | null
    update_detail?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type campaign_updateUncheckedUpdateManyWithoutCampaignInput = {
    update_id?: StringFieldUpdateOperationsInput | string
    update_title?: NullableStringFieldUpdateOperationsInput | string | null
    update_detail?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type discussionUpdateWithoutCampaignInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
    user?: userUpdateOneRequiredWithoutDiscussionNestedInput
    replies_discussion?: replies_discussionUpdateManyWithoutDiscussionNestedInput
  }

  export type discussionUncheckedUpdateWithoutCampaignInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
    replies_discussion?: replies_discussionUncheckedUpdateManyWithoutDiscussionNestedInput
  }

  export type discussionUncheckedUpdateManyWithoutCampaignInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type investmentUpdateWithoutCampaignInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutInvestmentNestedInput
  }

  export type investmentUncheckedUpdateWithoutCampaignInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type investmentUncheckedUpdateManyWithoutCampaignInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pesan_campaignUpdateWithoutCampaignInput = {
    pesan_id?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type pesan_campaignUncheckedUpdateWithoutCampaignInput = {
    pesan_id?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type pesan_campaignUncheckedUpdateManyWithoutCampaignInput = {
    pesan_id?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type team_campaignUpdateWithoutCampaignInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    social_media_usaha?: social_media_usahaUpdateManyWithoutTeam_campaignNestedInput
  }

  export type team_campaignUncheckedUpdateWithoutCampaignInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    social_media_usaha?: social_media_usahaUncheckedUpdateManyWithoutTeam_campaignNestedInput
  }

  export type team_campaignUncheckedUpdateManyWithoutCampaignInput = {
    team_id?: StringFieldUpdateOperationsInput | string
    nama_lengkap?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
  }

  export type transactionUpdateWithoutCampaignInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    user?: userUpdateOneWithoutTransactionNestedInput
  }

  export type transactionUncheckedUpdateWithoutCampaignInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transactionUncheckedUpdateManyWithoutCampaignInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type community_proposalCreateManyCommunityInput = {
    proposal_com_id: string
    setuju?: number
    tidak_setuju?: number
    abstain?: number
    title: string
    deskripsi?: string | null
    file_tambahan?: Buffer | null
    amount?: bigint | number
  }

  export type community_proposalUpdateWithoutCommunityInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community_chat?: community_chatUpdateManyWithoutCommunity_proposalNestedInput
    user_voted?: user_votedUpdateManyWithoutCommunity_proposalNestedInput
  }

  export type community_proposalUncheckedUpdateWithoutCommunityInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    community_chat?: community_chatUncheckedUpdateManyWithoutCommunity_proposalNestedInput
    user_voted?: user_votedUncheckedUpdateManyWithoutCommunity_proposalNestedInput
  }

  export type community_proposalUncheckedUpdateManyWithoutCommunityInput = {
    proposal_com_id?: StringFieldUpdateOperationsInput | string
    setuju?: IntFieldUpdateOperationsInput | number
    tidak_setuju?: IntFieldUpdateOperationsInput | number
    abstain?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    file_tambahan?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type community_chatCreateManyCommunity_proposalInput = {
    chat_id: string
    chat: string
    user_id: string
    created_at?: Date | string
  }

  export type user_votedCreateManyCommunity_proposalInput = {
    user_voted_id: string
    user_id: string
  }

  export type community_chatUpdateWithoutCommunity_proposalInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutCommunity_chatNestedInput
  }

  export type community_chatUncheckedUpdateWithoutCommunity_proposalInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_chatUncheckedUpdateManyWithoutCommunity_proposalInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_votedUpdateWithoutCommunity_proposalInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    user?: userUpdateOneRequiredWithoutUser_votedNestedInput
  }

  export type user_votedUncheckedUpdateWithoutCommunity_proposalInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type user_votedUncheckedUpdateManyWithoutCommunity_proposalInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type replies_discussionCreateManyDiscussionInput = {
    replie_id: string
    createdAt?: Date | string
    message: string
    like?: number | null
  }

  export type replies_discussionUpdateWithoutDiscussionInput = {
    replie_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type replies_discussionUncheckedUpdateWithoutDiscussionInput = {
    replie_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type replies_discussionUncheckedUpdateManyWithoutDiscussionInput = {
    replie_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type document_legalCreateManyDocumentInput = {
    document_legal_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_proposalCreateManyDocumentInput = {
    document_proposal_id: string
    nama_dokumen?: string | null
    file?: Buffer | null
  }

  export type document_legalUpdateWithoutDocumentInput = {
    document_legal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_legalUncheckedUpdateWithoutDocumentInput = {
    document_legal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_legalUncheckedUpdateManyWithoutDocumentInput = {
    document_legal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_proposalUpdateWithoutDocumentInput = {
    document_proposal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_proposalUncheckedUpdateWithoutDocumentInput = {
    document_proposal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type document_proposalUncheckedUpdateManyWithoutDocumentInput = {
    document_proposal_id?: StringFieldUpdateOperationsInput | string
    nama_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    file?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type social_media_usahaCreateManyTeam_campaignInput = {
    social_media_id: string
    campaign_id?: string | null
    facebook?: string | null
    instagram?: string | null
    twitter?: string | null
    telegram?: string | null
    tiktok?: string | null
    linkedin?: string | null
  }

  export type social_media_usahaUpdateWithoutTeam_campaignInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: campaignUpdateOneWithoutSocial_media_usahaNestedInput
  }

  export type social_media_usahaUncheckedUpdateWithoutTeam_campaignInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type social_media_usahaUncheckedUpdateManyWithoutTeam_campaignInput = {
    social_media_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type campaignCreateManyUserInput = {
    campaign_id: string
    nama_usaha: string
    deskripsi_usaha: string
    logo?: Buffer | null
    isApproved?: boolean
    isPublished?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string | null
    tipe_usaha?: $Enums.tipe_usaha_enum | null
    jenis_usaha?: $Enums.jenis_usaha_enum | null
  }

  export type community_chatCreateManyUserInput = {
    chat_id: string
    community_proposal_id: string
    chat: string
    created_at?: Date | string
  }

  export type community_membershipCreateManyUserInput = {
    community_membership_id: string
    community_id: string
    joinedDate?: Date | string
    exited_date?: Date | string | null
  }

  export type discussionCreateManyUserInput = {
    discussion_id: string
    campaign_id: string
    createdAt?: Date | string
    lastActivity?: Date | string | null
    message: string
    like?: number | null
  }

  export type investmentCreateManyUserInput = {
    investment_id: string
    campaign_id: string
    amount: bigint | number
    investment_date?: Date | string
  }

  export type refundCreateManyUserInput = {
    refund_id: string
    amount: bigint | number
    nama_bank?: string | null
    nomor_bank?: string | null
    alasan_refund?: string | null
    isAproved?: boolean | null
    statusUpdate?: string | null
    updatedAt?: Date | string
    createdAt?: Date | string | null
    isConfirmed?: boolean
    approved_amount?: bigint | number | null
    reason_reduce?: string | null
  }

  export type transactionCreateManyUserInput = {
    transaction_id: string
    transaction_type?: $Enums.transaction_type_enum | null
    transaction_status?: $Enums.transaction_status_enum | null
    trans_date?: Date | string | null
    payment?: string | null
    amount?: bigint | number | null
    campaign_id?: string | null
  }

  export type user_votedCreateManyUserInput = {
    user_voted_id: string
    community_proposal_id: string
  }

  export type campaignUpdateWithoutUserInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUpdateManyWithoutCampaignNestedInput
    document?: documentUpdateOneWithoutCampaignNestedInput
    investment?: investmentUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateWithoutUserInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
    alamat_usaha?: alamat_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    campaign_update?: campaign_updateUncheckedUpdateManyWithoutCampaignNestedInput
    contact_usaha?: contact_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    crowdfunding?: crowdfundingUncheckedUpdateOneWithoutCampaignNestedInput
    discussion?: discussionUncheckedUpdateManyWithoutCampaignNestedInput
    document?: documentUncheckedUpdateOneWithoutCampaignNestedInput
    investment?: investmentUncheckedUpdateManyWithoutCampaignNestedInput
    legalitas_usaha?: legalitas_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    pesan_campaign?: pesan_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    social_media_usaha?: social_media_usahaUncheckedUpdateOneWithoutCampaignNestedInput
    team_campaign?: team_campaignUncheckedUpdateManyWithoutCampaignNestedInput
    transaction?: transactionUncheckedUpdateManyWithoutCampaignNestedInput
  }

  export type campaignUncheckedUpdateManyWithoutUserInput = {
    campaign_id?: StringFieldUpdateOperationsInput | string
    nama_usaha?: StringFieldUpdateOperationsInput | string
    deskripsi_usaha?: StringFieldUpdateOperationsInput | string
    logo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipe_usaha?: NullableEnumtipe_usaha_enumFieldUpdateOperationsInput | $Enums.tipe_usaha_enum | null
    jenis_usaha?: NullableEnumjenis_usaha_enumFieldUpdateOperationsInput | $Enums.jenis_usaha_enum | null
  }

  export type community_chatUpdateWithoutUserInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_proposal?: community_proposalUpdateOneRequiredWithoutCommunity_chatNestedInput
  }

  export type community_chatUncheckedUpdateWithoutUserInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    community_proposal_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_chatUncheckedUpdateManyWithoutUserInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    community_proposal_id?: StringFieldUpdateOperationsInput | string
    chat?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_membershipUpdateWithoutUserInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    community?: communityUpdateOneRequiredWithoutCommunity_membershipNestedInput
  }

  export type community_membershipUncheckedUpdateWithoutUserInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_membershipUncheckedUpdateManyWithoutUserInput = {
    community_membership_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    joinedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    exited_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type discussionUpdateWithoutUserInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
    campaign?: campaignUpdateOneRequiredWithoutDiscussionNestedInput
    replies_discussion?: replies_discussionUpdateManyWithoutDiscussionNestedInput
  }

  export type discussionUncheckedUpdateWithoutUserInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
    replies_discussion?: replies_discussionUncheckedUpdateManyWithoutDiscussionNestedInput
  }

  export type discussionUncheckedUpdateManyWithoutUserInput = {
    discussion_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: StringFieldUpdateOperationsInput | string
    like?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type investmentUpdateWithoutUserInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    campaign?: campaignUpdateOneRequiredWithoutInvestmentNestedInput
  }

  export type investmentUncheckedUpdateWithoutUserInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type investmentUncheckedUpdateManyWithoutUserInput = {
    investment_id?: StringFieldUpdateOperationsInput | string
    campaign_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    investment_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type refundUpdateWithoutUserInput = {
    refund_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_bank?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_refund?: NullableStringFieldUpdateOperationsInput | string | null
    isAproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfirmed?: BoolFieldUpdateOperationsInput | boolean
    approved_amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    reason_reduce?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refundUncheckedUpdateWithoutUserInput = {
    refund_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_bank?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_refund?: NullableStringFieldUpdateOperationsInput | string | null
    isAproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfirmed?: BoolFieldUpdateOperationsInput | boolean
    approved_amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    reason_reduce?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refundUncheckedUpdateManyWithoutUserInput = {
    refund_id?: StringFieldUpdateOperationsInput | string
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_bank?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_refund?: NullableStringFieldUpdateOperationsInput | string | null
    isAproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    statusUpdate?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfirmed?: BoolFieldUpdateOperationsInput | boolean
    approved_amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    reason_reduce?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transactionUpdateWithoutUserInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    campaign?: campaignUpdateOneWithoutTransactionNestedInput
  }

  export type transactionUncheckedUpdateWithoutUserInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transactionUncheckedUpdateManyWithoutUserInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    transaction_type?: NullableEnumtransaction_type_enumFieldUpdateOperationsInput | $Enums.transaction_type_enum | null
    transaction_status?: NullableEnumtransaction_status_enumFieldUpdateOperationsInput | $Enums.transaction_status_enum | null
    trans_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_votedUpdateWithoutUserInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    community_proposal?: community_proposalUpdateOneRequiredWithoutUser_votedNestedInput
  }

  export type user_votedUncheckedUpdateWithoutUserInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    community_proposal_id?: StringFieldUpdateOperationsInput | string
  }

  export type user_votedUncheckedUpdateManyWithoutUserInput = {
    user_voted_id?: StringFieldUpdateOperationsInput | string
    community_proposal_id?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CampaignCountOutputTypeDefaultArgs instead
     */
    export type CampaignCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CampaignCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CommunityCountOutputTypeDefaultArgs instead
     */
    export type CommunityCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CommunityCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Community_proposalCountOutputTypeDefaultArgs instead
     */
    export type Community_proposalCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Community_proposalCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DiscussionCountOutputTypeDefaultArgs instead
     */
    export type DiscussionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DiscussionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DocumentCountOutputTypeDefaultArgs instead
     */
    export type DocumentCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DocumentCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Team_campaignCountOutputTypeDefaultArgs instead
     */
    export type Team_campaignCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Team_campaignCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use addressDefaultArgs instead
     */
    export type addressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = addressDefaultArgs<ExtArgs>
    /**
     * @deprecated Use alamat_usahaDefaultArgs instead
     */
    export type alamat_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = alamat_usahaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use campaignDefaultArgs instead
     */
    export type campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = campaignDefaultArgs<ExtArgs>
    /**
     * @deprecated Use campaign_updateDefaultArgs instead
     */
    export type campaign_updateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = campaign_updateDefaultArgs<ExtArgs>
    /**
     * @deprecated Use communityDefaultArgs instead
     */
    export type communityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = communityDefaultArgs<ExtArgs>
    /**
     * @deprecated Use community_chatDefaultArgs instead
     */
    export type community_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = community_chatDefaultArgs<ExtArgs>
    /**
     * @deprecated Use community_membershipDefaultArgs instead
     */
    export type community_membershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = community_membershipDefaultArgs<ExtArgs>
    /**
     * @deprecated Use community_proposalDefaultArgs instead
     */
    export type community_proposalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = community_proposalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use contact_usahaDefaultArgs instead
     */
    export type contact_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = contact_usahaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use crowdfundingDefaultArgs instead
     */
    export type crowdfundingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = crowdfundingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use data_rekeningDefaultArgs instead
     */
    export type data_rekeningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = data_rekeningDefaultArgs<ExtArgs>
    /**
     * @deprecated Use discussionDefaultArgs instead
     */
    export type discussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = discussionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use documentDefaultArgs instead
     */
    export type documentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = documentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use document_legalDefaultArgs instead
     */
    export type document_legalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = document_legalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use document_proposalDefaultArgs instead
     */
    export type document_proposalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = document_proposalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use foto_dokumenDefaultArgs instead
     */
    export type foto_dokumenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = foto_dokumenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use highlight_productDefaultArgs instead
     */
    export type highlight_productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = highlight_productDefaultArgs<ExtArgs>
    /**
     * @deprecated Use investmentDefaultArgs instead
     */
    export type investmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = investmentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use kyc_level_1DefaultArgs instead
     */
    export type kyc_level_1Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = kyc_level_1DefaultArgs<ExtArgs>
    /**
     * @deprecated Use kyc_level_2DefaultArgs instead
     */
    export type kyc_level_2Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = kyc_level_2DefaultArgs<ExtArgs>
    /**
     * @deprecated Use legalitas_usahaDefaultArgs instead
     */
    export type legalitas_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = legalitas_usahaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use pesan_campaignDefaultArgs instead
     */
    export type pesan_campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = pesan_campaignDefaultArgs<ExtArgs>
    /**
     * @deprecated Use product_informationDefaultArgs instead
     */
    export type product_informationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = product_informationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use refundDefaultArgs instead
     */
    export type refundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = refundDefaultArgs<ExtArgs>
    /**
     * @deprecated Use replies_discussionDefaultArgs instead
     */
    export type replies_discussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = replies_discussionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use social_media_usahaDefaultArgs instead
     */
    export type social_media_usahaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = social_media_usahaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use team_campaignDefaultArgs instead
     */
    export type team_campaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = team_campaignDefaultArgs<ExtArgs>
    /**
     * @deprecated Use transactionDefaultArgs instead
     */
    export type transactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = transactionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use userDefaultArgs instead
     */
    export type userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = userDefaultArgs<ExtArgs>
    /**
     * @deprecated Use user_votedDefaultArgs instead
     */
    export type user_votedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = user_votedDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}